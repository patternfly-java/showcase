function e(e){return e&&e.__esModule?e.default:e}var t,n,d,a,i,o,r,l,s,m,c,p,u=globalThis,b={},x={},g=u.parcelRequire1def;null==g&&((g=function(e){if(e in b)return b[e].exports;if(e in x){var t=x[e];delete x[e];var n={id:e,exports:{}};return b[e]=n,t.call(n.exports,n,n.exports),n.exports}var d=Error("Cannot find module '"+e+"'");throw d.code="MODULE_NOT_FOUND",d}).register=function(e,t){x[e]=t},u.parcelRequire1def=g),(0,g.register)("27Lyk",function(e,t){Object.defineProperty(e.exports,"register",{get:()=>n,set:e=>n=e,enumerable:!0,configurable:!0});var n,d=new Map;n=function(e,t){for(var n=0;n<t.length-1;n+=2)d.set(t[n],{baseUrl:e,path:t[n+1]})}}),g("27Lyk").register(new URL("",import.meta.url).toString(),JSON.parse('["kiQLE","index.151c57f3.js","lNo32","avatar-light.ec5f3d80.svg","fPfbq","avatar-dark.da420df2.svg","1GqMj","pf-logo.8f9cf908.svg","irRzA","index.61047798.css"]'));var I=function(e,t,n,d,a){if("m"===d)throw TypeError("Private method is not writable");if("a"===d&&!a)throw TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!a:!t.has(e))throw TypeError("Cannot write private member to an object whose class did not declare it");return"a"===d?a.call(e,n):a?a.value=n:t.set(e,n),n},h=function(e,t,n,d){if("a"===n&&!d)throw TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!d:!t.has(e))throw TypeError("Cannot read private member from an object whose class did not declare it");return"m"===n?d:"a"===n?d.call(e):d?d.value:t.get(e)};const f="undefined"!=typeof Intl&&Intl.ListFormat||class{formatToParts(e){let t=[];for(let n of e)t.push({type:"element",value:n}),t.push({type:"literal",value:", "});return t.slice(0,-1)}},C=[["years","year"],["months","month"],["weeks","week"],["days","day"],["hours","hour"],["minutes","minute"],["seconds","second"],["milliseconds","millisecond"]],v={minimumIntegerDigits:2};class y{constructor(e,n={}){t.set(this,void 0);let d=String(n.style||"short");"long"!==d&&"short"!==d&&"narrow"!==d&&"digital"!==d&&(d="short");let a="digital"===d?"numeric":d,i=n.hours||a;a="2-digit"===i?"numeric":i;let o=n.minutes||a;a="2-digit"===o?"numeric":o;let r=n.seconds||a;a="2-digit"===r?"numeric":r;let l=n.milliseconds||a;I(this,t,{locale:e,style:d,years:n.years||"digital"===d?"short":d,yearsDisplay:"always"===n.yearsDisplay?"always":"auto",months:n.months||"digital"===d?"short":d,monthsDisplay:"always"===n.monthsDisplay?"always":"auto",weeks:n.weeks||"digital"===d?"short":d,weeksDisplay:"always"===n.weeksDisplay?"always":"auto",days:n.days||"digital"===d?"short":d,daysDisplay:"always"===n.daysDisplay?"always":"auto",hours:i,hoursDisplay:"always"===n.hoursDisplay?"always":"digital"===d?"always":"auto",minutes:o,minutesDisplay:"always"===n.minutesDisplay?"always":"digital"===d?"always":"auto",seconds:r,secondsDisplay:"always"===n.secondsDisplay?"always":"digital"===d?"always":"auto",milliseconds:l,millisecondsDisplay:"always"===n.millisecondsDisplay?"always":"auto"},"f")}resolvedOptions(){return h(this,t,"f")}formatToParts(e){let n=[],d=h(this,t,"f"),a=d.style,i=d.locale;for(let[t,a]of C){let o=e[t];if("auto"===d[`${t}Display`]&&!o)continue;let r=d[t],l="2-digit"===r?v:"numeric"===r?{}:{style:"unit",unit:a,unitDisplay:r};n.push(new Intl.NumberFormat(i,l).format(o))}return new f(i,{type:"unit",style:"digital"===a?"short":a}).formatToParts(n)}format(e){return this.formatToParts(e).map(e=>e.value).join("")}}t=new WeakMap;const T=/^[-+]?P(?:(\d+)Y)?(?:(\d+)M)?(?:(\d+)W)?(?:(\d+)D)?(?:T(?:(\d+)H)?(?:(\d+)M)?(?:(\d+)S)?)?$/,k=["year","month","week","day","hour","minute","second","millisecond"],L=e=>T.test(e);class w{constructor(e=0,t=0,n=0,d=0,a=0,i=0,o=0,r=0){this.years=e,this.months=t,this.weeks=n,this.days=d,this.hours=a,this.minutes=i,this.seconds=o,this.milliseconds=r,this.years||(this.years=0),this.sign||(this.sign=Math.sign(this.years)),this.months||(this.months=0),this.sign||(this.sign=Math.sign(this.months)),this.weeks||(this.weeks=0),this.sign||(this.sign=Math.sign(this.weeks)),this.days||(this.days=0),this.sign||(this.sign=Math.sign(this.days)),this.hours||(this.hours=0),this.sign||(this.sign=Math.sign(this.hours)),this.minutes||(this.minutes=0),this.sign||(this.sign=Math.sign(this.minutes)),this.seconds||(this.seconds=0),this.sign||(this.sign=Math.sign(this.seconds)),this.milliseconds||(this.milliseconds=0),this.sign||(this.sign=Math.sign(this.milliseconds)),this.blank=0===this.sign}abs(){return new w(Math.abs(this.years),Math.abs(this.months),Math.abs(this.weeks),Math.abs(this.days),Math.abs(this.hours),Math.abs(this.minutes),Math.abs(this.seconds),Math.abs(this.milliseconds))}static from(e){var t;if("string"==typeof e){let n=String(e).trim(),d=n.startsWith("-")?-1:1,a=null===(t=n.match(T))||void 0===t?void 0:t.slice(1).map(e=>(Number(e)||0)*d);return a?new w(...a):new w}if("object"==typeof e){let{years:t,months:n,weeks:d,days:a,hours:i,minutes:o,seconds:r,milliseconds:l}=e;return new w(t,n,d,a,i,o,r,l)}throw RangeError("invalid duration")}static compare(e,t){let n=Date.now(),d=Math.abs(G(n,w.from(e)).getTime()-n),a=Math.abs(G(n,w.from(t)).getTime()-n);return d>a?-1:d<a?1:0}toLocaleString(e,t){return new y(e,t).format(this)}}function G(e,t){let n=new Date(e);return n.setFullYear(n.getFullYear()+t.years),n.setMonth(n.getMonth()+t.months),n.setDate(n.getDate()+7*t.weeks+t.days),n.setHours(n.getHours()+t.hours),n.setMinutes(n.getMinutes()+t.minutes),n.setSeconds(n.getSeconds()+t.seconds),n}function S(e,{relativeTo:t=Date.now()}={}){if(t=new Date(t),e.blank)return e;let n=e.sign,d=Math.abs(e.years),a=Math.abs(e.months),i=Math.abs(e.weeks),o=Math.abs(e.days),r=Math.abs(e.hours),l=Math.abs(e.minutes),s=Math.abs(e.seconds),m=Math.abs(e.milliseconds);m>=900&&(s+=Math.round(m/1e3)),(s||l||r||o||i||a||d)&&(m=0),s>=55&&(l+=Math.round(s/60)),(l||r||o||i||a||d)&&(s=0),l>=55&&(r+=Math.round(l/60)),(r||o||i||a||d)&&(l=0),o&&r>=12&&(o+=Math.round(r/24)),!o&&r>=21&&(o+=Math.round(r/24)),(o||i||a||d)&&(r=0);let c=t.getFullYear(),p=t.getMonth(),u=t.getDate();if(o>=27||d+a+o){let e=new Date(t);e.setFullYear(c+d*n),e.setMonth(p+a*n),e.setDate(u+o*n);let r=e.getFullYear()-t.getFullYear(),l=e.getMonth()-t.getMonth(),s=Math.abs(Math.round((Number(e)-Number(t))/864e5)),m=Math.abs(12*r+l);s<27?(o>=6?(i+=Math.round(o/7),o=0):o=s,a=d=0):m<11?(a=m,d=0):(a=0,d=r*n),(a||d)&&(o=0),p=t.getMonth()}return d&&(a=0),i>=4&&(a+=Math.round(i/4)),(a||d)&&(i=0),o&&i&&!a&&!d&&(i+=Math.round(o/7),o=0),new w(d*n,a*n,i*n,o*n,r*n,l*n,s*n,m*n)}var D=function(e,t,n,d){if("a"===n&&!d)throw TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!d:!t.has(e))throw TypeError("Cannot read private member from an object whose class did not declare it");return"m"===n?d:"a"===n?d.call(e):d?d.value:t.get(e)},A=function(e,t,n,d,a){if("m"===d)throw TypeError("Private method is not writable");if("a"===d&&!a)throw TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!a:!t.has(e))throw TypeError("Cannot write private member to an object whose class did not declare it");return"a"===d?a.call(e,n):a?a.value=n:t.set(e,n),n};const M=globalThis.HTMLElement||null,B=new w,F=new w(0,0,0,0,0,1);class H extends Event{constructor(e,t,n,d){super("relative-time-updated",{bubbles:!0,composed:!0}),this.oldText=e,this.newText=t,this.oldTitle=n,this.newTitle=d}}function _(e){if(!e.date)return 1/0;if("duration"===e.format||"elapsed"===e.format){let t=e.precision;if("second"===t)return 1e3;if("minute"===t)return 6e4}let t=Math.abs(Date.now()-e.date.getTime());return t<6e4?1e3:t<36e5?6e4:36e5}const P=new class{constructor(){this.elements=new Set,this.time=1/0,this.timer=-1}observe(e){if(this.elements.has(e))return;this.elements.add(e);let t=e.date;if(t&&t.getTime()){let t=_(e),n=Date.now()+t;n<this.time&&(clearTimeout(this.timer),this.timer=setTimeout(()=>this.update(),t),this.time=n)}}unobserve(e){this.elements.has(e)&&this.elements.delete(e)}update(){if(clearTimeout(this.timer),!this.elements.size)return;let e=1/0;for(let t of this.elements)e=Math.min(e,_(t)),t.update();this.time=Math.min(36e5,e),this.timer=setTimeout(()=>this.update(),this.time),this.time+=Date.now()}};d=new WeakMap,a=new WeakMap,o=new WeakMap,p=new WeakMap,n=new WeakSet,i=function(){var e;return(null===(e=this.closest("[lang]"))||void 0===e?void 0:e.getAttribute("lang"))||this.ownerDocument.documentElement.getAttribute("lang")||"default"},r=function(e){return new Intl.DateTimeFormat(D(this,n,"a",i),{day:"numeric",month:"short",year:"numeric",hour:"numeric",minute:"2-digit",timeZoneName:"short"}).format(e)},l=function(e){let t=this.format;if("datetime"===t)return"datetime";if("duration"===t||"elapsed"===t||"micro"===t)return"duration";if(("auto"===t||"relative"===t)&&"undefined"!=typeof Intl&&Intl.RelativeTimeFormat){let t=this.tense;if("past"===t||"future"===t||1===w.compare(e,this.threshold))return"relative"}return"datetime"},s=function(e){let t=D(this,n,"a",i),d=this.format,a=this.formatStyle,o=this.tense,r=B;"micro"===d?(e=S(e),r=F,("past"===this.tense&&-1!==e.sign||"future"===this.tense&&1!==e.sign)&&(e=F)):("past"===o&&-1!==e.sign||"future"===o&&1!==e.sign)&&(e=r);let l=`${this.precision}sDisplay`;return e.blank?r.toLocaleString(t,{style:a,[l]:"always"}):e.abs().toLocaleString(t,{style:a})},m=function(e){let t=new Intl.RelativeTimeFormat(D(this,n,"a",i),{numeric:"auto",style:this.formatStyle}),d=this.tense;"future"===d&&1!==e.sign&&(e=B),"past"===d&&-1!==e.sign&&(e=B);let[a,o]=function(e,t){let n=S(e,void 0);if(n.blank)return[0,"second"];for(let e of k){if("millisecond"===e)continue;let t=n[`${e}s`];if(t)return[t,e]}return[0,"second"]}(e);return"second"===o&&a<10?t.format(0,"second"):t.format(a,o)},c=function(e){let t=new Intl.DateTimeFormat(D(this,n,"a",i),{second:this.second,minute:this.minute,hour:this.hour,weekday:this.weekday,day:this.day,month:this.month,year:this.year,timeZoneName:this.timeZoneName});return`${this.prefix} ${t.format(e)}`.trim()};const z="undefined"!=typeof globalThis?globalThis:window;try{z.RelativeTimeElement=(class extends M{constructor(){super(...arguments),n.add(this),d.set(this,!1),a.set(this,!1),o.set(this,this.shadowRoot?this.shadowRoot:this.attachShadow?this.attachShadow({mode:"open"}):this),p.set(this,null)}static define(e="relative-time",t=customElements){return t.define(e,this),this}static get observedAttributes(){return["second","minute","hour","weekday","day","month","year","time-zone-name","prefix","threshold","tense","precision","format","format-style","datetime","lang","title"]}get onRelativeTimeUpdated(){return D(this,p,"f")}set onRelativeTimeUpdated(e){D(this,p,"f")&&this.removeEventListener("relative-time-updated",D(this,p,"f")),A(this,p,"object"==typeof e||"function"==typeof e?e:null,"f"),"function"==typeof e&&this.addEventListener("relative-time-updated",e)}get second(){let e=this.getAttribute("second");if("numeric"===e||"2-digit"===e)return e}set second(e){this.setAttribute("second",e||"")}get minute(){let e=this.getAttribute("minute");if("numeric"===e||"2-digit"===e)return e}set minute(e){this.setAttribute("minute",e||"")}get hour(){let e=this.getAttribute("hour");if("numeric"===e||"2-digit"===e)return e}set hour(e){this.setAttribute("hour",e||"")}get weekday(){let e=this.getAttribute("weekday");return"long"===e||"short"===e||"narrow"===e?e:"datetime"===this.format&&""!==e?this.formatStyle:void 0}set weekday(e){this.setAttribute("weekday",e||"")}get day(){var e;let t=null!==(e=this.getAttribute("day"))&&void 0!==e?e:"numeric";if("numeric"===t||"2-digit"===t)return t}set day(e){this.setAttribute("day",e||"")}get month(){let e=this.format,t=this.getAttribute("month");if(""!==t&&(null!=t||(t="datetime"===e?this.formatStyle:"short"),"numeric"===t||"2-digit"===t||"short"===t||"long"===t||"narrow"===t))return t}set month(e){this.setAttribute("month",e||"")}get year(){var e;let t=this.getAttribute("year");return"numeric"===t||"2-digit"===t?t:this.hasAttribute("year")||new Date().getUTCFullYear()===(null===(e=this.date)||void 0===e?void 0:e.getUTCFullYear())?void 0:"numeric"}set year(e){this.setAttribute("year",e||"")}get timeZoneName(){let e=this.getAttribute("time-zone-name");if("long"===e||"short"===e||"shortOffset"===e||"longOffset"===e||"shortGeneric"===e||"longGeneric"===e)return e}set timeZoneName(e){this.setAttribute("time-zone-name",e||"")}get prefix(){var e;return null!==(e=this.getAttribute("prefix"))&&void 0!==e?e:"datetime"===this.format?"":"on"}set prefix(e){this.setAttribute("prefix",e)}get threshold(){let e=this.getAttribute("threshold");return e&&L(e)?e:"P30D"}set threshold(e){this.setAttribute("threshold",e)}get tense(){let e=this.getAttribute("tense");return"past"===e?"past":"future"===e?"future":"auto"}set tense(e){this.setAttribute("tense",e)}get precision(){let e=this.getAttribute("precision");return k.includes(e)?e:"micro"===this.format?"minute":"second"}set precision(e){this.setAttribute("precision",e)}get format(){let e=this.getAttribute("format");return"datetime"===e?"datetime":"relative"===e?"relative":"duration"===e?"duration":"micro"===e?"micro":"elapsed"===e?"elapsed":"auto"}set format(e){this.setAttribute("format",e)}get formatStyle(){let e=this.getAttribute("format-style");if("long"===e)return"long";if("short"===e)return"short";if("narrow"===e)return"narrow";let t=this.format;return"elapsed"===t||"micro"===t?"narrow":"datetime"===t?"short":"long"}set formatStyle(e){this.setAttribute("format-style",e)}get datetime(){return this.getAttribute("datetime")||""}set datetime(e){this.setAttribute("datetime",e)}get date(){let e=Date.parse(this.datetime);return Number.isNaN(e)?null:new Date(e)}set date(e){this.datetime=(null==e?void 0:e.toISOString())||""}connectedCallback(){this.update()}disconnectedCallback(){P.unobserve(this)}attributeChangedCallback(e,t,i){t===i||("title"===e&&A(this,d,null!==i&&(this.date&&D(this,n,"m",r).call(this,this.date))!==i,"f"),D(this,a,"f")||"title"===e&&D(this,d,"f")||A(this,a,(async()=>{await Promise.resolve(),this.update()})(),"f"))}update(){let e=D(this,o,"f").textContent||this.textContent||"",t=this.getAttribute("title")||"",i=t,p=this.date;if("undefined"==typeof Intl||!Intl.DateTimeFormat||!p){D(this,o,"f").textContent=e;return}let u=Date.now();!D(this,d,"f")&&(i=D(this,n,"m",r).call(this,p)||"")&&this.setAttribute("title",i);let b=function(e,t="second",n=Date.now()){let d=e.getTime()-n;if(0===d)return new w;let a=Math.sign(d),i=Math.abs(d),o=Math.floor(i/1e3),r=Math.floor(o/60),l=Math.floor(r/60),s=Math.floor(l/24),m=Math.floor(s/30),c=Math.floor(m/12),p=k.indexOf(t)||k.length;return new w(p>=0?c*a:0,p>=1?(m-12*c)*a:0,0,p>=3?(s-30*m)*a:0,p>=4?(l-24*s)*a:0,p>=5?(r-60*l)*a:0,p>=6?(o-60*r)*a:0,p>=7?(i-1e3*o)*a:0)}(p,this.precision,u),x=D(this,n,"m",l).call(this,b),g=e;(g="duration"===x?D(this,n,"m",s).call(this,b):"relative"===x?D(this,n,"m",m).call(this,b):D(this,n,"m",c).call(this,p))?D(this,o,"f").textContent=g:this.shadowRoot===D(this,o,"f")&&this.textContent&&(D(this,o,"f").textContent=this.textContent),(g!==e||i!==t)&&this.dispatchEvent(new H(e,g,t,i)),"relative"===x||"duration"===x?P.observe(this):P.unobserve(this),A(this,a,!1,"f")}}).define()}catch(e){if(!(z.DOMException&&e instanceof DOMException&&"NotSupportedError"===e.name)&&!(e instanceof ReferenceError))throw e}var E={};E=new URL("avatar-light.ec5f3d80.svg",import.meta.url).toString();var O={};O=new URL("avatar-dark.da420df2.svg",import.meta.url).toString();var N={};N=new URL("pf-logo.8f9cf908.svg",import.meta.url).toString();const R={avatarLight:e(E),avatarDark:e(O),pfLogo:e(N)};window.PatternFlyAssets=R;var j={};j={"accordion-bordered":'div()\n        .add(accordion().singleExpand().bordered()\n                .addItem(accordionItem("accordion-bordered-0", "Item one").expanded()\n                        .add(p().textContent(LoremIpsum.paragraphs(5))))\n                .addItem(accordionItem("accordion-bordered-1", "Item two")\n                        .add(p().textContent(LoremIpsum.paragraphs(7))))\n                .addItem(accordionItem("accordion-bordered-2", "Item three")\n                        .add(p().textContent(LoremIpsum.paragraphs(6))))\n                .addItem(accordionItem("accordion-bordered-3", "Item four")\n                        .addBody(accordionItemBody()\n                                .add(p().textContent(LoremIpsum.paragraphs(30))))\n                        .addBody(accordionItemBody()\n                                .add(button()\n                                        .text("Call to action")\n                                        .link()\n                                        .inline())))\n                .addItem(accordionItem("accordion-bordered-4", "Item five")\n                        .add(p().textContent(LoremIpsum.paragraphs(3)))))\n        .element()',"accordion-dl":'div()\n        .add(accordion().singleExpand()\n                .addItem(accordionItem("accordion-dl-0", "Item one").expanded()\n                        .add(p().textContent(LoremIpsum.paragraphs(5))))\n                .addItem(accordionItem("accordion-dl-1", "Item two")\n                        .add(p().textContent(LoremIpsum.paragraphs(7))))\n                .addItem(accordionItem("accordion-dl-2", "Item three")\n                        .add(p().textContent(LoremIpsum.paragraphs(6))))\n                .addItem(accordionItem("accordion-dl-3", "Item four")\n                        .add(p().textContent(LoremIpsum.paragraphs(30))))\n                .addItem(accordionItem("accordion-dl-4", "Item five")\n                        .add(p().textContent(LoremIpsum.paragraphs(3)))))\n        .element()',"accordion-fixed":'div()\n        .add(accordion(false).fixed()\n                .addItem(accordionItem("accordion-fixed-0", "Item one").expanded()\n                        .add(p().textContent(LoremIpsum.paragraphs(20))))\n                .addItem(accordionItem("accordion-fixed-1", "Item two")\n                        .add(p().textContent(LoremIpsum.paragraphs(15))))\n                .addItem(accordionItem("accordion-fixed-2", "Item three")\n                        .add(p().textContent(LoremIpsum.paragraphs(10))))\n                .addItem(accordionItem("accordion-fixed-3", "Item four")\n                        .add(p().textContent(LoremIpsum.paragraphs(50))))\n                .addItem(accordionItem("accordion-fixed-4", "Item five")\n                        .add(p().textContent(LoremIpsum.paragraphs(5)))))\n        .element()',"accordion-large":'div()\n        .add(accordion().singleExpand().large()\n                .addItem(accordionItem("accordion-large-0", "Item one").expanded()\n                        .add(p().textContent(LoremIpsum.paragraphs(5))))\n                .addItem(accordionItem("accordion-large-1", "Item two")\n                        .add(p().textContent(LoremIpsum.paragraphs(7))))\n                .addItem(accordionItem("accordion-large-2", "Item three")\n                        .add(p().textContent(LoremIpsum.paragraphs(6))))\n                .addItem(accordionItem("accordion-large-3", "Item four")\n                        .addBody(accordionItemBody()\n                                .add(p().textContent(LoremIpsum.paragraphs(30))))\n                        .addBody(accordionItemBody()\n                                .add(button()\n                                        .iconAndText(arrowRight, "Call to action", end)\n                                        .link()\n                                        .inline()\n                                        .callToAction())))\n                .addItem(accordionItem("accordion-large-4", "Item five")\n                        .add(p().textContent(LoremIpsum.paragraphs(3)))))\n        .element()',"accordion-single":'div()\n        .add(accordion(false).singleExpand()\n                .addItem(accordionItem("accordion-single-0", "Item one").expanded()\n                        .add(p().textContent(LoremIpsum.paragraphs(5))))\n                .addItem(accordionItem("accordion-single-1", "Item two")\n                        .add(p().textContent(LoremIpsum.paragraphs(7))))\n                .addItem(accordionItem("accordion-single-2", "Item three")\n                        .add(p().textContent(LoremIpsum.paragraphs(6))))\n                .addItem(accordionItem("accordion-single-3", "Item four")\n                        .add(p().textContent(LoremIpsum.paragraphs(30))))\n                .addItem(accordionItem("accordion-single-4", "Item five")\n                        .add(p().textContent(LoremIpsum.paragraphs(3)))))\n        .element()',"action-list-icons":"div()\n        .add(actionList().icons()\n                .addItem(actionListItem()\n                        .add(button().icon(times).plain()))\n                .addItem(actionListItem()\n                        .add(button().icon(check).plain())))\n        .element()","action-list-multiple-groups":'div()\n        .add("In modals, forms, data lists")\n        .add(actionList()\n                .addItem(actionListItem()\n                        .add(button("Save").primary()))\n                .addItem(actionListItem()\n                        .add(button("Cancel").link())))\n        .add(br())\n        .add("In wizards")\n        .add(actionList()\n                .addGroup(actionListGroup()\n                        .addItem(actionListItem()\n                                .add(button("Next").primary()))\n                        .addItem(actionListItem()\n                                .add(button("Back").secondary())))\n                .addGroup(actionListGroup()\n                        .addItem(actionListItem()\n                                .add(button("Cancel").link()))))\n        .element()',"action-list-single-group":'Dropdown dropdown = dropdown()\n        .addToggle(menuToggle(ellipsisV, "kebab dropdown toggle"))\n        .addMenu(menu()\n                .addContent(menuContent()\n                        .addList(menuList()\n                                .addItem(actionMenuItem("item-0", "Action"))\n                                .addItem(linkMenuItem("item-1", "Link", "#item-1"))\n                                .addItem(actionMenuItem("item-2", "Disabled action")\n                                        .disabled())\n                                .addItem(linkMenuItem("item-3", "Disabled link", "#item-3")\n                                        .disabled())\n                                .addDivider()\n                                .addItem(actionMenuItem("item-4", "Separated action"))\n                                .addItem(linkMenuItem("item-5", "Separated link", "#item-5")))));\nreturn div()\n        .add(actionList()\n                .addItem(actionListItem()\n                        .add(button("Next").primary()))\n                .addItem(actionListItem()\n                        .add(button("Back").secondary())))\n        .add(br())\n        .add("With kebab")\n        .add(actionList()\n                .addItem(actionListItem()\n                        .add(button("Next").primary()))\n                .addItem(actionListItem()\n                        .add(button("Back").secondary()))\n                .addItem(actionListItem()\n                        .add(dropdown)))\n        .element();',"alert-custom-icons":'div()\n        .add(alert(custom, "Default alert title").icon(users))\n        .add(br())\n        .add(alert(info, "Info alert title").icon(box))\n        .add(br())\n        .add(alert(success, "Success alert title").icon(database))\n        .add(br())\n        .add(alert(warning, "Warning alert title").icon(server))\n        .add(br())\n        .add(alert(danger, "Danger alert title").icon(laptop))\n        .element()',"alert-expandable":'div()\n        .add(alert(success, "Success alert title")\n                .expandable()\n                .closable((e, a) -> DomGlobal.alert("Clicked the close button"))\n                .addDescription(\n                        "Success alert description. This should tell the user more information about the alert.")\n                .addActionGroup(alertActionGroup()\n                        .addAction("View details", (e, a) -> DomGlobal.alert("Clicked on View details"))\n                        .addAction("Ignore", (e, a) -> DomGlobal.alert("Clicked on Ignore"))))\n        .add(br())\n        .add(alert(success, "Success alert title").inline()\n                .expandable()\n                .closable((e, a) -> DomGlobal.alert("Clicked the close button"))\n                .addDescription(\n                        "Success alert description. This should tell the user more information about the alert.")\n                .addActionGroup(alertActionGroup()\n                        .addAction("View details", (e, a) -> DomGlobal.alert("Clicked on View details"))\n                        .addAction("Ignore", (e, a) -> DomGlobal.alert("Clicked on Ignore"))))\n        .element()',"alert-group-asynchronous":'final int[] counter = {0};\nfinal double[] intervalHandle = {0};\nreturn div()\n        .add(actionList()\n                .addItem(actionListItem()\n                        .add(button("Start async alerts").secondary()\n                                .onClick((e, b) -> intervalHandle[0] = setInterval(__ -> {\n                                    counter[0] = counter[0] + 1;\n                                    alertGroup(toast)\n                                            .addAlert(alert(danger, "Async notification " + counter[0]\n                                                    + " was added to the queue."));\n                                }, 1_000))))\n                .addItem(actionListItem()\n                        .add(button("Stop async alerts").secondary()\n                                .onClick((e, b) -> {\n                                    counter[0] = 0;\n                                    clearInterval(intervalHandle[0]);\n                                }))))\n        .element();',"alert-group-static-inline":'div()\n        .add(alertGroup(staticInline)\n                .addAlert(alert(success, "Success alert").inline())\n                .addAlert(alert(info, "Info alert"))) // inline is added automatically!\n        .element()',"alert-group-toast":'div()\n        .add(actionList()\n                .addItem(actionListItem()\n                        .add(button("Add toast success alert").secondary()\n                                .onClick((e, b) -> alertGroup(toast)\n                                        .addAlert(alert(success, "Toast success alert")))))\n                .addItem(actionListItem()\n                        .add(button("Add toast danger alert").secondary()\n                                .onClick((e, b) -> alertGroup(toast)\n                                        .addAlert(alert(danger, "Toast danger alert")))))\n                .addItem(actionListItem()\n                        .add(button("Add toast info alert").secondary()\n                                .onClick((e, b) -> alertGroup(toast)\n                                        .addAlert(alert(info, "Toast info alert"))))))\n        .element()',"alert-inline-variants":'div()\n        .add(alert(custom, "Custom inline alert title").inline())\n        .add(br())\n        .add(alert(info, "Info inline alert title").inline())\n        .add(br())\n        .add(alert(success, "Success inline alert title").inline())\n        .add(br())\n        .add(alert(warning, "Warning inline alert title").inline())\n        .add(br())\n        .add(alert(danger, "Danger inline alert title").inline())\n        .element()',"alert-inline-variations":'div()\n        .add(alert(success, "Success alert title")\n                .inline()\n                .closable((e, a) -> DomGlobal.alert("Clicked the close button"))\n                .addDescription(\n                        "Success alert description. This should tell the user more information about the alert.")\n                .addActionGroup(alertActionGroup()\n                        .addAction("View details", (e, a) -> DomGlobal.alert("Clicked on View details"))\n                        .addAction("Ignore", (e, a) -> DomGlobal.alert("Clicked on Ignore"))))\n        .add(br())\n        .add(alert(success, "Success alert title")\n                .inline()\n                .closable((e, a) -> DomGlobal.alert("Clicked the close button"))\n                .addDescription(alertDescription()\n                        .add(p()\n                                .add("Success alert description. This should tell the user more information about the alert. ")\n                                .add(a("#").textContent("This is a link"))\n                                .add("."))))\n        .add(br())\n        .add(alert(success, "Success alert title")\n                .inline()\n                .closable((e, a) -> DomGlobal.alert("Clicked the close button"))\n                .addActionGroup(alertActionGroup()\n                        .addAction(button("View details").inline().link(),\n                                (e, a) -> DomGlobal.alert("Clicked on View details"))\n                        .addAction(button("Ignore").inline().link(),\n                                (e, a) -> DomGlobal.alert("Clicked on Ignore"))))\n        .add(br())\n        .add(alert(success, "Success alert title")\n                .inline()\n                .closable((e, a) -> DomGlobal.alert("Clicked the close button")))\n        .add(br())\n        .add(alert(success, "Success alert title")\n                .inline())\n        .element()',"alert-plain-inline-variants":'div()\n        .add(alert(custom, "Custom inline alert title").inline().plain())\n        .add(br())\n        .add(alert(info, "Info inline alert title").inline().plain())\n        .add(br())\n        .add(alert(success, "Success inline alert title").inline().plain())\n        .add(br())\n        .add(alert(warning, "Warning inline alert title").inline().plain())\n        .add(br())\n        .add(alert(danger, "Danger inline alert title").inline().plain())\n        .element()',"alert-plain-inline-variations":'div()\n        .add(alert(success, "Success alert title")\n                .inline().plain()\n                .addDescription(\n                        "Success alert description. This should tell the user more information about the alert."))\n        .element()',"alert-static-live-region":'div()\n        .add(alert(info, "Default live region configuration")\n                .closable()\n                .liveRegion()\n                .addDescription(alertDescription()\n                        .add(p()\n                                .add("This alert uses the recommended ")\n                                .add(code("liveRegion()"))\n                                .add(" modifier to automatically set ARIA attributes and CSS classes."))))\n        .add(br())\n        .add(alert(info, "Customized live region")\n                .closable()\n                .aria(live, "assertive")\n                .aria(atomic, true)\n                .aria(relevant, "additions text")\n                .addDescription(alertDescription()\n                        .add(p()\n                                .add("You can alternatively omit the ")\n                                .add(code("liveRegion()"))\n                                .add(" to specify ARIA attributes and CSS manually on the containing element."))))\n        .element()',"alert-timeout":'HTMLElement alerts = ul().css(component(alertGroup), util("mt-sm"))\n        .aria(live, "polite")\n        .aria(Aria.atomic, false)\n        .attr(role, "list")\n        .element();\nreturn div()\n        .add(actionList()\n                .addItem(actionListItem()\n                        .add(button("Add alert").secondary()\n                                .onClick((event, button) -> alerts.appendChild(li()\n                                        .add(alert(custom, "Default timeout Alert")\n                                                .timeout()\n                                                .addDescription("This alert will dismiss after 8 seconds")\n                                                .addActionGroup(alertActionGroup()\n                                                        .addAction("View details")\n                                                        .addAction("Ignore")))\n                                        .element()))))\n                .addItem(actionListItem()\n                        .add(button("Remove all alerts").secondary()\n                                .onClick((event, button) -> removeChildrenFrom(alerts)))))\n        .add(alerts)\n        .element();',"alert-truncate":"div()\n        .add(alert(info, LoremIpsum.paragraphs(10)).truncate(1))\n        .add(br())\n        .add(alert(warning, LoremIpsum.paragraphs(10)).truncate(2))\n        .add(br())\n        .add(alert(danger, LoremIpsum.paragraphs(10)).truncate(3))\n        .element()","alert-variants":'div()\n        .add(alert(custom, "Custom alert title"))\n        .add(br())\n        .add(alert(info, "Info alert title"))\n        .add(br())\n        .add(alert(success, "Success alert title"))\n        .add(br())\n        .add(alert(warning, "Warning alert title"))\n        .add(br())\n        .add(alert(danger, "Danger alert title"))\n        .element()',"alert-variations":'div()\n        .add(alert(success, "Success alert title")\n                .closable((e, a) -> DomGlobal.alert("Clicked the close button"))\n                .addDescription(\n                        "Success alert description. This should tell the user more information about the alert.")\n                .addActionGroup(alertActionGroup()\n                        .addAction("View details", (e, a) -> DomGlobal.alert("Clicked on View details"))\n                        .addAction("Ignore", (e, a) -> DomGlobal.alert("Clicked on Ignore"))))\n        .add(br())\n        .add(alert(success, "Success alert title")\n                .closable((e, a) -> DomGlobal.alert("Clicked the close button"))\n                .addDescription(alertDescription()\n                        .add(p()\n                                .add("Success alert description. This should tell the user more information about the alert. ")\n                                .add(a("#").textContent("This is a link"))\n                                .add("."))))\n        .add(br())\n        .add(alert(success, "Success alert title")\n                .closable((e, a) -> DomGlobal.alert("Clicked the close button"))\n                .addActionGroup(alertActionGroup()\n                        .addAction(button("View details").inline().link(),\n                                (e, a) -> DomGlobal.alert("Clicked on View details"))\n                        .addAction(button("Ignore").inline().link(),\n                                (e, a) -> DomGlobal.alert("Clicked on Ignore"))))\n        .add(br())\n        .add(alert(success, "Success alert title")\n                .closable((e, a) -> DomGlobal.alert("Clicked the close button")))\n        .add(br())\n        .add(alert(success, "Success alert title"))\n        .element()',"avatar-basic":'div()\n        .add(avatar(avatarLight, "avatar"))\n        .element()',"avatar-bordered-dark":'div()\n        .add(avatar(avatarDark, "avatar").border(dark))\n        .element()',"avatar-bordered-light":'div()\n        .add(avatar(avatarLight, "avatar").border(light))\n        .element()',"avatar-size":'div()\n        .add("Small").add(br())\n        .add(avatar(avatarLight, "avatar").size(sm))\n        .add(br()).add(br())\n        .add("Medium").add(br())\n        .add(avatar(avatarLight, "avatar").size(md))\n        .add(br()).add(br())\n        .add("Large").add(br())\n        .add(avatar(avatarLight, "avatar").size(lg))\n        .add(br()).add(br())\n        .add("Extra large").add(br())\n        .add(avatar(avatarLight, "avatar").size(xl))\n        .element()',"badge-read":'div()\n        .add(badge(7).read()).add(" ")\n        .add(badge(24).read()).add(" ")\n        .add(badge(423).read()).add(" ")\n        .add(badge(1000).limit(999).read())\n        .add(br())\n        .add(badge(7).read().display(v -> v + " apples")).add(" ")\n        .add(badge(24).read().display(v -> v + " apples")).add(" ")\n        .add(badge(423).read().display(v -> v + " apples")).add(" ")\n        .add(badge(1000).limit(999).read()\n                .display(v -> v + " apples")\n                .maxDisplay(v -> "More apples than you can ever eat"))\n        .element()',"badge-unread":'div()\n        .add(badge(7).unread()).add(" ")\n        .add(badge(24).unread()).add(" ")\n        .add(badge(423).unread()).add(" ")\n        .add(badge(1000).limit(999).unread())\n        .add(br())\n        .add(badge(7).unread().display(v -> v + " apples")).add(" ")\n        .add(badge(24).unread().display(v -> v + " apples")).add(" ")\n        .add(badge(423).unread().display(v -> v + " apples")).add(" ")\n        .add(badge(1000).limit(999).unread()\n                .display(v -> v + " apples")\n                .maxDisplay(v -> "More apples than you can ever eat"))\n        .element()',"banner-basic":'div()\n        .add(banner("Default banner"))\n        .add(br())\n        .add(banner("Blue banner", blue))\n        .add(br())\n        .add(banner("Red banner", red))\n        .add(br())\n        .add(banner("Green banner", green))\n        .add(br())\n        .add(banner("Gold banner", gold))\n        .element()',"banner-links":'div()\n        .add(banner()\n                .add("Default banner with a ")\n                .add(a("https://www.w3.org/TR/WCAG20-TECHS/ARIA8.html#ARIA8-examples")\n                        .textContent("link")))\n        .add(br())\n        .add(banner()\n                .add("Default banner with a ")\n                .add(a("#")\n                        .css(modifier(disabled))\n                        .attr(role, "link")\n                        .aria(Aria.disabled, true)\n                        .textContent("disabled link")))\n        .add(br())\n        .add(banner(blue)\n                .add("Blue banner with an ")\n                .add(button("inline link button")\n                        .link().inline()))\n        .add(br())\n        .add(banner(gold)\n                .add("Gold banner with an ")\n                .add(button("inline link button (anchor)",\n                        "https://www.w3.org/TR/WCAG20-TECHS/ARIA8.html#ARIA8-examples")\n                        .link().inline()))\n        .add(br())\n        .add(banner(red)\n                .add("Red banner with a ")\n                .add(button("disabled inline link button")\n                        .link().inline().disabled()))\n        .element()',"banner-status":'div()\n        .add(banner().screenReader("Default banner")\n                .add(flex().spaceItems(breakpoints(default_, sm))\n                        .addItem(flexItem().add(inlineIcon(bell)))\n                        .addItem(flexItem().textContent("Default banner"))))\n        .add(br())\n        .add(banner(blue).screenReader("Info banner")\n                .add(flex().spaceItems(breakpoints(default_, sm))\n                        .addItem(flexItem().add(inlineIcon(infoCircle)))\n                        .addItem(flexItem().textContent("Info banner"))))\n        .add(br())\n        .add(banner(red).screenReader("Danger banner")\n                .add(flex().spaceItems(breakpoints(default_, sm))\n                        .addItem(flexItem().add(inlineIcon(exclamationCircle)))\n                        .addItem(flexItem().textContent("Danger banner"))))\n        .add(br())\n        .add(banner(green).screenReader("Success banner")\n                .add(flex().spaceItems(breakpoints(default_, sm))\n                        .addItem(flexItem().add(inlineIcon(checkCircle)))\n                        .addItem(flexItem().textContent("Success banner"))))\n        .add(br())\n        .add(banner(gold).screenReader("Warning banner")\n                .add(flex().spaceItems(breakpoints(default_, sm))\n                        .addItem(flexItem().add(inlineIcon(exclamationTriangle)))\n                        .addItem(flexItem().textContent("Warning"))))\n        .element()',"brand-basic":'div()\n        .add(brand("https://www.patternfly.org/assets/images/pf_logo.svg", "PatternFly logo"))\n        .element()',"brand-responsive":'div()\n        .add(brand()\n                .widths(breakpoints(default_, "40px", sm, "60px", md, "220px"))\n                .addSource("https://www.patternfly.org/assets/images/pf-c-brand__logo-on-xl.svg",\n                        "(min-width: 1200px)")\n                .addSource("https://www.patternfly.org/assets/images/pf-c-brand__logo-on-lg.svg",\n                        "(min-width: 992px)")\n                .addSource("https://www.patternfly.org/assets/images/pf-c-brand__logo-on-md.svg",\n                        "(min-width: 768px)")\n                .addSource("https://www.patternfly.org/assets/images/pf-c-brand__logo-on-sm.svg",\n                        "(min-width: 576px)")\n                .addSource("https://www.patternfly.org/assets/images/pf-c-brand__logo.svg")\n                .addImg(img("https://www.patternfly.org/assets/images/pf-c-brand__logo-base.jpg")\n                        .apply(i -> i.alt = "PatternFly fallback logo")))\n        .element()',"breadcrumb-basic":'div()\n        .add(breadcrumb()\n                .addItem(breadcrumbItem("Section home", "#item-0"))\n                .addItem(breadcrumbItem("Section title", "#item-1"))\n                .addItem(breadcrumbItem("Section title", "#item-2"))\n                .addItem(breadcrumbItem("Section landing", "#item-3").active()))\n        .element()',"breadcrumb-dropdown":"div()\n        .add(nyi())\n        .element()","breadcrumb-heading":"div()\n        .add(nyi())\n        .element()","breadcrumb-no-home-link":'div()\n        .add(breadcrumb()\n                .addItem(breadcrumbItem("Section home"))\n                .addItem(breadcrumbItem("Section title", "#item-0"))\n                .addItem(breadcrumbItem("Section title", "#item-1"))\n                .addItem(breadcrumbItem("Section title", "#item-2"))\n                .addItem(breadcrumbItem("Section title", "#item-3"))\n                .addItem(breadcrumbItem("Section landing", "#item-4").active()))\n        .element()',"btt-basic":'div().id("ws-core-c-back-to-top-basic")\n        .add(backToTop().alwaysVisible())\n        .element()',"bullseye-basic":'div().css("ws-core-l-bullseye")\n        .add(bullseye()\n                .addItem(bullseyeItem().textContent("Bullseye ◎ layout")))\n        .element()',"button-block-level":'div()\n        .add(button("Block level button").primary().block())\n        .element()',"button-block-links":'div()\n        .add(button("Link to docs", "https://www.patternfly.org/", "_blank").primary())\n        .add(" ")\n        .add(button("Secondary link to docs", "https://www.patternfly.org/", "_blank").secondary())\n        .add(" ")\n        .add(button("Tertiary link to docs", "https://www.patternfly.org/", "_blank").tertiary()\n                .disabled())\n        .add(" ")\n        .add(button("Jump to lifecycle in developer contributions",\n                "https://www.patternfly.org/get-started/contribute/developer-contributions#lifecycle").link())\n        .element()',"button-count":'div()\n        .add(div()\n                .add(p().textContent("Unread"))\n                .add(button("View issues").primary().addBadge(badge(7).unread()))\n                .add(" ")\n                .add(button("View issues").secondary().addBadge(badge(7).unread()))\n                .add(" ")\n                .add(button("View issues").tertiary().addBadge(badge(7).unread()))\n                .add(" ")\n                .add(button("View issues").control().addBadge(badge(7).unread()))\n                .add(" ")\n                .add(button("View issues").link().addBadge(badge(7).unread())))\n        .add(div().css(util("mt-sm"))\n                .add(p().textContent("Unread disabled"))\n                .add(button("View issues").primary().disabled().addBadge(badge(7).unread()))\n                .add(" ")\n                .add(button("View issues").secondary().disabled().addBadge(badge(7).unread()))\n                .add(" ")\n                .add(button("View issues").tertiary().disabled().addBadge(badge(7).unread()))\n                .add(" ")\n                .add(button("View issues").control().disabled().addBadge(badge(7).unread()))\n                .add(" ")\n                .add(button("View issues").link().disabled().addBadge(badge(7).unread())))\n        .add(div().css(util("mt-sm"))\n                .add(p().textContent("Read"))\n                .add(button("View issues").primary().addBadge(badge(10).read()))\n                .add(" ")\n                .add(button("View issues").secondary().addBadge(badge(10).read()))\n                .add(" ")\n                .add(button("View issues").tertiary().addBadge(badge(10).read()))\n                .add(" ")\n                .add(button("View issues").control().addBadge(badge(10).read()))\n                .add(" ")\n                .add(button("View issues").link().addBadge(badge(10).read())))\n        .add(div().css(util("mt-sm"))\n                .add(p().textContent("Read disabled"))\n                .add(button("View issues").primary().disabled().addBadge(badge(10).read()))\n                .add(" ")\n                .add(button("View issues").secondary().disabled().addBadge(badge(10).read()))\n                .add(" ")\n                .add(button("View issues").tertiary().disabled().addBadge(badge(10).read()))\n                .add(" ")\n                .add(button("View issues").control().disabled().addBadge(badge(10).read()))\n                .add(" ")\n                .add(button("View issues").link().disabled().addBadge(badge(10).read())))\n        .element()',"button-cta":'div()\n        .add(button("Call to action").primary().callToAction())\n        .add(" ")\n        .add(button("Call to action").secondary().callToAction())\n        .add(" ")\n        .add(button("Call to action").tertiary().callToAction())\n        .add(" ")\n        .add(button().iconAndText(arrowRight, "Call to action", end).link().callToAction())\n        .element()',"button-disabled":'div()\n        .add(div()\n                .add(button("Primary disabled").primary().disabled())\n                .add(" ")\n                .add(button("Secondary disabled").secondary().disabled())\n                .add(" ")\n                .add(button("Danger secondary disabled").secondary().danger().disabled())\n                .add(" ")\n                .add(button("Tertiary disabled").tertiary().disabled())\n                .add(" ")\n                .add(button("Danger disabled").danger().disabled())\n                .add(" ")\n                .add(button("Warning disabled").warning().disabled()))\n        .add(div().css(util("mt-lg"))\n                .add(button().iconAndText(plusCircle, "Link disabled").link().disabled())\n                .add(" ")\n                .add(button("Inline link disabled").inline().link().disabled())\n                .add(" ")\n                .add(button("Danger link disabled").link().danger().disabled()))\n        .add(div().css(util("mt-lg"))\n                .add(button().icon(times).plain().disabled()))\n        .add(div().css(util("mt-lg"))\n                .add(button("Control disabled").control().disabled())\n                .add(" ")\n                .add(button().icon(copy).control().disabled()))\n        .element()',"button-progress":'div()\n        .add(div()\n                .add(button("Click to stop loading").primary().progress(true)\n                        .onClick((event, button) -> {\n                            button.toggleProgress();\n                            if (button.inProgress()) {\n                                button.text("Click to stop loading");\n                            } else {\n                                button.text("Click to start loading");\n                            }\n                        }))\n                .add(" ")\n                .add(button("Click to stop loading").secondary().progress(true)\n                        .onClick((event, button) -> {\n                            button.toggleProgress();\n                            if (button.inProgress()) {\n                                button.text("Click to stop loading");\n                            } else {\n                                button.text("Click to start loading");\n                            }\n                        })))\n        .add(div().css(util("mt-lg"))\n                .add(button().icon(upload).plain()\n                        .onClick((event, button) -> button.toggleProgress())))\n        .add(div().css(util("mt-lg"))\n                .add(button("Pause loading logs").link().inline().progress(true)\n                        .onClick((event, button) -> {\n                            button.toggleProgress();\n                            if (button.inProgress()) {\n                                button.text("Pause loading logs");\n                            } else {\n                                button.text("Resume loading logs");\n                            }\n                        })))\n        .element()',"button-small":'() -> div()\n        .add(button("Primary").primary().small())\n        .add(" ")\n        .add(button("Secondary").secondary().small())\n        .add(" ")\n        .add(button("Danger secondary").secondary().danger().small())\n        .add(" ")\n        .add(button("Tertiary").tertiary().small())\n        .add(" ")\n        .add(button("Danger").danger().small())\n        .add(" ")\n        .add(button("Warning").warning().small())\n        .element()',"button-variant-examples":'div()\n        .add(div()\n                .add(button("Primary").primary())\n                .add(" ")\n                .add(button().primary().iconAndText(externalLinkSquareAlt, "Primary with icon", start))\n                .add(" ")\n                .add(button("Secondary").secondary())\n                .add(" ")\n                .add(button("Danger secondary").secondary().danger())\n                .add(" ")\n                .add(button("Tertiary").tertiary())\n                .add(" ")\n                .add(button("Danger").danger())\n                .add(" ")\n                .add(button("Warning").warning()))\n        .add(div().css(util("mt-lg"))\n                .add(button().iconAndText(plusCircle, "Link").link())\n                .add(" ")\n                .add(button().iconAndText(externalLinkSquareAlt, "Link", end).link())\n                .add(" ")\n                .add(button("Inline link").inline().link())\n                .add(" ")\n                .add(button("Danger link").link().danger()))\n        .add(div().css(util("mt-lg"))\n                .add(button().icon(times).plain()))\n        .add(div().css(util("mt-lg"))\n                .add(button("Control").control())\n                .add(" ")\n                .add(button().icon(copy).control()))\n        .element()',"card-basic":'div()\n        .add(card()\n                .addTitle(cardTitle("Title"))\n                .addBody(cardBody().textContent("Body"))\n                .addFooter(cardFooter().textContent("Footer")))\n        .element()',"card-clickable-selectable":'Card card = card();\nreturn div()\n        .add(card.name("clickable-selectable-card")\n                .clickable()\n                .selectable()\n                .addHeader(cardHeader()\n                        .addTitle(cardTitle()\n                                .add(button("First card")\n                                        .link()\n                                        .inline()\n                                        .onClick((e, b) -> card.select(!card.selected()))))\n                        .addActions(cardActions().noOffset()\n                                .addSelectableActions(cardSelectableActions())))\n                .addBody(cardBody().textContent(\n                        "This card performs an action upon clicking the card title and is selectable.")))\n        .add(card().name("clickable-selectable-card")\n                .clickable()\n                .selectable()\n                .addHeader(cardHeader()\n                        .addTitle(cardTitle("Second card"))\n                        .addActions(cardActions().noOffset()\n                                .addSelectableActions(cardSelectableActions())))\n                .addBody(cardBody()\n                        .add("This card is selectable and has a link in the card body that navigates to ")\n                        .add(button("PatternFly", "#")\n                                .link()\n                                .inline())\n                        .add(".")))\n        .add(card().name("clickable-selectable-card").disabled()\n                .clickable()\n                .selectable()\n                .addHeader(cardHeader()\n                        .addTitle(cardTitle("Third card"))\n                        .addActions(cardActions().noOffset()\n                                .addSelectableActions(cardSelectableActions())))\n                .addBody(cardBody().textContent("This card is clickable and selectable, but disabled.")))\n        .element();',"card-clickable":'div()\n        .add(card().name("clickable-card")\n                .clickable((e, c) -> console.log("Card clicked: " + c.element().id))\n                .addHeader(cardHeader()\n                        .addTitle(cardTitle("First card"))\n                        .addActions(cardActions().noOffset()\n                                .addSelectableActions(cardSelectableActions())))\n                .addBody(cardBody().textContent("This card performs an action on click.")))\n        .add(card().name("clickable-card")\n                .clickable("#")\n                .addHeader(cardHeader()\n                        .addTitle(cardTitle("Second card"))\n                        .addActions(cardActions().noOffset()\n                                .addSelectableActions(cardSelectableActions())))\n                .addBody(cardBody().textContent("This card can navigate to a link on click.")))\n        .add(card().name("clickable-card").disabled()\n                .clickable((e, c) -> console.log("Selected card: " + c.element().id))\n                .addHeader(cardHeader()\n                        .addTitle(cardTitle("Third card"))\n                        .addActions(cardActions().noOffset()\n                                .addSelectableActions(cardSelectableActions())))\n                .addBody(cardBody().textContent("This card is single clickable but disabled.")))\n        .element()',"card-expandable-image":'Dropdown dropdown = dropdown()\n        .addToggle(menuToggle(ellipsisV, "kebab dropdown toggle"))\n        .addMenu(menu()\n                .addContent(menuContent()\n                        .addList(menuList()\n                                .addItem(actionMenuItem("item-0", "Action"))\n                                .addItem(linkMenuItem("item-1", "Link", "#item-1"))\n                                .addItem(actionMenuItem("item-2", "Disabled action")\n                                        .disabled())\n                                .addItem(linkMenuItem("item-3", "Disabled link", "#item-3")\n                                        .disabled())\n                                .addDivider()\n                                .addItem(actionMenuItem("item-4", "Separated action"))\n                                .addItem(linkMenuItem("item-5", "Separated link", "#item-5")))));\n\nreturn div()\n        .add(card().expandable()\n                .addHeader(cardHeader()\n                        .addActions(cardActions()\n                                .add(dropdown)\n                                .add(checkbox("card-expandable-image-check",\n                                        "card-expandable-image-check")))\n                        .add(img("https://www.patternfly.org/assets/images/pf-logo-small.svg")\n                                .apply(i -> {\n                                    i.alt = "PatternFly logo";\n                                    i.setAttribute("width", "27px");\n                                })))\n                .addExpandableContent(cardExpandableContent()\n                        .addBody(cardBody().textContent("Body"))\n                        .addFooter(cardFooter().textContent("Footer"))))\n        .element();',"card-expandable":'Dropdown dropdown1 = dropdown()\n        .addToggle(menuToggle(ellipsisV, "kebab dropdown toggle"))\n        .addMenu(menu()\n                .addContent(menuContent()\n                        .addList(menuList()\n                                .addItem(actionMenuItem("item-0", "Action"))\n                                .addItem(linkMenuItem("item-1", "Link", "#item-1"))\n                                .addItem(actionMenuItem("item-2", "Disabled action")\n                                        .disabled())\n                                .addItem(linkMenuItem("item-3", "Disabled link", "#item-3")\n                                        .disabled())\n                                .addDivider()\n                                .addItem(actionMenuItem("item-4", "Separated action"))\n                                .addItem(linkMenuItem("item-5", "Separated link", "#item-5")))));\n\nDropdown dropdown2 = dropdown()\n        .addToggle(menuToggle(ellipsisV, "kebab dropdown toggle"))\n        .addMenu(menu()\n                .addContent(menuContent()\n                        .addList(menuList()\n                                .addItem(actionMenuItem("item-0", "Action"))\n                                .addItem(linkMenuItem("item-1", "Link", "#item-1"))\n                                .addItem(actionMenuItem("item-2", "Disabled action")\n                                        .disabled())\n                                .addItem(linkMenuItem("item-3", "Disabled link", "#item-3")\n                                        .disabled())\n                                .addDivider()\n                                .addItem(actionMenuItem("item-4", "Separated action"))\n                                .addItem(linkMenuItem("item-5", "Separated link", "#item-5")))));\n\nreturn div()\n        .add(card().expandable()\n                .addHeader(cardHeader()\n                        .addActions(cardActions()\n                                .add(dropdown1)\n                                .add(checkbox("card-expandable-check-1", "card-expandable-check")))\n                        .addTitle(cardTitle("Title")))\n                .addExpandableContent(cardExpandableContent()\n                        .addBody(cardBody().textContent("Body"))\n                        .addFooter(cardFooter().textContent("Footer"))))\n        .add(br())\n        .add(card().expandable(true)\n                .addHeader(cardHeader()\n                        .addActions(cardActions()\n                                .add(dropdown2)\n                                .add(checkbox("card-expandable-check-2", "card-expandable-check")))\n                        .addTitle(cardTitle("Title")))\n                .addExpandableContent(cardExpandableContent()\n                        .addBody(cardBody().textContent("Body"))\n                        .addFooter(cardFooter().textContent("Footer"))))\n        .element();',"card-header-image":'Dropdown dropdown = dropdown()\n        .addToggle(menuToggle(ellipsisV, "kebab dropdown toggle"))\n        .addMenu(menu()\n                .addContent(menuContent()\n                        .addList(menuList()\n                                .addItem(actionMenuItem("item-0", "Action"))\n                                .addItem(linkMenuItem("item-1", "Link", "#item-0"))\n                                .addItem(actionMenuItem("item-2", "Disabled action")\n                                        .disabled())\n                                .addItem(linkMenuItem("item-3", "Disabled link", "#item-3")\n                                        .disabled())\n                                .addDivider()\n                                .addItem(actionMenuItem("item-4", "Separated action"))\n                                .addItem(linkMenuItem("item-5", "Separated link", "#item-5")))));\nCardActions cardActions = cardActions();\nreturn div()\n        .add(card()\n                .addHeader(cardHeader()\n                        .addActions(cardActions\n                                .add(dropdown)\n                                .add(checkbox("card-header-image-check", "card-header-image-check")))\n                        .add(brand("https://www.patternfly.org/assets/images/pf_logo.svg", "PatternFly")\n                                .style("width", "300px")))\n                .addTitle(cardTitle("Title"))\n                .addBody(cardBody().textContent("Body"))\n                .addFooter(cardFooter().textContent("Footer")))\n        .add(div().css(util("mt-md"))\n                .add(checkbox("card-header-image-no-offset", "card-header-image-no-offset", "no offset")\n                        .onChange((e, c, value) -> cardActions.noOffset(value))))\n        .element();',"card-header-no-title":'Dropdown dropdown = dropdown()\n        .addToggle(menuToggle(ellipsisV, "kebab dropdown toggle"))\n        .addMenu(menu()\n                .addContent(menuContent()\n                        .addList(menuList()\n                                .addItem(actionMenuItem("item-0", "Action"))\n                                .addItem(linkMenuItem("item-1", "Link", "#item-1"))\n                                .addItem(actionMenuItem("item-2", "Disabled action")\n                                        .disabled())\n                                .addItem(linkMenuItem("item-3", "Disabled link", "#item-3")\n                                        .disabled())\n                                .addDivider()\n                                .addItem(actionMenuItem("item-4", "Separated action"))\n                                .addItem(linkMenuItem("item-5", "Separated link", "#item-5")))));\nreturn div()\n        .add(card()\n                .addHeader(cardHeader()\n                        .addActions(cardActions()\n                                .add(dropdown)\n                                .add(checkbox("card-header-no-title-check", "card-header-no-title-check"))))\n                .addBody(cardBody()\n                        .textContent("This is the card body. There are only actions in the card head.")))\n        .element();',"card-heading":'div()\n        .add(card()\n                .addTitle(cardTitle("Title within an <h4> element", 4))\n                .addBody(cardBody().textContent("Body"))\n                .addFooter(cardFooter().textContent("Footer")))\n        .element()',"card-modifiers":'Card card = card();\nreturn div()\n        .add(div().css(util("mb-md"))\n                .add(checkbox("card-modifiers-compact", "card-modifiers", "compact")\n                        .onChange((e, c, value) -> card.compact(value)))\n                .add(checkbox("card-modifiers-flat", "card-modifiers", "flat")\n                        .onChange((e, c, value) -> card.flat(value)))\n                .add(checkbox("card-modifiers-rounded", "card-modifiers", "rounded")\n                        .onChange((e, c, value) -> card.rounded(value)))\n                .add(checkbox("card-modifiers-large", "card-modifiers", "large")\n                        .onChange((e, c, value) -> card.large(value)))\n                .add(checkbox("card-modifiers-fullHeight", "card-modifiers", "fullHeight")\n                        .onChange((e, c, value) -> card.fullHeight(value)))\n                .add(checkbox("card-modifiers-plain", "card-modifiers", "plain")\n                        .onChange((e, c, value) -> card.plain(value))))\n        .add(div().style("height", "15rem")\n                .add(card\n                        .addTitle(cardTitle("Title"))\n                        .addBody(cardBody().textContent("Body"))\n                        .addFooter(cardFooter().textContent("Footer"))))\n        .element();',"card-multiple-bodies":'div()\n        .add(card()\n                .addTitle(cardTitle("Title"))\n                .addBody(cardBody().textContent("Body"))\n                .addBody(cardBody().textContent("Body"))\n                .addBody(cardBody().textContent("Body"))\n                .addFooter(cardFooter().textContent("Footer")))\n        .element()',"card-primary-body-fill":'div()\n        .add(card().style("min-height", "30em")\n                .addTitle(cardTitle("Title"))\n                .addBody(cardBody().noFill().textContent("Body " + modifier(noFill)))\n                .addBody(cardBody().noFill().textContent("Body " + modifier(noFill)))\n                .addBody(cardBody().textContent("Body"))\n                .addFooter(cardFooter().textContent("Footer")))\n        .element()',"card-selectable":'div()\n        .add(card().name("selectable-card")\n                .selectable(\n                        (e, c, selected) -> console.log("card(" + c.element().id + ") selected: " + selected))\n                .addHeader(cardHeader()\n                        .addTitle(cardTitle("First card"))\n                        .addActions(cardActions().noOffset()\n                                .addSelectableActions(cardSelectableActions())))\n                .addBody(cardBody().textContent("This card is selectable.")))\n        .add(card().name("selectable-card")\n                .selectable(\n                        (e, c, selected) -> console.log("card(" + c.element().id + ") selected: " + selected))\n                .addHeader(cardHeader()\n                        .addTitle(cardTitle("Second card"))\n                        .addActions(cardActions().noOffset()\n                                .addSelectableActions(cardSelectableActions())))\n                .addBody(cardBody().textContent("This card is selectable.")))\n        .add(card().name("selectable-card").disabled()\n                .selectable(\n                        (e, c, selected) -> console.log("card(" + c.element().id + ") selected: " + selected))\n                .addHeader(cardHeader()\n                        .addTitle(cardTitle("Third card"))\n                        .addActions(cardActions().noOffset()\n                                .addSelectableActions(cardSelectableActions())))\n                .addBody(cardBody().textContent("This card is selectable but disabled.")))\n        .element()',"card-single-selectable":'div()\n        .add(card().name("single-selectable-card")\n                .selectable(single,\n                        (e, c, selected) -> console.log("card(" + c.element().id + ") selected: " + selected))\n                .addHeader(cardHeader()\n                        .addTitle(cardTitle("First card"))\n                        .addActions(cardActions().noOffset()\n                                .addSelectableActions(cardSelectableActions())))\n                .addBody(cardBody().textContent("This card is single selectable.")))\n        .add(card().name("single-selectable-card")\n                .selectable(single,\n                        (e, c, selected) -> console.log("card(" + c.element().id + ") selected: " + selected))\n                .addHeader(cardHeader()\n                        .addTitle(cardTitle("Second card"))\n                        .addActions(cardActions().noOffset()\n                                .addSelectableActions(cardSelectableActions())))\n                .addBody(cardBody().textContent("This card is single selectable.")))\n        .add(card().name("single-selectable-card").disabled()\n                .selectable(single,\n                        (e, c, selected) -> console.log("card(" + c.element().id + ") selected: " + selected))\n                .addHeader(cardHeader()\n                        .addTitle(cardTitle("Third card"))\n                        .addActions(cardActions().noOffset()\n                                .addSelectableActions(cardSelectableActions())))\n                .addBody(cardBody().textContent("This card is single selectable but disabled.")))\n        .element()',"card-title-inline":'Dropdown dropdown = dropdown()\n        .addToggle(menuToggle(ellipsisV, "kebab dropdown toggle"))\n        .addMenu(menu()\n                .addContent(menuContent()\n                        .addList(menuList()\n                                .addItem(actionMenuItem("item-0", "Action"))\n                                .addItem(linkMenuItem("item-1", "Link", "#item-1"))\n                                .addItem(actionMenuItem("item-2", "Disabled action")\n                                        .disabled())\n                                .addItem(linkMenuItem("item-3", "Disabled link", "#item-3")\n                                        .disabled())\n                                .addDivider()\n                                .addItem(actionMenuItem("item-4", "Separated action"))\n                                .addItem(linkMenuItem("item-5", "Separated link", "#item-5")))));\nreturn div()\n        .add(card()\n                .addHeader(cardHeader()\n                        .addTitle(cardTitle(\n                                "This is a really really really really really really really really really really long header"))\n                        .addActions(cardActions()\n                                .add(dropdown)\n                                .add(checkbox("card-title-inline-check", "card-title-inline-check"))))\n                .addBody(cardBody().textContent("Body"))\n                .addFooter(cardFooter().textContent("Footer")))\n        .element();',"checkbox-basic":'div()\n        .add(checkbox("basic-checkbox-0", "basic-checkbox", "Checkbox 1")\n                .value(true))\n        .add(checkbox("basic-checkbox-1", "basic-checkbox", "Checkbox 2"))\n        .element()',"checkbox-body":'div()\n        .add(checkbox("cwb-0", "cwb", "Checkbox with body")\n                .addBody(checkboxBody("This is where custom content goes.")))\n        .element()',"checkbox-description-body":'div()\n        .add(checkbox("cdb-0", "cdb", "Checkbox with description and body")\n                .addDescription(checkboxDescription(LoremIpsum.words(50)))\n                .addBody(checkboxBody("This is where custom content goes.")))\n        .element()',"checkbox-description":'div()\n        .add(checkbox("cwd-0", "cwd", "Checkbox with description")\n                .addDescription(checkboxDescription(LoremIpsum.words(50))))\n        .element()',"checkbox-disabled":'div()\n        .add(checkbox("disabled-checkbox-0", "disabled-checkbox", "Disabled checkbox 1")\n                .value(true)\n                .disabled())\n        .add(checkbox("disabled-checkbox-1", "disabled-checkbox", "Disabled checkbox 2")\n                .disabled())\n        .element()',"checkbox-required":'div()\n        .add(checkbox("required-checkbox-0", "required-checkbox", "Required checkbox")\n                .required())\n        .element()',"checkbox-standalone":'div()\n        .add(checkbox("standalone-checkbox-0", "standalone-checkbox")\n                .standalone())\n        .element()',"chip-group-category":'div()\n        .add(chipGroup("Category one")\n                .addChip(chip("Chip one"))\n                .addChip(chip("Really long chip that goes on and on"))\n                .addChip(chip("Chip three"))\n                .addChip(chip("Chip four"))\n                .addChip(chip("Chip five")))\n        .element()',"chip-group-removable-category":'div()\n        .add(chipGroup("Category one")\n                .closable()\n                .addChip(chip("Chip one"))\n                .addChip(chip("Chip two"))\n                .addChip(chip("Chip three")))\n        .add(br())\n        .add(br())\n        .add(chipGroup("Category two has a very long name")\n                .closable()\n                .addChip(chip("Chip one"))\n                .addChip(chip("Chip two"))\n                .addChip(chip("Chip three"))\n                .addChip(chip("Chip four")))\n        .element()',"chip-group":'div()\n        .add(chipGroup()\n                .addChip(chip("Chip one"))\n                .addChip(chip("Really long chip that goes on and on"))\n                .addChip(chip("Chip three"))\n                .addChip(chip("Chip four"))\n                .addChip(chip("Chip five")))\n        .element()',"chip-variants":'div()\n        .add(chip("Chip 1"))\n        .add(br())\n        .add(br())\n        .add(chip("Really long chip that goes on and on"))\n        .add(br())\n        .add(br())\n        .add(chip("Chip").addBadge(badge(7).read()))\n        .add(br())\n        .add(br())\n        .add(chip("Read-only chip").readonly())\n        .element()',"code-block-basic":'div()\n        .add(codeBlock()\n                .addAction(codeBlockCopyToClipboardAction())\n                .addAction(codeBlockAction(play)\n                        .ariaLabel("Play")\n                        .onClick((action, codeBlock) -> console.log(\n                                "Play not yet implemented")))\n                .code(CODE))\n        .element()',"code-block-expandable":'div()\n        .add(codeBlock()\n                .addAction(codeBlockCopyToClipboardAction())\n                .addAction(codeBlockAction(play)\n                        .ariaLabel("Play")\n                        .onClick((action, codeBlock) -> console.log("Play not yet implemented")))\n                .truncate()\n                .code(CODE))\n        .element()',"code-editor-basic":'div()\n        .add(codeEditor()\n                .addHeader(codeEditorHeader()\n                        .addActions(codeEditorActions()\n                                .addAction(codeEditorCopyToClipboardAction())\n                                .addAction(codeEditorAction(download))\n                                .addAction(codeEditorAction(upload)))\n                        .addTab(codeEditorTab(PredefinedIcon.code, "Java")))\n                .code(CODE))\n        .element()',"code-editor-header-content":'div()\n        .add(codeEditor()\n                .addHeader(codeEditorHeader()\n                        .addActions(codeEditorActions()\n                                .addAction(codeEditorCopyToClipboardAction())\n                                .addAction(codeEditorAction(download))\n                                .addAction(codeEditorAction(upload)))\n                        .addMain(codeEditorHeaderMain()\n                                .textContent("Header main content"))\n                        .addLinks(codeEditorLinks()\n                                .addLink(codeEditorViewShortcutsLink()))\n                        .addTab(codeEditorTab(PredefinedIcon.code, "Java")))\n                .code(CODE))\n        .element()',"code-editor-no-actions-no-tab":"div()\n        .add(codeEditor()\n                .code(CODE))\n        .element()","code-editor-no-actions":'div()\n        .add(codeEditor()\n                .addHeader(codeEditorHeader()\n                        .addTab(codeEditorTab(PredefinedIcon.code, "Java")))\n                .code(CODE))\n        .element()',"code-editor-no-tab":"div()\n        .add(codeEditor()\n                .addHeader(codeEditorHeader()\n                        .addActions(codeEditorActions()\n                                .addAction(codeEditorCopyToClipboardAction())\n                                .addAction(codeEditorAction(download))\n                                .addAction(codeEditorAction(button().icon(upload).control().disabled()))))\n                .code(CODE))\n        .element()","code-editor-readonly":'div()\n        .add(codeEditor()\n                .readonly()\n                .addHeader(codeEditorHeader()\n                        .addActions(codeEditorActions()\n                                .addAction(codeEditorCopyToClipboardAction())\n                                .addAction(codeEditorAction(download))\n                                .addAction(codeEditorAction(button().icon(upload).control().disabled())))\n                        .addTab(codeEditorTab(PredefinedIcon.code, "Java")))\n                .code(CODE))\n        .element()',"divider-div":"div()\n        .add(divider(div))\n        .element()","divider-hr":"div()\n        .add(divider(hr))\n        .element()","divider-inset-breakpoints":"div()\n        .add(divider(hr).inset(breakpoints(\n                default_, Inset.md,\n                md, Inset.none,\n                lg, Inset._3xl,\n                xl, Inset.lg)))\n        .element()","divider-inset-md":"div()\n        .add(divider(hr).inset(breakpoints(default_, Inset.md)))\n        .element()","divider-li":'div()\n        .add(ul().attr(role, "list")\n                .add(li().textContent("List item one"))\n                .add(divider(li))\n                .add(li().textContent("List item two")))\n        .element()',"divider-orientation-switch":'div()\n        .add(flex()\n                .addItem(flexItem().textContent("First item"))\n                .add(divider(hr).orientation(breakpoints(\n                        default_, vertical,\n                        sm, horizontal,\n                        md, vertical,\n                        lg, horizontal,\n                        xl, vertical,\n                        _2xl, horizontal)))\n                .addItem(flexItem().textContent("Second item")))\n        .element()',"divider-orientation-vertical-inset-breakpoints":'div()\n        .add(flex()\n                .addItem(flexItem().textContent("First item"))\n                .add(divider(hr)\n                        .orientation(breakpoints(default_, vertical))\n                        .inset(breakpoints(\n                                default_, Inset.md,\n                                md, Inset.none,\n                                lg, Inset.sm,\n                                xl, Inset.xs)))\n                .addItem(flexItem().textContent("Second item")))\n        .element()',"divider-orientation-vertical-inset-md":'div()\n        .add(flex()\n                .addItem(flexItem().textContent("First item"))\n                .add(divider(hr)\n                        .orientation(breakpoints(default_, vertical))\n                        .inset(breakpoints(default_, Inset.md)))\n                .addItem(flexItem().textContent("Second item")))\n        .element()',"divider-orientation-vertical":'div()\n        .add(flex()\n                .addItem(flexItem().textContent("First item"))\n                .add(divider(hr).orientation(breakpoints(default_, vertical)))\n                .addItem(flexItem().textContent("Second item")))\n        .element()',"dl-auto-fit-basic":'div()\n        .add(descriptionList().autoFit()\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Name"))\n                        .addDescription(descriptionListDescription("Example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Namespace"))\n                        .addDescription(descriptionListDescription()\n                                .add(a("#").textContent("mary-test"))))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Labels"))\n                        .addDescription(descriptionListDescription("example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Pod selector"))\n                        .addDescription(descriptionListDescription()\n                                .add(button().iconAndText(plusCircle, "app=MyApp", start)\n                                        .inline().link())))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Annotation"))\n                        .addDescription(descriptionListDescription("2 annotations"))))\n        .element()',"dl-auto-fit-gtc":'div()\n        .add(descriptionList().autoFit().autoFitMin(breakpoints(default_, "200px"))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Name"))\n                        .addDescription(descriptionListDescription("Example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Namespace"))\n                        .addDescription(descriptionListDescription()\n                                .add(a("#").textContent("mary-test"))))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Labels"))\n                        .addDescription(descriptionListDescription("example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Pod selector"))\n                        .addDescription(descriptionListDescription()\n                                .add(button().iconAndText(plusCircle, "app=MyApp", start)\n                                        .inline().link())))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Annotation"))\n                        .addDescription(descriptionListDescription("2 annotations"))))\n        .element()',"dl-auto-fit-rgtc":'div()\n        .add(descriptionList().autoFit()\n                .autoFitMin(breakpoints(\n                        md, "100px",\n                        lg, "150px",\n                        xl, "200px",\n                        _2xl, "300px"))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Name"))\n                        .addDescription(descriptionListDescription("Example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Namespace"))\n                        .addDescription(descriptionListDescription()\n                                .add(a("#").textContent("mary-test"))))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Labels"))\n                        .addDescription(descriptionListDescription("example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Pod selector"))\n                        .addDescription(descriptionListDescription()\n                                .add(button().iconAndText(plusCircle, "app=MyApp", start)\n                                        .inline().link())))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Annotation"))\n                        .addDescription(descriptionListDescription("2 annotations"))))\n        .element()',"dl-basic":'div()\n        .add(descriptionList()\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Name"))\n                        .addDescription(descriptionListDescription("Example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Namespace"))\n                        .addDescription(descriptionListDescription()\n                                .add(a("#").textContent("mary-test"))))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Labels"))\n                        .addDescription(descriptionListDescription("example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Pod selector"))\n                        .addDescription(descriptionListDescription()\n                                .add(button().iconAndText(plusCircle, "app=MyApp", start)\n                                        .inline().link())))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Annotation"))\n                        .addDescription(descriptionListDescription("2 annotations"))))\n        .element()',"dl-card-horizontal":'div()\n        .add(descriptionList().displaySize(Size.lg).horizontal().columns(breakpoints(lg, 2)).termWidth("10ch")\n                .add(card()\n                        .add(descriptionListTerm("Name"))\n                        .add(descriptionListDescription("Example")))\n                .add(card()\n                        .add(descriptionListTerm("Namespace"))\n                        .add(descriptionListDescription()\n                                .add(a("#").textContent("mary-test"))))\n                .add(card()\n                        .add(descriptionListTerm("Labels"))\n                        .add(descriptionListDescription("example")))\n                .add(card()\n                        .add(descriptionListTerm("Pod selector"))\n                        .add(descriptionListDescription()\n                                .add(button().iconAndText(plusCircle, "app=MyApp", start)\n                                        .inline().link())))\n                .add(card()\n                        .add(descriptionListTerm("Annotation"))\n                        .add(descriptionListDescription("2 annotations"))))\n        .element()',"dl-card-large-breakpoint":'div()\n        .add(descriptionList().displaySize(Size.lg).columns(breakpoints(lg, 3))\n                .add(card()\n                        .add(descriptionListTerm("Name"))\n                        .add(descriptionListDescription("Example")))\n                .add(card()\n                        .add(descriptionListTerm("Namespace"))\n                        .add(descriptionListDescription()\n                                .add(a("#").textContent("mary-test"))))\n                .add(card()\n                        .add(descriptionListTerm("Labels"))\n                        .add(descriptionListDescription("example")))\n                .add(card()\n                        .add(descriptionListTerm("Pod selector"))\n                        .add(descriptionListDescription()\n                                .add(button().iconAndText(plusCircle, "app=MyApp", start)\n                                        .inline().link())))\n                .add(card()\n                        .add(descriptionListTerm("Annotation"))\n                        .add(descriptionListDescription("2 annotations"))))\n        .element()',"dl-card-large":'div()\n        .add(descriptionList().displaySize(Size.lg).columns(breakpoints(lg, 2))\n                .add(card()\n                        .add(descriptionListTerm("Name"))\n                        .add(descriptionListDescription("Example")))\n                .add(card()\n                        .add(descriptionListTerm("Namespace"))\n                        .add(descriptionListDescription()\n                                .add(a("#").textContent("mary-test"))))\n                .add(card()\n                        .add(descriptionListTerm("Labels"))\n                        .add(descriptionListDescription("example")))\n                .add(card()\n                        .add(descriptionListTerm("Pod selector"))\n                        .add(descriptionListDescription()\n                                .add(button().iconAndText(plusCircle, "app=MyApp", start)\n                                        .inline().link())))\n                .add(card()\n                        .add(descriptionListTerm("Annotation"))\n                        .add(descriptionListDescription("2 annotations"))))\n        .element()',"dl-column-fill":'div()\n        .add(descriptionList().fillColumns().columns(breakpoints(default_, 2, lg, 3))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Name"))\n                        .addDescription(descriptionListDescription(\n                                "This is a long description that should wrap to multiple lines in a multi-column layout.")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Namespace"))\n                        .addDescription(descriptionListDescription()\n                                .add(a("#").textContent("mary-test"))))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Labels"))\n                        .addDescription(descriptionListDescription("example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Pod selector"))\n                        .addDescription(descriptionListDescription()\n                                .add(button().iconAndText(plusCircle, "app=MyApp", start)\n                                        .inline().link())))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Annotation"))\n                        .addDescription(descriptionListDescription("2 annotations"))))\n        .element()',"dl-compact-horizontal":'div()\n        .add(descriptionList().compact().horizontal()\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Name"))\n                        .addDescription(descriptionListDescription("Example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Namespace"))\n                        .addDescription(descriptionListDescription()\n                                .add(a("#").textContent("mary-test"))))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Labels"))\n                        .addDescription(descriptionListDescription("example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Pod selector"))\n                        .addDescription(descriptionListDescription()\n                                .add(button().iconAndText(plusCircle, "app=MyApp", start)\n                                        .inline().link())))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Annotation"))\n                        .addDescription(descriptionListDescription("2 annotations"))))\n        .element()',"dl-compact":'div()\n        .add(descriptionList().compact()\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Name"))\n                        .addDescription(descriptionListDescription("Example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Namespace"))\n                        .addDescription(descriptionListDescription()\n                                .add(a("#").textContent("mary-test"))))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Labels"))\n                        .addDescription(descriptionListDescription("example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Pod selector"))\n                        .addDescription(descriptionListDescription()\n                                .add(button().iconAndText(plusCircle, "app=MyApp", start)\n                                        .inline().link())))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Annotation"))\n                        .addDescription(descriptionListDescription("2 annotations"))))\n        .element()',"dl-default-2-col":'div()\n        .add(descriptionList().columns(breakpoints(default_, 2))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Name"))\n                        .addDescription(descriptionListDescription("Example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Namespace"))\n                        .addDescription(descriptionListDescription()\n                                .add(a("#").textContent("mary-test"))))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Labels"))\n                        .addDescription(descriptionListDescription("example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Pod selector"))\n                        .addDescription(descriptionListDescription()\n                                .add(button().iconAndText(plusCircle, "app=MyApp", start)\n                                        .inline().link())))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Annotation"))\n                        .addDescription(descriptionListDescription("2 annotations"))))\n        .element()',"dl-default-3-col-on-lg":'div()\n        .add(descriptionList().columns(breakpoints(lg, 3))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Name"))\n                        .addDescription(descriptionListDescription("Example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Namespace"))\n                        .addDescription(descriptionListDescription()\n                                .add(a("#").textContent("mary-test"))))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Labels"))\n                        .addDescription(descriptionListDescription("example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Pod selector"))\n                        .addDescription(descriptionListDescription()\n                                .add(button().iconAndText(plusCircle, "app=MyApp", start)\n                                        .inline().link())))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Annotation"))\n                        .addDescription(descriptionListDescription("2 annotations"))))\n        .element()',"dl-default-auto-column-width":'div()\n        .add(descriptionList().autoColumnWidths().columns(breakpoints(default_, 3))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Name"))\n                        .addDescription(descriptionListDescription("Example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Namespace"))\n                        .addDescription(descriptionListDescription()\n                                .add(a("#").textContent("mary-test"))))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Labels"))\n                        .addDescription(descriptionListDescription("example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Pod selector"))\n                        .addDescription(descriptionListDescription()\n                                .add(button().iconAndText(plusCircle, "app=MyApp", start)\n                                        .inline().link())))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Annotation"))\n                        .addDescription(descriptionListDescription("2 annotations"))))\n        .element()',"dl-default-inline-grid":'div()\n        .add(descriptionList().inlineGrid().columns(breakpoints(default_, 3))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Name"))\n                        .addDescription(descriptionListDescription("Example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Namespace"))\n                        .addDescription(descriptionListDescription()\n                                .add(a("#").textContent("mary-test"))))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Labels"))\n                        .addDescription(descriptionListDescription("example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Pod selector"))\n                        .addDescription(descriptionListDescription()\n                                .add(button().iconAndText(plusCircle, "app=MyApp", start)\n                                        .inline().link())))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Annotation"))\n                        .addDescription(descriptionListDescription("2 annotations"))))\n        .element()',"dl-default-responsive-columns":'div()\n        .add(descriptionList().columns(breakpoints(lg, 2, xl, 3))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Name"))\n                        .addDescription(descriptionListDescription("Example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Namespace"))\n                        .addDescription(descriptionListDescription()\n                                .add(a("#").textContent("mary-test"))))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Labels"))\n                        .addDescription(descriptionListDescription("example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Pod selector"))\n                        .addDescription(descriptionListDescription()\n                                .add(button().iconAndText(plusCircle, "app=MyApp", start)\n                                        .inline().link())))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Annotation"))\n                        .addDescription(descriptionListDescription("2 annotations"))))\n        .element()',"dl-fluid-horizontal":'div()\n        .add(descriptionList().fluid().horizontal()\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Name"))\n                        .addDescription(descriptionListDescription("Example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Namespace"))\n                        .addDescription(descriptionListDescription()\n                                .add(a("#").textContent("mary-test"))))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Labels"))\n                        .addDescription(descriptionListDescription("example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Pod selector"))\n                        .addDescription(descriptionListDescription()\n                                .add(button().iconAndText(plusCircle, "app=MyApp", start)\n                                        .inline().link())))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Annotation"))\n                        .addDescription(descriptionListDescription("2 annotations"))))\n        .element()',"dl-help":'div()\n        .add(descriptionList()\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Name")\n                                .help(popover().autoWidth()\n                                        .addHeader("Namespace")\n                                        .addBody("Additional namespace info")))\n                        .addDescription(descriptionListDescription("Example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Namespace")\n                                .help(popover().autoWidth()\n                                        .addHeader("Namespace")\n                                        .addBody("Additional namespace info")))\n                        .addDescription(descriptionListDescription()\n                                .add(a("#").textContent("mary-test"))))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Labels")\n                                .help(popover().autoWidth()\n                                        .addHeader("Labels")\n                                        .addBody("Additional labels info")))\n                        .addDescription(descriptionListDescription("example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Pod selector")\n                                .help(popover().autoWidth()\n                                        .addHeader("Pod selector")\n                                        .addBody("Additional pod selector info")))\n                        .addDescription(descriptionListDescription()\n                                .add(button().iconAndText(plusCircle, "app=MyApp", start)\n                                        .inline().link())))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Annotation")\n                                .help(popover().autoWidth()\n                                        .addHeader("Annotation")\n                                        .addBody("Additional annotation info")))\n                        .addDescription(descriptionListDescription("2 annotations"))))\n        .element()',"dl-horizontal-2-col":'div()\n        .add(descriptionList().horizontal().columns(breakpoints(default_, 2))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Name"))\n                        .addDescription(descriptionListDescription("Example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Namespace"))\n                        .addDescription(descriptionListDescription()\n                                .add(a("#").textContent("mary-test"))))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Labels"))\n                        .addDescription(descriptionListDescription("example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Pod selector"))\n                        .addDescription(descriptionListDescription()\n                                .add(button().iconAndText(plusCircle, "app=MyApp", start)\n                                        .inline().link())))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Annotation"))\n                        .addDescription(descriptionListDescription("2 annotations"))))\n        .element()',"dl-horizontal-3-col-on-lg":'div()\n        .add(descriptionList().horizontal().columns(breakpoints(lg, 3))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Name"))\n                        .addDescription(descriptionListDescription("Example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Namespace"))\n                        .addDescription(descriptionListDescription()\n                                .add(a("#").textContent("mary-test"))))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Labels"))\n                        .addDescription(descriptionListDescription("example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Pod selector"))\n                        .addDescription(descriptionListDescription()\n                                .add(button().iconAndText(plusCircle, "app=MyApp", start)\n                                        .inline().link())))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Annotation"))\n                        .addDescription(descriptionListDescription("2 annotations"))))\n        .element()',"dl-horizontal-auto-column-width":'div()\n        .add(descriptionList().autoColumnWidths().horizontal().columns(breakpoints(default_, 2))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Name"))\n                        .addDescription(descriptionListDescription("Example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Namespace"))\n                        .addDescription(descriptionListDescription()\n                                .add(a("#").textContent("mary-test"))))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Labels"))\n                        .addDescription(descriptionListDescription("example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Pod selector"))\n                        .addDescription(descriptionListDescription()\n                                .add(button().iconAndText(plusCircle, "app=MyApp", start)\n                                        .inline().link())))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Annotation"))\n                        .addDescription(descriptionListDescription("2 annotations"))))\n        .element()',"dl-horizontal-responsive-columns":'div()\n        .add(descriptionList().horizontal().columns(breakpoints(lg, 2, xl, 3))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Name"))\n                        .addDescription(descriptionListDescription("Example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Namespace"))\n                        .addDescription(descriptionListDescription()\n                                .add(a("#").textContent("mary-test"))))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Labels"))\n                        .addDescription(descriptionListDescription("example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Pod selector"))\n                        .addDescription(descriptionListDescription()\n                                .add(button().iconAndText(plusCircle, "app=MyApp", start)\n                                        .inline().link())))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Annotation"))\n                        .addDescription(descriptionListDescription("2 annotations"))))\n        .element()',"dl-horizontal-term-width":'div()\n        .add(descriptionList().horizontal()\n                .horizontalTermWidth(breakpoints(\n                        default_, "12ch",\n                        sm, "15ch",\n                        md, "20ch",\n                        lg, "28ch",\n                        xl, "30ch",\n                        _2xl, "35ch"))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Name longer than the default term width"))\n                        .addDescription(descriptionListDescription("Example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Namespace"))\n                        .addDescription(descriptionListDescription()\n                                .add(a("#").textContent("mary-test"))))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Labels"))\n                        .addDescription(descriptionListDescription("example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Pod selector"))\n                        .addDescription(descriptionListDescription()\n                                .add(button().iconAndText(plusCircle, "app=MyApp", start)\n                                        .inline().link())))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Annotation"))\n                        .addDescription(descriptionListDescription("2 annotations"))))\n        .element()',"dl-horizontal":'div()\n        .add(descriptionList().horizontal()\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Name"))\n                        .addDescription(descriptionListDescription("Example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Namespace"))\n                        .addDescription(descriptionListDescription()\n                                .add(a("#").textContent("mary-test"))))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Labels"))\n                        .addDescription(descriptionListDescription("example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Pod selector"))\n                        .addDescription(descriptionListDescription()\n                                .add(button().iconAndText(plusCircle, "app=MyApp", start)\n                                        .inline().link())))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Annotation"))\n                        .addDescription(descriptionListDescription("2 annotations"))))\n        .element()',"dl-icons":'div()\n        .add(descriptionList()\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Name").icon(cube))\n                        .addDescription(descriptionListDescription("Example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Namespace").icon(book))\n                        .addDescription(descriptionListDescription()\n                                .add(a("#").textContent("mary-test"))))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Labels").icon(key))\n                        .addDescription(descriptionListDescription("example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Pod selector").icon(globe))\n                        .addDescription(descriptionListDescription()\n                                .add(button().iconAndText(plusCircle, "app=MyApp", start)\n                                        .inline().link())))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Annotation").icon(flag))\n                        .addDescription(descriptionListDescription("2 annotations"))))\n        .element()',"dl-large":'div()\n        .add(descriptionList().displaySize(Size.lg).columns(breakpoints(lg, 2))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Name"))\n                        .addDescription(descriptionListDescription("Example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Namespace"))\n                        .addDescription(descriptionListDescription()\n                                .add(a("#").textContent("mary-test"))))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Labels"))\n                        .addDescription(descriptionListDescription("example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Pod selector"))\n                        .addDescription(descriptionListDescription()\n                                .add(button().iconAndText(plusCircle, "app=MyApp", start)\n                                        .inline().link())))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Annotation"))\n                        .addDescription(descriptionListDescription("2 annotations"))))\n        .element()',"dl-responsive-columns-vgl":'div()\n        .add(descriptionList().horizontal()\n                .orientation(breakpoints(\n                        md, vertical,\n                        lg, horizontal,\n                        xl, vertical,\n                        _2xl, horizontal))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Name"))\n                        .addDescription(descriptionListDescription("Example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Namespace"))\n                        .addDescription(descriptionListDescription()\n                                .add(a("#").textContent("mary-test"))))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Labels"))\n                        .addDescription(descriptionListDescription("example")))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Pod selector"))\n                        .addDescription(descriptionListDescription()\n                                .add(button().iconAndText(plusCircle, "app=MyApp", start)\n                                        .inline().link())))\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Annotation"))\n                        .addDescription(descriptionListDescription("2 annotations"))))\n        .element()',"dl-with-card":'div()\n        .add(descriptionList().columns(breakpoints(lg, 2))\n                .add(card()\n                        .add(descriptionListTerm("Name"))\n                        .add(descriptionListDescription("Example")))\n                .add(card()\n                        .add(descriptionListTerm("Namespace"))\n                        .add(descriptionListDescription()\n                                .add(a("#").textContent("mary-test"))))\n                .add(card()\n                        .add(descriptionListTerm("Labels"))\n                        .add(descriptionListDescription("example")))\n                .add(card()\n                        .add(descriptionListTerm("Pod selector"))\n                        .add(descriptionListDescription()\n                                .add(button().iconAndText(plusCircle, "app=MyApp", start)\n                                        .inline().link())))\n                .add(card()\n                        .add(descriptionListTerm("Annotation"))\n                        .add(descriptionListDescription("2 annotations"))))\n        .element()',"drawer-basic":'Drawer drawer = drawer();\nreturn div()\n        .add(button("Toggle drawer").css(util("mb-lg"))\n                .primary()\n                .onClick((event, btn) -> drawer.toggle()))\n        .add(drawer\n                .addContent(drawerContent()\n                        .addBody(drawerContentBody()\n                                .textContent(LoremIpsum.paragraphs(20))))\n                .addPanel(drawerPanel()\n                        .addHead(drawerPanelHead()\n                                .add(span().textContent("drawer-panel"))\n                                .addCloseButton(drawerCloseButton()))))\n        .element();',"drawer-bottom":'Drawer drawer = drawer();\nreturn div()\n        .add(button("Toggle drawer").css(util("mb-lg"))\n                .primary()\n                .onClick((event, btn) -> drawer.toggle()))\n        .add(div().style("height", "400px")\n                .add(drawer.position(bottom)\n                        .addContent(drawerContent()\n                                .addBody(drawerContentBody()\n                                        .textContent(LoremIpsum.paragraphs(20))))\n                        .addPanel(drawerPanel()\n                                .addHead(drawerPanelHead()\n                                        .add(span().textContent("drawer-panel"))\n                                        .addCloseButton(drawerCloseButton())))))\n        .element();',"drawer-breakpoint":'Drawer drawer = drawer();\nreturn div()\n        .add(button("Toggle drawer").css(util("mb-lg"))\n                .primary()\n                .onClick((event, btn) -> drawer.toggle()))\n        .add(drawer\n                .addContent(drawerContent()\n                        .addBody(drawerContentBody()\n                                .textContent(LoremIpsum.paragraphs(20))))\n                .addPanel(drawerPanel()\n                        .widths(breakpoints(default_, width33))\n                        .addHead(drawerPanelHead()\n                                .add(span().textContent("drawer-panel"))\n                                .addCloseButton(drawerCloseButton()))))\n        .element();',"drawer-content-padding":'Drawer drawer = drawer();\nreturn div()\n        .add(button("Toggle drawer").css(util("mb-lg"))\n                .primary()\n                .onClick((event, btn) -> drawer.toggle()))\n        .add(drawer\n                .addContent(drawerContent()\n                        .addBody(drawerContentBody().padding()\n                                .textContent(LoremIpsum.paragraphs(20))))\n                .addPanel(drawerPanel()\n                        .addHead(drawerPanelHead()\n                                .add(span().textContent("drawer-panel"))\n                                .addCloseButton(drawerCloseButton()))))\n        .element();',"drawer-end":'Drawer drawer = drawer();\nreturn div()\n        .add(button("Toggle drawer").css(util("mb-lg"))\n                .primary()\n                .onClick((event, btn) -> drawer.toggle()))\n        .add(drawer.position(end)\n                .addContent(drawerContent()\n                        .addBody(drawerContentBody()\n                                .textContent(LoremIpsum.paragraphs(20))))\n                .addPanel(drawerPanel()\n                        .addHead(drawerPanelHead()\n                                .add(span().textContent("drawer-panel"))\n                                .addCloseButton(drawerCloseButton()))))\n        .element();',"drawer-inline-end":'Drawer drawer = drawer();\nreturn div()\n        .add(button("Toggle drawer").css(util("mb-lg"))\n                .primary()\n                .onClick((event, btn) -> drawer.toggle()))\n        .add(drawer.inline().position(end)\n                .addContent(drawerContent()\n                        .addBody(drawerContentBody()\n                                .textContent(LoremIpsum.paragraphs(20))))\n                .addPanel(drawerPanel()\n                        .addHead(drawerPanelHead()\n                                .add(span().textContent("drawer-panel"))\n                                .addCloseButton(drawerCloseButton()))))\n        .element();',"drawer-inline-start":'Drawer drawer = drawer();\nreturn div()\n        .add(button("Toggle drawer").css(util("mb-lg"))\n                .primary()\n                .onClick((event, btn) -> drawer.toggle()))\n        .add(drawer.inline().position(start)\n                .addContent(drawerContent()\n                        .addBody(drawerContentBody()\n                                .textContent(LoremIpsum.paragraphs(20))))\n                .addPanel(drawerPanel()\n                        .addHead(drawerPanelHead()\n                                .add(span().textContent("drawer-panel"))\n                                .addCloseButton(drawerCloseButton()))))\n        .element();',"drawer-inline":'Drawer drawer = drawer();\nreturn div()\n        .add(button("Toggle drawer").css(util("mb-lg"))\n                .primary()\n                .onClick((event, btn) -> drawer.toggle()))\n        .add(drawer.inline()\n                .addContent(drawerContent()\n                        .addBody(drawerContentBody()\n                                .textContent(LoremIpsum.paragraphs(20))))\n                .addPanel(drawerPanel()\n                        .addHead(drawerPanelHead()\n                                .add(span().textContent("drawer-panel"))\n                                .addCloseButton(drawerCloseButton()))))\n        .element();',"drawer-panel-padding":'Drawer drawer = drawer();\nreturn div()\n        .add(button("Toggle drawer").css(util("mb-lg"))\n                .primary()\n                .onClick((event, btn) -> drawer.toggle()))\n        .add(drawer\n                .addContent(drawerContent()\n                        .addBody(drawerContentBody()\n                                .textContent(LoremIpsum.paragraphs(20))))\n                .addPanel(drawerPanel()\n                        .addHead(drawerPanelHead().noPadding()\n                                .add(span().textContent("drawer-panel"))\n                                .addCloseButton(drawerCloseButton()))))\n        .element();',"drawer-resizable-bottom":'Drawer drawer = drawer();\nreturn div()\n        .add(button("Toggle drawer").css(util("mb-lg"))\n                .primary()\n                .onClick((event, btn) -> drawer.toggle()))\n        .add(div().style("height", "400px")\n                .add(drawer.position(bottom)\n                        .addContent(drawerContent()\n                                .addBody(drawerContentBody()\n                                        .textContent(LoremIpsum.paragraphs(20))))\n                        .addPanel(drawerPanel()\n                                .resizable()\n                                .minSize("100px").defaultSize("200px")\n                                .addHead(drawerPanelHead()\n                                        .add(span().textContent("drawer-panel"))\n                                        .addCloseButton(drawerCloseButton())))))\n        .element();',"drawer-resizable-start":'Drawer drawer = drawer();\nreturn div()\n        .add(button("Toggle drawer").css(util("mb-lg"))\n                .primary()\n                .onClick((event, btn) -> drawer.toggle()))\n        .add(drawer.position(start)\n                .addContent(drawerContent()\n                        .addBody(drawerContentBody()\n                                .textContent(LoremIpsum.paragraphs(20))))\n                .addPanel(drawerPanel()\n                        .resizable().increment(50)\n                        .minSize("200px").defaultSize("500px")\n                        .addHead(drawerPanelHead()\n                                .add(span().textContent("drawer-panel"))\n                                .addCloseButton(drawerCloseButton()))))\n        .element();',"drawer-resizable":'Drawer drawer = drawer();\nreturn div()\n        .add(button("Toggle drawer").css(util("mb-lg"))\n                .primary()\n                .onClick((event, btn) -> drawer.toggle()))\n        .add(drawer\n                .addContent(drawerContent()\n                        .addBody(drawerContentBody()\n                                .textContent(LoremIpsum.paragraphs(20))))\n                .addPanel(drawerPanel()\n                        .resizable()\n                        .minSize("150px").defaultSize("500px")\n                        .addHead(drawerPanelHead()\n                                .add(span().textContent("drawer-panel"))\n                                .addCloseButton(drawerCloseButton()))))\n        .element();',"drawer-section":'Drawer drawer = drawer();\nreturn div()\n        .add(button("Toggle drawer").css(util("mb-lg"))\n                .primary()\n                .onClick((event, btn) -> drawer.toggle()))\n        .add(drawer\n                .addSection(drawerSection().textContent("drawer-section above"))\n                .addContent(drawerContent()\n                        .addBody(drawerContentBody()\n                                .textContent(LoremIpsum.paragraphs(20))))\n                .addPanel(drawerPanel()\n                        .addHead(drawerPanelHead()\n                                .add(span().textContent("drawer-panel"))\n                                .addCloseButton(drawerCloseButton())))\n                .addSection(drawerSection().textContent("drawer-section below")))\n        .element();',"drawer-stacked":'Drawer drawer = drawer();\nreturn div()\n        .add(button("Toggle drawer").css(util("mb-lg"))\n                .primary()\n                .onClick((event, btn) -> drawer.toggle()))\n        .add(drawer\n                .addContent(drawerContent()\n                        .addBody(drawerContentBody()\n                                .textContent("content-body"))\n                        .addBody(drawerContentBody().padding()\n                                .textContent("content-body with padding"))\n                        .addBody(drawerContentBody()\n                                .textContent("content-body")))\n                .addPanel(drawerPanel()\n                        .addHead(drawerPanelHead()\n                                .add(title(3, _2xl, "drawer title"))\n                                .addCloseButton(drawerCloseButton())\n                                .add("drawer-panel"))\n                        .addBody(drawerPanelBody().noPadding()\n                                .textContent("drawer-panel with no padding"))\n                        .addBody(drawerPanelBody()\n                                .textContent("drawer-panel"))))\n        .element();',"drawer-start":'Drawer drawer = drawer();\nreturn div()\n        .add(button("Toggle drawer").css(util("mb-lg"))\n                .primary()\n                .onClick((event, btn) -> drawer.toggle()))\n        .add(drawer.position(start)\n                .addContent(drawerContent()\n                        .addBody(drawerContentBody()\n                                .textContent(LoremIpsum.paragraphs(20))))\n                .addPanel(drawerPanel()\n                        .addHead(drawerPanelHead()\n                                .add(span().textContent("drawer-panel"))\n                                .addCloseButton(drawerCloseButton()))))\n        .element();',"drawer-static":'Drawer drawer = drawer();\nreturn div()\n        .add(button("Toggle drawer").css(util("mb-lg"))\n                .primary()\n                .onClick((event, btn) -> drawer.toggle()))\n        .add(drawer.static_()\n                .addContent(drawerContent()\n                        .addBody(drawerContentBody()\n                                .textContent(LoremIpsum.paragraphs(20))))\n                .addPanel(drawerPanel()\n                        .addHead(drawerPanelHead()\n                                .add(span().textContent("drawer-panel"))\n                                .addCloseButton(drawerCloseButton()))))\n        .element();',"dropdown-avatar":'div()\n        .add(dropdown()\n                .addToggle(menuToggle("John Doe")\n                        .addAvatar(avatar(avatarLight, "Avatar")))\n                .addMenu(menu()\n                        .addContent(menuContent()\n                                .addList(menuList()\n                                        .addItem(actionMenuItem("item-0", "Action"))\n                                        .addItem(linkMenuItem("item-1", "Link", "#item-1"))\n                                        .addItem(actionMenuItem("item-2", "Disabled action")\n                                                .disabled())\n                                        .addItem(linkMenuItem("item-3", "Disabled link", "#item-3")\n                                                .disabled())\n                                        .addDivider()\n                                        .addItem(actionMenuItem("item-4", "Separated action"))\n                                        .addItem(linkMenuItem("item-5", "Separated link", "#item-5"))))))\n        .element()',"dropdown-badge":'div()\n        .add(dropdown()\n                .addToggle(menuToggle("Count")\n                        .addBadge(badge(4).unread()))\n                .addMenu(menu()\n                        .addContent(menuContent()\n                                .addList(menuList()\n                                        .addItem(actionMenuItem("item-0", "Action"))\n                                        .addItem(linkMenuItem("item-1", "Link", "#item-1"))\n                                        .addItem(actionMenuItem("item-2", "Disabled action")\n                                                .disabled())\n                                        .addItem(linkMenuItem("item-3", "Disabled link", "#item-3")\n                                                .disabled())\n                                        .addDivider()\n                                        .addItem(actionMenuItem("item-4", "Separated action"))\n                                        .addItem(linkMenuItem("item-5", "Separated link", "#item-5"))))))\n        .element()',"dropdown-basic":'div().css("ws-react-c-navigation")\n        .add(navigation(expandable)\n                .addItem(navigationItem("nav-link-text-0").href("#item-0")\n                        .addLinkText(navigationLinkText()\n                                .add("Link 1 ")\n                                .add(inlineIcon(arrowRight))))\n                .addGroup(expandableNavigationGroup("nav-link-text-0")\n                        .addLinkText(navigationLinkText()\n                                .add("Link 2 ")\n                                .add(small("(small text)")))\n                        .addItem(navigationItem("nav-link-text-00").href("#item-00")\n                                .addLinkText(navigationLinkText()\n                                        .add(inlineIcon(user))\n                                        .add(" Subnav link 1")))\n                        .addItem(navigationItem("nav-link-text-01").href("#item-01")\n                                .addLinkText(navigationLinkText()\n                                        .add(inlineIcon(user))\n                                        .add(" Subnav link 2"))))\n                .addGroup(expandableNavigationGroup("nav-link-text-1")\n                        .addLinkText(navigationLinkText()\n                                .add("Link 3 ")\n                                .add(strong("(strong text)")))\n                        .addItem(navigationItem("nav-link-text-10", "Subnav link 1", "#item-10"))\n                        .addItem(navigationItem("nav-link-text-11", "Subnav link 2", "#item-11"))))\n        .element()\n// @code-end:nav-mixed\n        ));\n\nDocs(Navigation.class);\nc(ExpandableNavigationGroup.class, subcomponent);\nc(Navigation.class, component);\nc(NavigationGroup.class, subcomponent);\nc(NavigationItem.class, subcomponent);\nc(NavigationLinkText.class, subcomponent);\nc(NavigationType.class, other);\n    }\n}\n/*\n23 Red Hat\n *\ner the Apache License, Version 2.0 (the "License");\nuse this file except in compliance with the License.\nin a copy of the License at\n *\nwww.apache.org/licenses/LICENSE-2.0\n *\nred by applicable law or agreed to in writing, software\nunder the License is distributed on an "AS IS" BASIS,\nANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nnse for the specific language governing permissions and\nunder the License.\n */\nernfly.showcase.component;\n\n.elemento.router.Route;\nrnfly.component.menu.Dropdown;\nrnfly.showcase.Snippet;\nrnfly.showcase.SnippetPage;\n\ng.jboss.elemento.Elements.br;\ng.jboss.elemento.Elements.code;\ng.jboss.elemento.Elements.div;\ng.jboss.elemento.Elements.p;\ng.patternfly.component.avatar.Avatar.avatar;\ng.patternfly.component.badge.Badge.badge;\ng.patternfly.component.menu.Dropdown.dropdown;\ng.patternfly.component.menu.Menu.menu;\ng.patternfly.component.menu.MenuContent.menuContent;\ng.patternfly.component.menu.MenuItem.actionMenuItem;\ng.patternfly.component.menu.MenuItem.linkMenuItem;\ng.patternfly.component.menu.MenuList.menuList;\ng.patternfly.component.menu.MenuToggle.menuToggle;\ng.patternfly.component.menu.MenuToggleAction.menuToggleAction;\ng.patternfly.component.menu.MenuToggleCheckbox.menuToggleCheckbox;\ng.patternfly.component.menu.MenuToggleType.split;\ng.patternfly.showcase.ApiDoc.Type.component;\ng.patternfly.showcase.Assets.avatarLight;\ng.patternfly.showcase.Code.code;\ng.patternfly.showcase.Data.components;\ng.patternfly.style.PredefinedIcon.cog;\ng.patternfly.style.PredefinedIcon.ellipsisV;\n\n/components/menus/dropdown", title = "Dropdown")\npdownComponent extends SnippetPage {\n\nownComponent() {\nmponents.get("dropdown"));\n\nmples(p()\n.add(code().textContent("Dropdown"))\n.add(" builds off of the Menu component suite to wrap commonly used properties and functions for a dropdown menu."));\net(new Snippet("dropdown-basic", "Basic dropdown",\ncode.get("dropdown-basic"), () ->\ndiv()\n        .add(dropdown()\n                .addToggle(menuToggle("Dropdown"))\n                .addMenu(menu()\n                        .addContent(menuContent()\n                                .addList(menuList()\n                                        .addItem(actionMenuItem("item-0", "Action"))\n                                        .addItem(linkMenuItem("item-1", "Link", "#item-1"))\n                                        .addItem(actionMenuItem("item-2", "Disabled action")\n                                                .disabled())\n                                        .addItem(linkMenuItem("item-3", "Disabled link", "#item-3")\n                                                .disabled())\n                                        .addDivider()\n                                        .addItem(actionMenuItem("item-4", "Separated action"))\n                                        .addItem(linkMenuItem("item-5", "Separated link", "#item-5"))))))\n        .element()',"dropdown-icon":'div()\n        .add(dropdown()\n                .addToggle(menuToggle("Icon")\n                        .icon(cog))\n                .addMenu(menu()\n                        .addContent(menuContent()\n                                .addList(menuList()\n                                        .addItem(actionMenuItem("item-0", "Action"))\n                                        .addItem(linkMenuItem("item-1", "Link", "#item-1"))\n                                        .addItem(actionMenuItem("item-2", "Disabled action")\n                                                .disabled())\n                                        .addItem(linkMenuItem("item-3", "Disabled link", "#item-3")\n                                                .disabled())\n                                        .addDivider()\n                                        .addItem(actionMenuItem("item-4", "Separated action"))\n                                        .addItem(linkMenuItem("item-5", "Separated link", "#item-5"))))))\n        .element()',"dropdown-kebab":'div()\n        .add(dropdown()\n                .addToggle(menuToggle(ellipsisV, "kebab dropdown toggle"))\n                .addMenu(menu()\n                        .addContent(menuContent()\n                                .addList(menuList()\n                                        .addItem(actionMenuItem("item-0", "Action"))\n                                        .addItem(linkMenuItem("item-1", "Link", "#item-1"))\n                                        .addItem(actionMenuItem("item-2", "Disabled action")\n                                                .disabled())\n                                        .addItem(linkMenuItem("item-3", "Disabled link", "#item-3")\n                                                .disabled())\n                                        .addDivider()\n                                        .addItem(actionMenuItem("item-4", "Separated action"))\n                                        .addItem(linkMenuItem("item-5", "Separated link", "#item-5"))))))\n        .element()',"dropdown-split-action":'div()\n        .add(dropdown()\n                .addToggle(menuToggle(split)\n                        .addAction(menuToggleAction("Action")))\n                .addMenu(menu()\n                        .addContent(menuContent()\n                                .addList(menuList()\n                                        .addItem(actionMenuItem("item-0", "Action"))\n                                        .addItem(linkMenuItem("item-1", "Link", "#item-1"))\n                                        .addItem(actionMenuItem("item-2", "Disabled action")\n                                                .disabled())\n                                        .addItem(linkMenuItem("item-3", "Disabled link", "#item-3")\n                                                .disabled())\n                                        .addDivider()\n                                        .addItem(actionMenuItem("item-4", "Separated action"))\n                                        .addItem(linkMenuItem("item-5", "Separated link", "#item-5"))))))\n        .element()',"dropdown-split-check":'div()\n        .add(dropdown()\n                .addToggle(menuToggle(split)\n                        .addCheckbox(menuToggleCheckbox()))\n                .addMenu(menu()\n                        .addContent(menuContent()\n                                .addList(menuList()\n                                        .addItem(actionMenuItem("item-0", "Action"))\n                                        .addItem(linkMenuItem("item-1", "Link", "#item-1"))\n                                        .addItem(actionMenuItem("item-2", "Disabled action")\n                                                .disabled())\n                                        .addItem(linkMenuItem("item-3", "Disabled link", "#item-3")\n                                                .disabled())\n                                        .addDivider()\n                                        .addItem(actionMenuItem("item-4", "Separated action"))\n                                        .addItem(linkMenuItem("item-5", "Separated link", "#item-5"))))))\n        .add(br())\n        .add(br())\n        .add(dropdown()\n                .addToggle(menuToggle(split)\n                        .addCheckbox(menuToggleCheckbox())\n                        .text("10 selected"))\n                .addMenu(menu()\n                        .addContent(menuContent()\n                                .addList(menuList()\n                                        .addItem(actionMenuItem("item-0", "Action"))\n                                        .addItem(linkMenuItem("item-1", "Link", "#item-1"))\n                                        .addItem(actionMenuItem("item-2", "Disabled action")\n                                                .disabled())\n                                        .addItem(linkMenuItem("item-3", "Disabled link", "#item-3")\n                                                .disabled())\n                                        .addDivider()\n                                        .addItem(actionMenuItem("item-4", "Separated action"))\n                                        .addItem(linkMenuItem("item-5", "Separated link", "#item-5"))))))\n        .element()',"empty-state-basic":'div()\n        .add(emptyState()\n                .addHeader(emptyStateHeader(4)\n                        .icon(cubes)\n                        .text("Empty state"))\n                .addBody(emptyStateBody()\n                        .textContent(\n                                "This represents an the empty state pattern in PatternFly. Hopefully it\'s simple enough to use but flexible enough to meet a variety of needs."))\n                .addFooter(emptyStateFooter()\n                        .addActions(emptyStateActions()\n                                .add(button("Primary action").primary()))\n                        .addActions(emptyStateActions()\n                                .add(button("Multiple").link())\n                                .add(button("Action Buttons").link())\n                                .add(button("Can").link())\n                                .add(button("Go here").link())\n                                .add(button("In the secondary").link())\n                                .add(button("Action area").link()))))\n        .element()',"empty-state-color":'div()\n        .add(emptyState()\n                .addHeader(emptyStateHeader(4)\n                        .icon(check, globalVar("success-color", "100"))\n                        .text("Custom icon color"))\n                .addBody(emptyStateBody()\n                        .textContent(\n                                "This represents an the empty state pattern in PatternFly. Hopefully it\'s simple enough to use but flexible enough to meet a variety of needs.")))\n        .element()',"empty-state-large":'div()\n        .add(emptyState()\n                .size(lg)\n                .addHeader(emptyStateHeader(4)\n                        .icon(cubes)\n                        .text("Empty state"))\n                .addBody(emptyStateBody()\n                        .textContent(\n                                "This represents an the empty state pattern in PatternFly. Hopefully it\'s simple enough to use but flexible enough to meet a variety of needs."))\n                .addFooter(emptyStateFooter()\n                        .addActions(emptyStateActions()\n                                .add(button("Primary action").primary()))\n                        .addActions(emptyStateActions()\n                                .add(button("Multiple").link())\n                                .add(button("Action Buttons").link())\n                                .add(button("Can").link())\n                                .add(button("Go here").link())\n                                .add(button("In the secondary").link())\n                                .add(button("Action area").link()))))\n        .element()',"empty-state-no-match":'div()\n        .add(emptyState()\n                .addHeader(emptyStateHeader(4)\n                        .icon(search)\n                        .text("No results found"))\n                .addBody(emptyStateBody()\n                        .textContent("No results match the filter criteria. Clear all filters and try again."))\n                .addFooter(emptyStateFooter()\n                        .addActions(emptyStateActions()\n                                .add(button("Clear all filters").link()))))\n        .element()',"empty-state-small":'div()\n        .add(emptyState()\n                .size(sm)\n                .addHeader(emptyStateHeader(4)\n                        .icon(cubes)\n                        .text("Empty state"))\n                .addBody(emptyStateBody()\n                        .textContent(\n                                "This represents an the empty state pattern in PatternFly. Hopefully it\'s simple enough to use but flexible enough to meet a variety of needs."))\n                .addFooter(emptyStateFooter()\n                        .addActions(emptyStateActions()\n                                .add(button("Primary action").primary()))\n                        .addActions(emptyStateActions()\n                                .add(button("Multiple").link())\n                                .add(button("Action Buttons").link())\n                                .add(button("Can").link())\n                                .add(button("Go here").link())\n                                .add(button("In the secondary").link())\n                                .add(button("Action area").link()))))\n        .element()',"empty-state-spinner":'div()\n        .add(emptyState()\n                .addHeader(emptyStateHeader(4)\n                        .spinner("Loading...")\n                        .text("Loading")))\n        .element()',"empty-state-xl":'div()\n        .add(emptyState()\n                .size(xl)\n                .addHeader(emptyStateHeader(4)\n                        .icon(cubes)\n                        .text("Empty state"))\n                .addBody(emptyStateBody()\n                        .textContent(\n                                "This represents an the empty state pattern in PatternFly. Hopefully it\'s simple enough to use but flexible enough to meet a variety of needs."))\n                .addFooter(emptyStateFooter()\n                        .addActions(emptyStateActions()\n                                .add(button("Primary action").primary()))\n                        .addActions(emptyStateActions()\n                                .add(button("Multiple").link())\n                                .add(button("Action Buttons").link())\n                                .add(button("Can").link())\n                                .add(button("Go here").link())\n                                .add(button("In the secondary").link())\n                                .add(button("Action area").link()))))\n        .element()',"empty-state-xs":'div()\n        .add(emptyState()\n                .size(xs)\n                .addHeader(emptyStateHeader(4)\n                        .text("Empty state"))\n                .addBody(emptyStateBody()\n                        .textContent(\n                                "This represents an the empty state pattern in PatternFly. Hopefully it\'s simple enough to use but flexible enough to meet a variety of needs."))\n                .addFooter(emptyStateFooter()\n                        .addActions(emptyStateActions()\n                                .add(button("Multiple").link())\n                                .add(button("Action Buttons").link())\n                                .add(button("Can").link())\n                                .add(button("Go here").link())\n                                .add(button("In the secondary").link())\n                                .add(button("Action area").link()))))\n        .element()',"expandable-section-basic":'div()\n        .add(expandableSection()\n                .addToggle(expandableSectionToggle("Show more"))\n                .addContent(expandableSectionContent()\n                        .textContent("This content is visible only when the component is expanded.")))\n        .element()',"expandable-section-custom-toggle":'Badge badge = badge(4).read();\nreturn div()\n        .add(expandableSection()\n                .onToggle((e, c, expanded) -> badge.count(badge.count() + 1))\n                .addToggle(expandableSectionToggle()\n                        .addText(expandableSectionToggleText()\n                                .add(div()\n                                        .add(span().textContent("You can also use icons "))\n                                        .add(inlineIcon(fas("check-circle")))\n                                        .add(span().textContent(" or badges "))\n                                        .add(badge)\n                                        .add(span().textContent(" !")))))\n                .addContent(expandableSectionContent()\n                        .textContent(\n                                "This content is visible only when the component is expanded.")))\n        .element();',"expandable-section-detached":'div()\n        .add(stack().gutter()\n                .addItem(stackItem()\n                        .add(expandableSection("detached-content")\n                                .detachedFrom("detached-toggle")\n                                .addContent(expandableSectionContent()\n                                        .textContent(\n                                                "This content is visible only when the component is expanded."))))\n                .addItem(stackItem()\n                        .add(expandableSection("detached-toggle")\n                                .detachedFrom("detached-content")\n                                .addToggle(expandableSectionToggle("Show more", "Show less")\n                                        .up()))))\n        .element()',"expandable-section-disclosure":'div()\n        .add(expandableSection()\n                .disclosure()\n                .addToggle(expandableSectionToggle("Show more", "Show less"))\n                .addContent(expandableSectionContent()\n                        .textContent("This content is visible only when the component is expanded.")))\n        .element()',"expandable-section-dynamic-text":'div()\n        .add(expandableSection()\n                .addToggle(expandableSectionToggle("Show more", "Show less"))\n                .addContent(expandableSectionContent()\n                        .textContent("This content is visible only when the component is expanded.")))\n        .element()',"expandable-section-indented":'div()\n        .add(expandableSection()\n                .indented()\n                .addToggle(expandableSectionToggle("Show more", "Show less"))\n                .addContent(expandableSectionContent()\n                        .textContent("This content is visible only when the component is expanded.")))\n        .element()',"expandable-section-truncate":'div()\n        .add(expandableSection()\n                .truncate(2) // lines\n                .addContent(expandableSectionContent()\n                        .textContent(LoremIpsum.paragraphs(20)))\n                .addToggle(expandableSectionToggle("Show more", "Show less")))\n        .element()',"flex-adjust-width":'div().css("ws-core-l-flex")\n        .add(flex()\n                .add(flex().flex(breakpoints(default_, FlexShorthand._1))\n                        .addItem(flexItem().textContent("Flex item")))\n                .add(flex().flex(breakpoints(default_, FlexShorthand._1))\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item")))\n                .add(flex().flex(breakpoints(default_, FlexShorthand._1))\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item"))))\n        .element()',"flex-align-adjacent-content":'div().css("ws-core-l-flex")\n        .add(flex()\n                .add(flex().flex(breakpoints(default_, FlexShorthand._1))\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item")))\n                .add(flex()\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item"))))\n        .element()',"flex-align-right-multiple":'div().css("ws-core-l-flex")\n        .add(flex()\n                .add(flex()\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item")))\n                .add(flex().align(breakpoints(default_, Align.right))\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item")))\n                .add(flex().align(breakpoints(default_, Align.right))\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item"))))\n        .element()',"flex-align-right-single":'div().css("ws-core-l-flex")\n        .add(flex().css("example-border")\n                .addItem(flexItem().align(breakpoints(default_, Align.right)).textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item")))\n        .element()',"flex-align-right":'div().css("ws-core-l-flex")\n        .add(flex().css("example-border")\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().align(breakpoints(default_, Align.right)).textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item")))\n        .element()',"flex-align-self-baseline":'div().css("ws-core-l-flex")\n        .add(flex()\n                .add(flex().direction(breakpoints(default_, Direction.column))\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item")))\n                .add(flex()\n                        .direction(breakpoints(default_, Direction.column))\n                        .alignSelf(breakpoints(default_, AlignSelf.baseline))\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item"))))\n        .element()',"flex-align-self-center":'div().css("ws-core-l-flex")\n        .add(flex()\n                .add(flex().direction(breakpoints(default_, Direction.column))\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item")))\n                .add(flex()\n                        .direction(breakpoints(default_, Direction.column))\n                        .alignSelf(breakpoints(default_, AlignSelf.center))\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item"))))\n        .element()',"flex-align-self-end":'div().css("ws-core-l-flex")\n        .add(flex()\n                .add(flex().direction(breakpoints(default_, Direction.column))\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item")))\n                .add(flex()\n                        .direction(breakpoints(default_, Direction.column))\n                        .alignSelf(breakpoints(default_, AlignSelf.flexEnd))\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item"))))\n        .element()',"flex-align-self-stretch":'div().css("ws-core-l-flex")\n        .add(flex()\n                .add(flex().direction(breakpoints(default_, Direction.column))\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item")))\n                .add(flex()\n                        .direction(breakpoints(default_, Direction.column))\n                        .alignSelf(breakpoints(default_, AlignSelf.stretch))\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item"))))\n        .element()',"flex-alternative-components":'div().css("ws-core-l-flex")\n        .add(flex(ul())\n                .addItem(flexItem(li()).textContent("Flex item"))\n                .addItem(flexItem(li()).textContent("Flex item"))\n                .addItem(flexItem(li()).textContent("Flex item"))\n                .addItem(flexItem(li()).textContent("Flex item"))\n                .addItem(flexItem(li()).textContent("Flex item")))\n        .element()',"flex-basic":'div().css("ws-core-l-flex")\n        .add(flex()\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item")))\n        .element()',"flex-column-gap":'div().css("ws-core-l-flex")\n        .add(flex().columnGap(breakpoints(default_, Gap._2xl))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item")))\n        .element()',"flex-column-layout":'div().css("ws-core-l-flex")\n        .add(flex().direction(breakpoints(default_, Direction.column))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item")))\n        .element()',"flex-column-row":'div().css("ws-core-l-flex")\n        .add(flex().direction(breakpoints(default_, Direction.column, lg, Direction.row))\n                .add(flex()\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item")))\n                .add(flex().direction(breakpoints(default_, Direction.column))\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item"))))\n        .element()',"flex-column-widths":'div().css("ws-core-l-flex")\n        .add(flex()\n                .add(flex().flex(breakpoints(default_, FlexShorthand._1))\n                        .addItem(flexItem().textContent("Flex item")))\n                .add(flex().flex(breakpoints(default_, FlexShorthand._2))\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item")))\n                .add(flex().flex(breakpoints(default_, FlexShorthand._3))\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item"))))\n        .element()',"flex-default-layout":'div().css("ws-core-l-flex")\n        .add(flex().css("example-border")\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item")))\n        .element()',"flex-gap":'div().css("ws-core-l-flex")\n        .add(flex().gap(breakpoints(default_, Gap._2xl))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item")))\n        .element()',"flex-grow":'div().css("ws-core-l-flex")\n        .add(flex()\n                .add(flex().grow(default_)\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item")))\n                .add(flex()\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item")))\n                .add(flex()\n                        .addItem(flexItem().textContent("Flex item"))))\n        .element()',"flex-individually-spaced":'div().css("ws-core-l-flex")\n        .add(flex()\n                .addItem(flexItem().spacer(breakpoints(default_, Spacer.none)).textContent("Item - none"))\n                .addItem(flexItem().spacer(breakpoints(default_, Spacer.xs)).textContent("Item - xs"))\n                .addItem(flexItem().spacer(breakpoints(default_, Spacer.md)).textContent("Item - md"))\n                .addItem(flexItem().spacer(breakpoints(default_, Spacer.lg)).textContent("Item - lg"))\n                .addItem(flexItem().spacer(breakpoints(default_, Spacer.xl)).textContent("Item - xl"))\n                .addItem(flexItem().spacer(breakpoints(default_, Spacer._2xl)).textContent("Item - 2xl"))\n                .addItem(flexItem().spacer(breakpoints(default_, Spacer._3xl)).textContent("Item - 3xl")))\n        .element()',"flex-inline":'div().css("ws-core-l-flex")\n        .add(flex().css("example-border").display(breakpoints(default_, Display.inlineFlex))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item")))\n        .element()',"flex-just-end":'div().css("ws-core-l-flex")\n        .add(flex().css("example-border").justifyContent(breakpoints(default_, JustifyContent.flexEnd))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item")))\n        .element()',"flex-just-space-between":'div().css("ws-core-l-flex")\n        .add(flex().css("example-border").justifyContent(breakpoints(default_, JustifyContent.spaceBetween))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item")))\n        .element()',"flex-just-start":'div().css("ws-core-l-flex")\n        .add(flex().css("example-border").justifyContent(breakpoints(default_, JustifyContent.flexStart))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item")))\n        .element()',"flex-nest-columns":'div().css("ws-core-l-flex")\n        .add(flex()\n                .add(flex().direction(breakpoints(default_, Direction.column))\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item")))\n                .add(flex().direction(breakpoints(default_, Direction.column))\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item"))))\n        .element()',"flex-nested-with-items":'div().css("ws-core-l-flex")\n        .add(flex()\n                .add(flex()\n                        .add(flexItem().textContent("Flex item"))\n                        .add(flexItem().textContent("Flex item")))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .add(flex()\n                        .add(flexItem().textContent("Flex item"))))\n        .element()',"flex-nesting":'div().css("ws-core-l-flex")\n        .add(flex()\n                .add(flex()\n                        .add(flexItem().textContent("Flex item"))\n                        .add(flexItem().textContent("Flex item")))\n                .add(flex()\n                        .add(flexItem().textContent("Flex item"))\n                        .add(flexItem().textContent("Flex item"))\n                        .add(flexItem().textContent("Flex item"))))\n        .element()',"flex-order-first-last-responsive":'div().css("ws-core-l-flex")\n        .add(flex().css("example-border")\n                .addItem(flexItem()\n                        .spacer(breakpoints(lg, Spacer.none))\n                        .order(breakpoints(lg, "2"))\n                        .textContent("Item A"))\n                .addItem(flexItem()\n                        .spacer(breakpoints(md, Spacer.none, lg, Spacer.md))\n                        .order(breakpoints(default_, "-1", md, "1"))\n                        .textContent("Item B"))\n                .addItem(flexItem()\n                        .spacer(breakpoints(default_, Spacer.md))\n                        .order(breakpoints(md, "-1"))\n                        .textContent("Item C")))\n        .element()',"flex-order-first-last":'div().css("ws-core-l-flex")\n        .add(flex().css("example-border")\n                .addItem(flexItem().spacer(breakpoints(default_, Spacer.none)).order(breakpoints(default_, "2"))\n                        .textContent("Item A"))\n                .addItem(flexItem()\n                        .textContent("Item B"))\n                .addItem(flexItem().spacer(breakpoints(default_, Spacer.md)).order(breakpoints(default_, "-1"))\n                        .textContent("Item C")))\n        .element()',"flex-ordering-responsive":'div().css("ws-core-l-flex")\n        .add(flex().css("example-border")\n                .add(flex().css("example-border")\n                        .order(breakpoints(default_, "1"))\n                        .spacer(breakpoints(default_, Spacer.none))\n                        .addItem(flexItem()\n                                .order(breakpoints(default_, "3"))\n                                .spacer(breakpoints(default_, Spacer.none))\n                                .textContent("Set 1, Item A"))\n                        .addItem(flexItem()\n                                .order(breakpoints(default_, "1"))\n                                .textContent("Set 1, Item B"))\n                        .addItem(flexItem()\n                                .textContent("Set 1, Item C"))\n                        .addItem(flexItem()\n                                .spacer(breakpoints(default_, Spacer.md))\n                                .textContent("Set 1, Item D")))\n                .add(flex().css("example-border")\n                        .spacer(breakpoints(default_, Spacer.md))\n                        .addItem(flexItem()\n                                .order(breakpoints(default_, "3"))\n                                .spacer(breakpoints(default_, Spacer.none))\n                                .textContent("Set 2, Item A"))\n                        .addItem(flexItem()\n                                .order(breakpoints(lg, "1"))\n                                .textContent("Set 2, Item B"))\n                        .addItem(flexItem()\n                                .textContent("Set 2, Item C"))\n                        .addItem(flexItem()\n                                .order(breakpoints(default_, "2"))\n                                .spacer(breakpoints(default_, Spacer.md))\n                                .textContent("Set 2, Item D"))))\n        .element()',"flex-ordering":'div().css("ws-core-l-flex")\n        .add(flex().css("example-border")\n                .add(flex().css("example-border")\n                        .order(breakpoints(lg, "1"))\n                        .spacer(breakpoints(default_, Spacer.none))\n                        .addItem(flexItem()\n                                .order(breakpoints(md, "2"))\n                                .textContent("Set 1, Item A"))\n                        .addItem(flexItem()\n                                .order(breakpoints(md, "-1"))\n                                .textContent("Set 1, Item B"))\n                        .addItem(flexItem()\n                                .order(breakpoints(xl, "1"))\n                                .textContent("Set 1, Item C"))\n                        .addItem(flexItem()\n                                .order(breakpoints(md, "2"))\n                                .spacer(breakpoints(xl, Spacer.none))\n                                .textContent("Set 1, Item D")))\n                .add(flex().css("example-border")\n                        .spacer(breakpoints(lg, Spacer.md))\n                        .addItem(flexItem()\n                                .order(breakpoints(default_, "3"))\n                                .spacer(breakpoints(default_, Spacer.none))\n                                .textContent("Set 2, Item A"))\n                        .addItem(flexItem()\n                                .order(breakpoints(default_, "1"))\n                                .textContent("Set 2, Item B"))\n                        .addItem(flexItem()\n                                .textContent("Set 2, Item C"))\n                        .addItem(flexItem()\n                                .order(breakpoints(md, "2"))\n                                .spacer(breakpoints(default_, Spacer.md))\n                                .textContent("Set 2, Item D"))))\n        .element()',"flex-row-gap":'div().css("ws-core-l-flex")\n        .add(flex().rowGap(breakpoints(default_, Gap._2xl))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item")))\n        .element()',"flex-spacing-none":'div().css("ws-core-l-flex")\n        .add(flex().spaceItems(breakpoints(default_, SpaceItems.none))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item")))\n        .element()',"flex-spacing-xl":'div().css("ws-core-l-flex")\n        .add(flex().spaceItems(breakpoints(default_, SpaceItems.xl))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item"))\n                .addItem(flexItem().textContent("Flex item")))\n        .element()',"flex-stacking-elements":'div().css("ws-core-l-flex")\n        .add(flex().direction(breakpoints(default_, Direction.column))\n                .add(flex()\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item")))\n                .add(flex()\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item")))\n                .add(flex()\n                        .addItem(flexItem().textContent("Flex item"))))\n        .element()',"flex-width-of-text":'div().css("ws-core-l-flex")\n        .add(flex().direction(breakpoints(default_, Direction.column, lg, Direction.row))\n                .add(flex().flex(breakpoints(default_, FlexShorthand._1))\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent(LoremIpsum.paragraphs(5))))\n                .add(flex().direction(breakpoints(default_, Direction.column))\n                        .addItem(flexItem().textContent("Flex item"))\n                        .addItem(flexItem().textContent("Flex item"))))\n        .element()',"form-basic":'Popover nameInfo = popover()\n        .addHeader(popoverHeader()\n                .add(div()\n                        .add("The ")\n                        .add(a("https://schema.org/name", "_blank").textContent("name"))\n                        .add(" of a ")\n                        .add(a("https://schema.org/Person", "_blank").textContent("person"))))\n        .addBody(popoverBody()\n                .add(div()\n                        .add("Often composed of ")\n                        .add(a("https://schema.org/givenName", "_blank").textContent("givenName"))\n                        .add(" and ")\n                        .add(a("https://schema.org/familyName", "_blank").textContent("familyName"))\n                        .add(".")));\nreturn div()\n        .add(form()\n                .addGroup(formGroup().fieldId("form-basic-name").required()\n                        .addLabel(formGroupLabel("Full name")\n                                .help("More info for name field", nameInfo))\n                        .addControl(formGroupControl()\n                                .addControl(textInput("form-basic-name"))\n                                .addHelperText(helperText("Include your middle name if you have one."))))\n                .addGroup(formGroup().fieldId("form-basic-email").required()\n                        .addLabel(formGroupLabel("Email"))\n                        .addControl(formGroupControl()\n                                .addControl(textInput(email, "form-basic-email"))))\n                .addGroup(formGroup().fieldId("form-basic-phone").required()\n                        .addLabel(formGroupLabel("Phone number"))\n                        .addControl(formGroupControl()\n                                .addControl(textInput(tel, "form-basic-phone")\n                                        .placeholder("555-555-555"))))\n                .addGroup(formGroup().fieldId("form-basic-ct").role(group)\n                        .addLabel(formGroupLabel("How can we contact you?"))\n                        .addControl(formGroupControl().inline()\n                                .addCheckbox(checkbox("form-basic-ct-0", "form-basic-ct", "Email"))\n                                .addCheckbox(checkbox("form-basic-ct-1", "form-basic-ct", "Phone"))\n                                .addCheckbox(checkbox("form-basic-ct-2", "form-basic-ct", "Mail"))))\n                .addGroup(formGroup().fieldId("form-basic-tz").role(radiogroup)\n                        .addLabel(formGroupLabel("Timezone"))\n                        .addControl(formGroupControl().inline()\n                                .addRadio(radio("form-basic-tz-0", "form-basic-tz", "Eastern"))\n                                .addRadio(radio("form-basic-tz-1", "form-basic-tz", "Central"))\n                                .addRadio(radio("form-basic-tz-2", "form-basic-tz", "Pacific"))))\n                .addGroup(formGroup().fieldId("form-basic-additional")\n                        .addLabel(formGroupLabel("Additional note"))\n                        .addControl(formGroupControl()\n                                .addControl(textInput("form-basic-additional").disabled())))\n                .addGroup(formGroup().fieldId("form-basic-updates")\n                        .addControl(formGroupControl()\n                                .addCheckbox(checkbox("form-basic-updates", "form-basic-updates",\n                                        "I\'d like updates via email."))))\n                .addActionGroup(formActionGroup()\n                        .addButton(button("Submit").primary())\n                        .addButton(button("Cancel").link())))\n        .element();',"form-control-select":'String[] values0 = {"Mr", "Miss", "Mrs", "Ms", "Dr", "Other"};\n\nTuples<String, Tuples<String, Boolean>> groups0 = tuples(\n        "Group 1", tuples(\n                "The first option", false,\n                "Option groups (second option selected)", false),\n        "Group 2", tuples(\n                "The third option", false,\n                "The fourth option", true));\n\nTuples<String, List<String>> groups1 = tuples(\n        "Group 1", asList("The first option", "The second option"),\n        "Group 2", asList("The third option", "The fourth option"));\n\nreturn div()\n        .add(formSelect("form-select-0")\n                .addOption(formSelectOption("Selectable placeholder").placeholder(true))\n                .addOptions(asList(values0).subList(0, 5), FormSelectOption::formSelectOption)\n                .addOption(formSelectOption("Disabled option").disabled())\n                .addOption(formSelectOption(values0[5])))\n        .add(br())\n        .add(formSelect("form-select-1")\n                .addOption(formSelectOption("Non-selectable placeholder").placeholder(false))\n                .addOptions(asList(values0), FormSelectOption::formSelectOption))\n        .add(br())\n        .add(formSelect("form-select-2", Id.build("Option groups (second option selected)"))\n                .addGroups(groups0, g -> formSelectOptionGroup(g.key)\n                        .addOptions(g.value, v -> formSelectOption(v.key).disabled(v.value))))\n        .add(br())\n        .add(formSelect("form-select-3", Id.build("Valid option")).validated(success)\n                .addOption(formSelectOption("Valid option"))\n                .addGroups(groups1, g -> formSelectOptionGroup(g.key)\n                        .addOptions(g.value, FormSelectOption::formSelectOption)))\n        .add(br())\n        .add(formSelect("form-select-4", Id.build("Warning option")).validated(warning)\n                .addOption(formSelectOption("Warning option"))\n                .addGroups(groups1, g -> formSelectOptionGroup(g.key)\n                        .addOptions(g.value, FormSelectOption::formSelectOption)))\n        .add(br())\n        .add(formSelect("form-select-5", Id.build("Invalid option")).validated(error)\n                .addOption(formSelectOption("Invalid option"))\n                .addGroups(groups1, g -> formSelectOptionGroup(g.key)\n                        .addOptions(g.value, FormSelectOption::formSelectOption)))\n        .add(br())\n        .add(formSelect("form-select-6").disabled()\n                .addOption(formSelectOption("Disabled").placeholder())\n                .addOptions(asList(values0), FormSelectOption::formSelectOption))\n        .add(br())\n        .element();',"form-control-text-area":'div()\n        .add(textArea("text-area-0", "Standard"))\n        .add(br())\n        .add(textArea("text-area-1", "Readonly").readonly())\n        .add(br())\n        .add(textArea("text-area-2", "Readonly plain").plain())\n        .add(br())\n        .add(textArea("text-area-3", "Disabled").disabled())\n        .add(br())\n        .add(textArea("text-area-4", "Success").validated(success))\n        .add(br())\n        .add(textArea("text-area-5", "Warning").validated(warning))\n        .add(br())\n        .add(textArea("text-area-6", "Error").validated(error))\n        .add(br())\n        .add(textArea("text-area-7", "Resizes vertically").resize(vertical))\n        .add(br())\n        .add(textArea("text-area-8", "Resizes horizontally").resize(horizontal))\n        .add(br())\n        .add(textArea("text-area-9", "Resizes in both directions").resize(both))\n        .add(br())\n        .element()',"form-control-text-input":'div()\n        .add(textInput("text-input-0", "Standard"))\n        .add(br())\n        .add(textInput("text-input-1").placeholder("Placeholder"))\n        .add(br())\n        .add(textInput("text-input-2", "Readonly").readonly())\n        .add(br())\n        .add(textInput("text-input-3", "Readonly plain").plain())\n        .add(br())\n        .add(textInput("text-input-4", "Disabled").disabled())\n        .add(br())\n        .add(textInput("text-input-5", "Success").validated(success))\n        .add(br())\n        .add(textInput("text-input-6", "Warning").validated(warning))\n        .add(br())\n        .add(textInput("text-input-7", "Error").validated(error))\n        .add(br())\n        .add(textInput("text-input-8", "Expanded").expanded())\n        .add(br())\n        .add(textInput("text-input-9", "Calendar").icon(fas("calendar")))\n        .add(br())\n        .add(textInput("text-input-10", "Clock (invalid)")\n                .validated(warning)\n                .icon(fas("clock")))\n        .add(br())\n        .add(textInput("text-input-11", "Custom icon").icon(bell))\n        .element()',"form-field-group":'div()\n        .add(form()\n                .addGroup(formGroup().fieldId("fg0-label0").required()\n                        .addLabel(formGroupLabel("Label 1"))\n                        .addControl(formGroupControl()\n                                .addControl(textInput("fg0-label0"))))\n                .addGroup(formGroup().fieldId("fg0-label1").required()\n                        .addLabel(formGroupLabel("Label 2"))\n                        .addControl(formGroupControl()\n                                .addControl(textInput("fg0-label1"))))\n                .addFieldGroup(formFieldGroup()\n                        .expandable()\n                        .addHeader(formFieldGroupHeader()\n                                .title("Field group 1")\n                                .description("Field group 1 description text.")\n                                .addAction(button().link().text("Delete all"))\n                                .addAction(button().secondary().text("Add parameter")))\n                        .addBody(formFieldGroupBody()\n                                .addFieldGroup(formFieldGroup()\n                                        .expandable()\n                                        .addHeader(formFieldGroupHeader()\n                                                .title("Nested field group 1")\n                                                .description("Nested field group 1 description text.")\n                                                .addAction(button().plain().icon(trash)))\n                                        .addBody(formFieldGroupBody()\n                                                .addGroup(formGroup().fieldId("fg1-label0").required()\n                                                        .addLabel(formGroupLabel("Label 1"))\n                                                        .addControl(formGroupControl()\n                                                                .addControl(textInput("fg1-label0"))))\n                                                .addGroup(formGroup().fieldId("fg1-label1").required()\n                                                        .addLabel(formGroupLabel("Label 2"))\n                                                        .addControl(formGroupControl()\n                                                                .addControl(textInput("fg1-label1"))))))\n                                .addFieldGroup(formFieldGroup()\n                                        .expandable()\n                                        .addHeader(formFieldGroupHeader()\n                                                .title("Nested field group 2")\n                                                .description("Nested field group 2 description text.")\n                                                .addAction(button().plain().icon(trash)))\n                                        .addBody(formFieldGroupBody()\n                                                .addGroup(formGroup().fieldId("fg2-label0").required()\n                                                        .addLabel(formGroupLabel("Label 1"))\n                                                        .addControl(formGroupControl()\n                                                                .addControl(textInput("fg2-label0"))))\n                                                .addGroup(formGroup().fieldId("fg2-label1").required()\n                                                        .addLabel(formGroupLabel("Label 2"))\n                                                        .addControl(formGroupControl()\n                                                                .addControl(textInput("fg2-label1"))))))\n                                .addFieldGroup(formFieldGroup()\n                                        .expandable()\n                                        .addHeader(formFieldGroupHeader()\n                                                .title("Nested field group 3")\n                                                .description("Nested field group 3 description text.")\n                                                .addAction(button().plain().icon(trash)))\n                                        .addBody(formFieldGroupBody()\n                                                .addGroup(formGroup().fieldId("fg3-label0").required()\n                                                        .addLabel(formGroupLabel("Label 1"))\n                                                        .addControl(formGroupControl()\n                                                                .addControl(textInput("fg3-label0"))))\n                                                .addGroup(formGroup().fieldId("fg3-label1").required()\n                                                        .addLabel(formGroupLabel("Label 2"))\n                                                        .addControl(formGroupControl()\n                                                                .addControl(textInput("fg3-label1"))))))\n                                .addGroup(formGroup().fieldId("fg4-label0").required()\n                                        .addLabel(formGroupLabel("Label 1"))\n                                        .addControl(formGroupControl()\n                                                .addControl(textInput("fg4-label0"))))\n                                .addGroup(formGroup().fieldId("fg5-label0").required()\n                                        .addLabel(formGroupLabel("Label 1"))\n                                        .addControl(formGroupControl()\n                                                .addControl(textInput("fg5-label0"))))))\n                .addFieldGroup(formFieldGroup()\n                        .expandable()\n                        .addHeader(formFieldGroupHeader()\n                                .title("Field group 2")\n                                .description("Field group 2 description text.")\n                                .addAction(button().link().text("Delete all"))\n                                .addAction(button().secondary().text("Add parameter")))\n                        .addBody(formFieldGroupBody()\n                                .addGroup(formGroup().fieldId("fg6-label0").required()\n                                        .addLabel(formGroupLabel("Label 1"))\n                                        .addControl(formGroupControl()\n                                                .addControl(textInput("fg6-label0"))))\n                                .addGroup(formGroup().fieldId("fg7-label1").required()\n                                        .addLabel(formGroupLabel("Label 2"))\n                                        .addControl(formGroupControl()\n                                                .addControl(textInput("fg7-label1"))))))\n                .addFieldGroup(formFieldGroup()\n                        .expandable()\n                        .addHeader(formFieldGroupHeader()\n                                .title("Field group 3")\n                                .description("Field group 3 description text."))\n                        .addBody(formFieldGroupBody()\n                                .addGroup(formGroup().fieldId("fg8-label0").required()\n                                        .addLabel(formGroupLabel("Label 1"))\n                                        .addControl(formGroupControl()\n                                                .addControl(textInput("fg8-label0"))))\n                                .addGroup(formGroup().fieldId("fg9-label1").required()\n                                        .addLabel(formGroupLabel("Label 2"))\n                                        .addControl(formGroupControl()\n                                                .addControl(textInput("fg9-label1"))))))\n                .addFieldGroup(formFieldGroup()\n                        .addHeader(formFieldGroupHeader()\n                                .title("Field group 4 (non-expandable)")\n                                .description("Field group 4 description text.")\n                                .addAction(button().link().text("Delete all"))\n                                .addAction(button().secondary().text("Add parameter")))\n                        .addBody(formFieldGroupBody()\n                                .addGroup(formGroup().fieldId("fg10-label0").required()\n                                        .addLabel(formGroupLabel("Label 1"))\n                                        .addControl(formGroupControl()\n                                                .addControl(textInput("fg10-label0"))))\n                                .addGroup(formGroup().fieldId("fg11-label1").required()\n                                        .addLabel(formGroupLabel("Label 2"))\n                                        .addControl(formGroupControl()\n                                                .addControl(textInput("fg11-label1"))))))\n                .addGroup(formGroup().fieldId("fg12-label0").required()\n                        .addLabel(formGroupLabel("Label 1"))\n                        .addControl(formGroupControl()\n                                .addControl(textInput("fg12-label0"))))\n                .addGroup(formGroup().fieldId("fg13-label0").required()\n                        .addLabel(formGroupLabel("Label 1"))\n                        .addControl(formGroupControl()\n                                .addControl(textInput("fg13-label0")))))\n        .element()',"form-grid":'div()\n        .add(form()\n                .add(grid().gutter().columns(breakpoints(md, 6))\n                        .addItem(gridItem().span(12)\n                                .add(formGroup().fieldId("form-grid-name").required()\n                                        .addLabel(formGroupLabel("Full name"))\n                                        .addControl(formGroupControl()\n                                                .addControl(textInput("form-grid-name"))\n                                                .addHelperText(helperText(\n                                                        "Include your middle name if you have one.")))))\n                        .add(formGroup().fieldId("form-grid-email").required()\n                                .addLabel(formGroupLabel("Email"))\n                                .addControl(formGroupControl()\n                                        .addControl(textInput(email, "form-grid-email"))))\n                        .add(formGroup().fieldId("form-grid-phone").required()\n                                .addLabel(formGroupLabel("Phone number"))\n                                .addControl(formGroupControl()\n                                        .addControl(textInput(tel, "form-grid-phone")\n                                                .placeholder("555-555-555"))))))\n        .element()',"form-horizontal":'String[] values = {"Mr", "Miss", "Mrs", "Ms", "Dr", "Other"};\n\nreturn div()\n        .add(form().horizontal()\n                .addGroup(formGroup().fieldId("form-hz-name").required()\n                        .addLabel(formGroupLabel("Full name"))\n                        .addControl(formGroupControl()\n                                .addControl(textInput("form-hz-name"))\n                                .addHelperText(helperText("Include your middle name if you have one."))))\n                .addGroup(formGroup().fieldId("form-hz-email").required()\n                        .addLabel(formGroupLabel("Email"))\n                        .addControl(formGroupControl()\n                                .addControl(textInput(email, "form-hz-email"))))\n                .addGroup(formGroup().fieldId("form-hz-title").required()\n                        .addLabel(formGroupLabel("Your title"))\n                        .addControl(formGroupControl()\n                                .addControl(formSelect("form-hz-title")\n                                        .addOption(formSelectOption("Select one").placeholder())\n                                        .addOptions(asList(values), FormSelectOption::formSelectOption))))\n                .addGroup(formGroup().fieldId("form-hz-exp").required()\n                        .addLabel(formGroupLabel("Your experience"))\n                        .addControl(formGroupControl()\n                                .addControl(textArea("form-hz-exp").resize(both))))\n                .addGroup(formGroup().fieldId("form-hz-ct").role(group)\n                        .addLabel(formGroupLabel("How can we contact you?"))\n                        .addControl(formGroupControl().stack()\n                                .addCheckbox(checkbox("form-hz-ct-0", "form-hz-ct", "Email"))\n                                .addCheckbox(checkbox("form-hz-ct-1", "form-hz-ct", "Phone"))\n                                .addCheckbox(checkbox("form-hz-ct-2", "form-hz-ct", "Mail"))))\n                .addGroup(formGroup().fieldId("form-hz-tz").role(radiogroup)\n                        .addLabel(formGroupLabel("Timezone"))\n                        .addControl(formGroupControl().stack()\n                                .addRadio(radio("form-hz-tz-0", "form-hz-tz", "Eastern"))\n                                .addRadio(radio("form-hz-tz-1", "form-hz-tz", "Central"))\n                                .addRadio(radio("form-hz-tz-2", "form-hz-tz", "Pacific"))))\n                .addActionGroup(formActionGroup()\n                        .addButton(button("Submit").primary())\n                        .addButton(button("Cancel").link())))\n        .element();',"form-hzs-hot":'div()\n        .add(form().horizontal()\n                .addGroup(formGroup().role(group).fieldId("form-hzs-hot-options")\n                        .addLabel(formGroupLabel("Label").noPaddingTop())\n                        .addControl(formGroupControl().stack()\n                                .addHelperText(helperText("Select all that apply:"))\n                                .addCheckbox(\n                                        checkbox("form-hzs-hot-options-0", "form-hzs-hot-options", "Option 1"))\n                                .addCheckbox(\n                                        checkbox("form-hzs-hot-options-1", "form-hzs-hot-options",\n                                                "Option 2")))))\n        .element()',"form-hzs-npt":'div()\n        .add(form().horizontal()\n                .addGroup(formGroup().role(group).fieldId("form-hzs-npt-options")\n                        .addLabel(formGroupLabel("Label").noPaddingTop())\n                        .addControl(formGroupControl().stack()\n                                .addCheckbox(\n                                        checkbox("form-hzs-npt-options-0", "form-hzs-npt-options", "Option 1"))\n                                .addCheckbox(\n                                        checkbox("form-hzs-npt-options-1", "form-hzs-npt-options",\n                                                "Option 2")))))\n        .element()',"form-invalid-alert":'div()\n        .add(form()\n                .addAlert(formAlert()\n                        .addAlert(alert(danger, "Fill out all required fields before continuing.")\n                                .inline()\n                                .liveRegion()))\n                .addGroup(formGroup()\n                        .addLabel(formGroupLabel("Age"))\n                        .addControl(formGroupControl()\n                                .addControl(textInput("form-invalid-alert-age", "Five")\n                                        .validated(error))\n                                .addHelperText(helperText("Must be a number", error)))))\n        .element()',"form-invalid":'div()\n        .add(form()\n                .addGroup(formGroup()\n                        .addLabel(formGroupLabel("Age"))\n                        .addControl(formGroupControl()\n                                .addControl(textInput("form-invalid-age", "Five")\n                                        .validated(error))\n                                .addHelperText(helperText("Must be a number", error)))))\n        .element()',"form-lw":'Popover nameInfo = popover()\n        .addHeader(popoverHeader()\n                .add(div()\n                        .add("The ")\n                        .add(a("https://schema.org/name", "_blank").textContent("name"))\n                        .add(" of a ")\n                        .add(a("https://schema.org/Person", "_blank").textContent("person"))))\n        .addBody(popoverBody()\n                .add(div()\n                        .add("Often composed of ")\n                        .add(a("https://schema.org/givenName", "_blank").textContent("givenName"))\n                        .add(" and ")\n                        .add(a("https://schema.org/familyName", "_blank").textContent("familyName"))\n                        .add(".")));\nreturn div()\n        .add(form().limitWidth()\n                .addGroup(formGroup().fieldId("form-lw-name").required()\n                        .addLabel(formGroupLabel("Full name")\n                                .help("More info for name field", nameInfo))\n                        .addControl(formGroupControl()\n                                .addControl(textInput("form-lw-name"))\n                                .addHelperText(helperText("Include your middle name if you have one."))))\n                .addGroup(formGroup().fieldId("form-lw-email").required()\n                        .addLabel(formGroupLabel("Email"))\n                        .addControl(formGroupControl()\n                                .addControl(textInput(email, "form-lw-email"))))\n                .addGroup(formGroup().fieldId("form-lw-phone").required()\n                        .addLabel(formGroupLabel("Phone number"))\n                        .addControl(formGroupControl()\n                                .addControl(textInput(tel, "form-lw-phone")\n                                        .placeholder("555-555-555"))))\n                .addGroup(formGroup().fieldId("form-lw-ct").role(group)\n                        .addLabel(formGroupLabel("How can we contact you?"))\n                        .addControl(formGroupControl().inline()\n                                .addCheckbox(checkbox("form-lw-ct-0", "form-lw-ct", "Email"))\n                                .addCheckbox(checkbox("form-lw-ct-1", "form-lw-ct", "Phone"))\n                                .addCheckbox(checkbox("form-lw-ct-2", "form-lw-ct", "Mail"))))\n                .addGroup(formGroup().fieldId("form-lw-tz").role(radiogroup)\n                        .addLabel(formGroupLabel("Timezone"))\n                        .addControl(formGroupControl().inline()\n                                .addRadio(radio("form-lw-tz-0", "form-lw-tz", "Eastern"))\n                                .addRadio(radio("form-lw-tz-1", "form-lw-tz", "Central"))\n                                .addRadio(radio("form-lw-tz-2", "form-lw-tz", "Pacific"))))\n                .addGroup(formGroup().fieldId("form-lw-additional")\n                        .addLabel(formGroupLabel("Additional note"))\n                        .addControl(formGroupControl()\n                                .addControl(textInput("form-lw-additional").disabled())))\n                .addGroup(formGroup().fieldId("form-lw-updates")\n                        .addControl(formGroupControl()\n                                .addCheckbox(checkbox("form-lw-updates", "form-lw-updates",\n                                        "I\'d like updates via email."))))\n                .addActionGroup(formActionGroup()\n                        .addButton(button("Submit").primary())\n                        .addButton(button("Cancel")\n                                .link())))\n        .element();',"form-section":'div()\n        .add(form()\n                .addSection(formSection()\n                        .addGroup(formGroup().fieldId("form-section-1-input").required()\n                                .addLabel(formGroupLabel("Form section 1 input"))\n                                .addControl(formGroupControl()\n                                        .addControl(textInput("form-section-1-input")))))\n                .addSection(formSection("Form section 2 (optional title)", h(2))\n                        .addGroup(formGroup().fieldId("form-section-2-input").required()\n                                .addLabel(formGroupLabel("Form section 2 input"))\n                                .addControl(formGroupControl()\n                                        .addControl(textInput("form-section-2-input"))))))\n        .element()',"form-select-basic":'String[] values = {"Mr", "Miss", "Mrs", "Ms", "Dr", "Other"};\nreturn div()\n        // if not specified, Id.build(<label>) is used as value\n        .add(formSelect("basic-form-select-0", Id.build("Mrs"))\n                .addOption(formSelectOption("Select one").placeholder())\n                .addOptions(asList(values), FormSelectOption::formSelectOption))\n        .element();',"form-select-disabled":'String[] values = {"Mr", "Miss", "Mrs", "Ms", "Dr", "Other"};\nreturn div()\n        .add(formSelect("disabled-form-select-0", Id.build("Mrs")).disabled()\n                .addOption(formSelectOption("Select one").placeholder())\n                .addOptions(asList(values), FormSelectOption::formSelectOption))\n        .element();',"form-select-grouped":'div()\n        .add(formSelect("disabled-form-select-0", "2")\n                .addGroup(formSelectOptionGroup("Group 1")\n                        .addOption(formSelectOption("The first option", "1"))\n                        .addOption(formSelectOption("Second option is selected by default", "2")))\n                .addGroup(formSelectOptionGroup("Group 2")\n                        .addOption(formSelectOption("The third option", "3"))\n                        .addOption(formSelectOption("The fourth option", "4")))\n                .addGroup(formSelectOptionGroup("Group 3").disabled()\n                        .addOption(formSelectOption("The fifth option", "5"))\n                        .addOption(formSelectOption("The sixth option", "6"))))\n        .element()',"form-select-validated":'final double[] handle = {0};\nHelperText helperText = helperText("");\nFormSelect formSelect = formSelect("validated-form-select-0")\n        .onChange((e, fs, value) -> {\n            clearTimeout(handle[0]);\n            fs.validated(default_);\n            helperText.firstItem()\n                    .status(default_)\n                    .text("Validating...");\n            int number = Integer.parseInt(value);\n            handle[0] = setTimeout(__ -> {\n                if (number == 0) {\n                    fs.validated(warning);\n                    helperText.firstItem()\n                            .status(warning)\n                            .text("You must have select a value");\n                } else if (number == 3) {\n                    fs.validated(success);\n                    helperText.firstItem()\n                            .status(success)\n                            .text("You chose wisely");\n                } else {\n                    fs.validated(error);\n                    helperText.firstItem()\n                            .status(error)\n                            .text("You must chose Three (thought that was obvious)");\n                }\n            }, 1234);\n        });\nreturn div()\n        .add(form()\n                .add(formGroup()\n                        .addLabel(formGroupLabel("Comments:"))\n                        .addControl(formGroupControl()\n                                .addControl(formSelect\n                                        .addOption(formSelectOption("Select a number", "0")\n                                                .placeholder(true))\n                                        .addOption(formSelectOption("One", "1"))\n                                        .addOption(formSelectOption("Two", "2"))\n                                        .addOption(formSelectOption("Three - the only valid option", "3")))\n                                .addHelperText(helperText))))\n        .element();',"gallery-alternative-components":'div()\n        .add(gallery(ul())\n                .addItem(galleryItem(li()).textContent("Gallery item"))\n                .addItem(galleryItem(li()).textContent("Gallery item"))\n                .addItem(galleryItem(li()).textContent("Gallery item"))\n                .addItem(galleryItem(li()).textContent("Gallery item"))\n                .addItem(galleryItem(li()).textContent("Gallery item")))\n        .element()',"gallery-basic":'div().css("ws-core-l-gallery")\n        .add(gallery()\n                .addItem(galleryItem().textContent("Gallery item"))\n                .addItem(galleryItem().textContent("Gallery item"))\n                .addItem(galleryItem().textContent("Gallery item"))\n                .addItem(galleryItem().textContent("Gallery item"))\n                .addItem(galleryItem().textContent("Gallery item"))\n                .addItem(galleryItem().textContent("Gallery item"))\n                .addItem(galleryItem().textContent("Gallery item"))\n                .addItem(galleryItem().textContent("Gallery item")))\n        .element()',"gallery-gutter":'div().css("ws-core-l-gallery")\n        .add(gallery().gutter()\n                .addItem(galleryItem().textContent("Gallery item"))\n                .addItem(galleryItem().textContent("Gallery item"))\n                .addItem(galleryItem().textContent("Gallery item"))\n                .addItem(galleryItem().textContent("Gallery item"))\n                .addItem(galleryItem().textContent("Gallery item"))\n                .addItem(galleryItem().textContent("Gallery item")))\n        .element()',"gallery-max-width":'div().css("ws-core-l-gallery")\n        .add(gallery().gutter()\n                .minWidths(tuple(md, "280px"),\n                        tuple(lg, "320px"),\n                        tuple(_2xl, "400px"))\n                .addItem(galleryItem().textContent("Gallery item"))\n                .addItem(galleryItem().textContent("Gallery item"))\n                .addItem(galleryItem().textContent("Gallery item"))\n                .addItem(galleryItem().textContent("Gallery item"))\n                .addItem(galleryItem().textContent("Gallery item"))\n                .addItem(galleryItem().textContent("Gallery item"))\n                .addItem(galleryItem().textContent("Gallery item"))\n                .addItem(galleryItem().textContent("Gallery item")))\n        .element()',"gallery-min-max-width":'div().css("ws-core-l-gallery")\n        .add(gallery().gutter()\n                .minWidths(tuple(default_, "100%"),\n                        tuple(md, "100px"),\n                        tuple(xl, "300px"))\n                .maxWidths(tuple(md, "200px"),\n                        tuple(xl, "1fr"))\n                .addItem(galleryItem().textContent("Gallery item"))\n                .addItem(galleryItem().textContent("Gallery item"))\n                .addItem(galleryItem().textContent("Gallery item"))\n                .addItem(galleryItem().textContent("Gallery item"))\n                .addItem(galleryItem().textContent("Gallery item"))\n                .addItem(galleryItem().textContent("Gallery item"))\n                .addItem(galleryItem().textContent("Gallery item"))\n                .addItem(galleryItem().textContent("Gallery item")))\n        .element()',"gallery-min-width":'div().css("ws-core-l-gallery")\n        .add(gallery().gutter()\n                .minWidths(tuple(md, "100px"),\n                        tuple(lg, "150px"),\n                        tuple(xl, "200px"),\n                        tuple(_2xl, "300px"))\n                .addItem(galleryItem().textContent("Gallery item"))\n                .addItem(galleryItem().textContent("Gallery item"))\n                .addItem(galleryItem().textContent("Gallery item"))\n                .addItem(galleryItem().textContent("Gallery item"))\n                .addItem(galleryItem().textContent("Gallery item"))\n                .addItem(galleryItem().textContent("Gallery item"))\n                .addItem(galleryItem().textContent("Gallery item"))\n                .addItem(galleryItem().textContent("Gallery item")))\n        .element()',"grid-alternative-components":'div().css("ws-core-l-grid")\n        .add(grid(ul())\n                .addItem(gridItem(li()).textContent("Grid item"))\n                .addItem(gridItem(li()).textContent("Grid item"))\n                .addItem(gridItem(li()).textContent("Grid item"))\n                .addItem(gridItem(li()).textContent("Grid item"))\n                .addItem(gridItem(li()).textContent("Grid item")))\n        .element()',"grid-basic":'div().css("ws-core-l-grid")\n        .add(grid()\n                .addItem(gridItem().span(8)\n                        .textContent("span = 8"))\n                .addItem(gridItem().span(4).rowSpan(2)\n                        .textContent("span = 4, rowSpan = 2"))\n                .addItem(gridItem().span(2).rowSpan(3)\n                        .textContent("span = 2, rowSpan = 3"))\n                .addItem(gridItem().span(2)\n                        .textContent("span = 2"))\n                .addItem(gridItem().span(4)\n                        .textContent("span = 4"))\n                .addItem(gridItem().span(2)\n                        .textContent("span = 2"))\n                .addItem(gridItem().span(2)\n                        .textContent("span = 2"))\n                .addItem(gridItem().span(2)\n                        .textContent("span = 2"))\n                .addItem(gridItem().span(4)\n                        .textContent("span = 4"))\n                .addItem(gridItem().span(2)\n                        .textContent("span = 2"))\n                .addItem(gridItem().span(4)\n                        .textContent("span = 4"))\n                .addItem(gridItem().span(4)\n                        .textContent("span = 4")))\n        .element()',"grid-gutter":'div().css("ws-core-l-grid")\n        .add(grid().gutter()\n                .addItem(gridItem().span(8)\n                        .textContent("span = 8"))\n                .addItem(gridItem().span(4).rowSpan(2)\n                        .textContent("span = 4, rowSpan = 2"))\n                .addItem(gridItem().span(2).rowSpan(3)\n                        .textContent("span = 2, rowSpan = 3"))\n                .addItem(gridItem().span(2)\n                        .textContent("span = 2"))\n                .addItem(gridItem().span(4)\n                        .textContent("span = 4"))\n                .addItem(gridItem().span(2)\n                        .textContent("span = 2"))\n                .addItem(gridItem().span(2)\n                        .textContent("span = 2"))\n                .addItem(gridItem().span(2)\n                        .textContent("span = 2"))\n                .addItem(gridItem().span(4)\n                        .textContent("span = 4"))\n                .addItem(gridItem().span(2)\n                        .textContent("span = 2"))\n                .addItem(gridItem().span(4)\n                        .textContent("span = 4"))\n                .addItem(gridItem().span(4)\n                        .textContent("span = 4")))\n        .element()',"grid-order-grouped":'div().css("ws-core-l-grid")\n        .add(grid().gutter().span(12)\n                .add(grid().gutter().span(6).order(breakpoints(default_, "2"))\n                        .addItem(gridItem().order(breakpoints(default_, "3")).textContent("Set 1, Item A"))\n                        .addItem(gridItem().order(breakpoints(default_, "1")).textContent("Set 1, Item B"))\n                        .addItem(gridItem().textContent("Set 1, Item C"))\n                        .addItem(gridItem().order(breakpoints(default_, "2")).textContent("Set 1, Item D")))\n                .add(grid().gutter().span(6)\n                        .addItem(gridItem().order(breakpoints(default_, "2")).textContent("Set 2, Item A"))\n                        .addItem(gridItem().order(breakpoints(default_, "1")).textContent("Set 2, Item B"))\n                        .addItem(gridItem().textContent("Set 2, Item C"))\n                        .addItem(gridItem().order(breakpoints(default_, "2")).textContent("Set 2, Item D"))))\n        .element()',"grid-order-responsive":'div().css("ws-core-l-grid")\n        .add(grid().gutter().span(3)\n                .addItem(gridItem().order(breakpoints(lg, "2")).textContent("Item A"))\n                .addItem(gridItem().textContent("Item B"))\n                .addItem(gridItem().order(breakpoints(default_, "-1", md, "1"))\n                        .textContent("Item C")))\n        .element()',"grid-order-standard":'div().css("ws-core-l-grid")\n        .add(grid().gutter().span(3)\n                .addItem(gridItem().order(breakpoints(default_, "2")).textContent("Item A"))\n                .addItem(gridItem().textContent("Item B"))\n                .addItem(gridItem().order(breakpoints(default_, "-1")).textContent("Item C")))\n        .element()',"grid-overrides":'div().css("ws-core-l-grid")\n        .add(grid().columns(breakpoints(sm, 6, md, 4, lg, 3, _2xl, 1))\n                .addItem(gridItem().span(3).rowSpan(2)\n                        .textContent("span = 3, rowSpan = 2"))\n                .addItem(gridItem().textContent("Grid item"))\n                .addItem(gridItem().textContent("Grid item"))\n                .addItem(gridItem().textContent("Grid item"))\n                .addItem(gridItem().textContent("Grid item"))\n                .addItem(gridItem().textContent("Grid item"))\n                .addItem(gridItem().textContent("Grid item"))\n                .addItem(gridItem().textContent("Grid item"))\n                .addItem(gridItem().textContent("Grid item"))\n                .addItem(gridItem().textContent("Grid item"))\n                .addItem(gridItem().textContent("Grid item"))\n                .addItem(gridItem().textContent("Grid item")))\n        .element()',"grouped-list":'div()\n        .add(simpleList()\n                .addGroup(simpleListGroup("Group 1")\n                        .addItems(range(1, 5).boxed().collect(toList()), index ->\n                                simpleListItem(Id.build("grouped-list-1", String.valueOf(index)),\n                                        "List item " + index)))\n                .addGroup(simpleListGroup("Group 2")\n                        .addItems(range(1, 5).boxed().collect(toList()), index ->\n                                simpleListItem(Id.build("grouped-list-2", String.valueOf(index)),\n                                        "List item " + index))))\n        .element()',"helper-text-dynamic-list":'div()\n        .add(helperText(ul()).liveRegion()\n                .addItem(helperTextItem(li(), "Must be at least 14 characters", success)\n                        .dynamic()\n                        .defaultIcon())\n                .addItem(helperTextItem(li(), "Cannot contain any variation of the word \\"redhat\\"", error)\n                        .dynamic()\n                        .defaultIcon())\n                .addItem(helperTextItem(\n                        "Must include at least 3 of the following: lowercase letter, uppercase letters, numbers, symbols",\n                        success)\n                        .dynamic()\n                        .defaultIcon()))\n        .element()',"helper-text-dynamic":'div()\n        .add(helperText()\n                .addItem(helperTextItem("This is default helper text")\n                        .dynamic()\n                        .defaultIcon()))\n        .add(helperText()\n                .addItem(helperTextItem("This is indeterminate helper text", indeterminate)\n                        .dynamic()\n                        .defaultIcon()))\n        .add(helperText()\n                .addItem(helperTextItem("This is warning helper text", warning)\n                        .dynamic()\n                        .defaultIcon()))\n        .add(helperText()\n                .addItem(helperTextItem("This is success helper text", success)\n                        .dynamic()\n                        .defaultIcon()))\n        .add(helperText()\n                .addItem(helperTextItem("This is error helper text", error)\n                        .dynamic()\n                        .defaultIcon()))\n        .add(helperText()\n                .addItem(helperTextItem("This is error helper text with a custom icon", error)\n                        .dynamic()\n                        .icon(times)))\n        .add(helperText()\n                .addItem(helperTextItem("This is error helper text with no icon", error)\n                        .dynamic()))\n        .element()',"helper-text-multiple-static":'div()\n        .add(helperText()\n                .addItem(helperTextItem("This is default helper text"))\n                .addItem(helperTextItem("This is another default helper text in the same block"))\n                .addItem(helperTextItem("And this is more default text in the same block")))\n        .element()',"helper-text-static-custom-icon":'div()\n        .add(helperText()\n                .addItem(helperTextItem("This is default helper text")\n                        .icon(fas("info"))))\n        .add(helperText()\n                .addItem(helperTextItem("This is indeterminate helper text", indeterminate)\n                        .icon(fas("question"))))\n        .add(helperText()\n                .addItem(helperTextItem("This is warning helper text", warning)\n                        .icon(fas("exclamation"))))\n        .add(helperText()\n                .addItem(helperTextItem("This is success helper text", success)\n                        .icon(check)))\n        .add(helperText()\n                .addItem(helperTextItem("This is error helper text", error)\n                        .icon(times)))\n        .element()',"helper-text-static-icon":'div()\n        .add(helperText()\n                .addItem(helperTextItem("This is default helper text").defaultIcon()))\n        .add(helperText()\n                .addItem(helperTextItem("This is indeterminate helper text", indeterminate).defaultIcon()))\n        .add(helperText()\n                .addItem(helperTextItem("This is warning helper text", warning).defaultIcon()))\n        .add(helperText()\n                .addItem(helperTextItem("This is success helper text", success).defaultIcon()))\n        .add(helperText()\n                .addItem(helperTextItem("This is error helper text", error).defaultIcon()))\n        .element()',"helper-text-static":'div()\n        .add(helperText("This is default helper text"))\n        .add(helperText("This is indeterminate helper text", indeterminate))\n        .add(helperText("This is warning helper text", warning))\n        .add(helperText("This is success helper text", success))\n        .add(helperText("This is error helper text", error))\n        .element()',"hint-basic-no-title":'div()\n        .add(hint()\n                .addBody(hintBody()\n                        .add("Welcome to the new documentation experience. ")\n                        .add(button().link().inline()\n                                .text("Learn more about the improved features."))))\n        .add(br())\n        .add(hint()\n                .addActions(hintActions()\n                        .add(dropdown()\n                                .addToggle(menuToggle(ellipsisV, "kebab dropdown toggle"))\n                                .addMenu(menu()\n                                        .addContent(menuContent()\n                                                .addList(menuList()\n                                                        .addItem(actionMenuItem("hint-basic-no-title-item-0",\n                                                                "Action"))\n                                                        .addItem(linkMenuItem("hint-basic-no-title-item-1",\n                                                                "Link",\n                                                                "#item-1"))\n                                                        .addItem(actionMenuItem("hint-basic-no-title-item-2",\n                                                                "Disabled action")\n                                                                .disabled())\n                                                        .addItem(linkMenuItem("hint-basic-no-title-item-3",\n                                                                "Disabled link", "#item-3")\n                                                                .disabled())\n                                                        .addDivider()\n                                                        .addItem(actionMenuItem("hint-basic-no-title-item-4",\n                                                                "Separated action"))\n                                                        .addItem(linkMenuItem("hint-basic-no-title-item-5",\n                                                                "Separated link", "#item-5")))))))\n                .addBody(hintBody()\n                        .textContent(\n                                "Upgrade to Red Hat Smart Management to remediate all your systems across regions and geographies."))\n                .addFooter(hintFooter()\n                        .add(button().link().inline()\n                                .text("Try it for 90 days"))))\n        .element()',"hint-basic":'div()\n        .add(hint()\n                .addActions(hintActions()\n                        .add(dropdown()\n                                .addToggle(menuToggle(ellipsisV, "kebab dropdown toggle"))\n                                .addMenu(menu()\n                                        .addContent(menuContent()\n                                                .addList(menuList()\n                                                        .addItem(actionMenuItem("hint-basic-item-0", "Action"))\n                                                        .addItem(linkMenuItem("hint-basic-item-1", "Link",\n                                                                "#item-1"))\n                                                        .addItem(actionMenuItem("hint-basic-item-2",\n                                                                "Disabled action")\n                                                                .disabled())\n                                                        .addItem(linkMenuItem("hint-basic-item-3",\n                                                                "Disabled link", "#item-3")\n                                                                .disabled())\n                                                        .addDivider()\n                                                        .addItem(actionMenuItem("hint-basic-item-4",\n                                                                "Separated action"))\n                                                        .addItem(linkMenuItem("hint-basic-item-5",\n                                                                "Separated link", "#item-5")))))))\n                .addTitle(hintTitle()\n                        .textContent("Do more with Find it Fix it capabilities"))\n                .addBody(hintBody()\n                        .textContent(\n                                "Upgrade to Red Hat Smart Management to remediate all your systems across regions and geographies."))\n                .addFooter(hintFooter()\n                        .add(button().link().inline()\n                                .text("Try it for 90 days"))))\n        .element()',"icon-basic":'div()\n        .add(icon(fas("long-arrow-alt-down")))\n        .add(" ")\n        .add(icon(angleRight))\n        .add(" ")\n        .add(icon(angleDown))\n        .add(" ")\n        .add(icon(fas("cog")))\n        .element()',"icon-container":'div()\n        .add(icon(plusCircle).size(xl).iconSize(sm))\n        .add(" ")\n        .add(icon(plusCircle).size(xl).iconSize(md))\n        .add(" ")\n        .add(icon(plusCircle).size(xl).iconSize(lg))\n        .add(" ")\n        .add(icon(plusCircle).size(xl))\n        .element()',"icon-in-progress-custom":'Icon icon = icon(checkCircle);\nreturn div()\n        .add(div().css(util("mb-md"))\n                .add(checkbox("in-progress-custom-cb", "in-progress-custom-cb", "Toggle in progress state")\n                        .onChange((e, c, value) -> icon.progress(value,\n                                spinner -> spinner.diameter("2em")))))\n        .add(icon)\n        .element();',"icon-in-progress":'Icon icon = icon(checkCircle);\nreturn div()\n        .add(div().css(util("mb-md"))\n                .add(checkbox("in-progress-cb", "in-progress-cb", "Toggle in progress state")\n                        .onChange((e, c, value) -> icon.progress(value))))\n        .add(icon)\n        .element();',"icon-inline":'div()\n        .add(textContent()\n                .add(h(1)\n                        .add("Heading ")\n                        .add(icon(plusCircle).inline()))\n                .add(p().textContent(LoremIpsum.paragraph()))\n                .add(h(2)\n                        .add("Second level ")\n                        .add(icon(plusCircle).inline()))\n                .add(p()\n                        .add(icon(plusCircle).inline())\n                        .add(" " + LoremIpsum.paragraphs(2) + " ")\n                        .add(strong()\n                                .add(LoremIpsum.words(2) + " ")\n                                .add(icon(plusCircle).inline()))\n                        .add(" " + LoremIpsum.words(5))\n                        .add(LoremIpsum.paragraphs(2)))\n                .add(small()\n                        .add("Sometimes you need small text ")\n                        .add(icon(plusCircle).inline()))\n                .add(div()\n                        .add("Inline with size specified: ")\n                        .add(icon(plusCircle).size(sm).inline())\n                        .add(" small, ")\n                        .add(icon(plusCircle).size(md).inline())\n                        .add(" medium, ")\n                        .add(icon(plusCircle).size(lg).inline())\n                        .add(" large, ")\n                        .add(icon(plusCircle).size(xl).inline())\n                        .add(" extra large")))\n        .element()',"icon-sizes":'div()\n        .add(icon(plusCircle).size(sm))\n        .add(" ")\n        .add(icon(plusCircle).size(md))\n        .add(" ")\n        .add(icon(plusCircle).size(lg))\n        .add(" ")\n        .add(icon(plusCircle).size(xl))\n        .element()',"icon-status-colors":'div()\n        .add(icon(exclamationCircle).status(danger))\n        .add(" ")\n        .add(icon(exclamationTriangle).status(warning))\n        .add(" ")\n        .add(icon(check).status(success))\n        .add(" ")\n        .add(icon(infoCircle).status(info))\n        .add(" ")\n        .add(icon(bell).status(custom))\n        .element()',"input-group-basic":'div()\n        .add(inputGroup()\n                .addItem(inputGroupItem().fill()\n                        .addFormControl(textInput("input-group-basic-0")))\n                .addText(inputGroupText("@example.com")))\n        .add(br())\n        .add(inputGroup()\n                .addText(inputGroupText().icon(fas("at")))\n                .addItem(inputGroupItem().fill()\n                        .addFormControl(textInput("input-group-basic-1")\n                                .validated(error))))\n        .add(br())\n        .add(inputGroup()\n                .addItem(inputGroupItem().fill()\n                        .addFormControl(textInput("input-group-basic-3")))\n                .addText(inputGroupText("%").plain()))\n        .element()',"input-group-dropdown":'div()\n        .add(inputGroup()\n                .addItem(inputGroupItem()\n                        .addDropdown(dropdown()\n                                .addToggle(menuToggle("Dropdown"))\n                                .addMenu(menu()\n                                        .addContent(menuContent()\n                                                .addList(menuList()\n                                                        .addItem(actionMenuItem("option-0", "Option 1"))\n                                                        .addItem(actionMenuItem("option-1", "Option 2"))\n                                                        .addItem(actionMenuItem("option-2", "Option 3")))))))\n                .addItem(inputGroupItem().fill()\n                        .addFormControl(textInput("input-group-dropdown-0")))\n                .addItem(inputGroupItem()\n                        .addButton(button("Button").control())))\n        .element()',"input-group-multiple-siblings":'div()\n        .add(inputGroup()\n                .addItem(inputGroupItem()\n                        .addButton(button("Button").control()))\n                .addItem(inputGroupItem().fill()\n                        .addFormControl(textArea("input-group-multiple-siblings-0")\n                                .resize(both)))\n                .addItem(inputGroupItem()\n                        .addButton(button("Button").control())))\n        .add(br())\n        .add(inputGroup()\n                .addItem(inputGroupItem()\n                        .addButton(button("Button").control()))\n                .addItem(inputGroupItem()\n                        .addButton(button("Button").control()))\n                .addItem(inputGroupItem().fill()\n                        .addFormControl(textArea("input-group-multiple-siblings-1")\n                                .resize(both)))\n                .addItem(inputGroupItem()\n                        .addButton(button("Button").control())))\n        .add(br())\n        .add(inputGroup()\n                .addText(inputGroupText()\n                        .icon(fas("dollar-sign")))\n                .addItem(inputGroupItem().fill()\n                        .addFormControl(textInput("input-group-multiple-siblings-2")))\n                .addText(inputGroupText().text(".00")))\n        .element()',"input-group-popover":'div().style("width", "500px")\n        .add(inputGroup()\n                .addItem(inputGroupItem().fill()\n                        .addFormControl(textInput("input-group-popover-0")))\n                .addText(inputGroupText().id("input-group-popover-icon-0")\n                        .icon(questionCircle))\n                .add(popover(By.id("input-group-popover-icon-0"))\n                        .placement(top)\n                        .addBody("This field is an example of an input group with a popover.")))\n        .add(br())\n        .add(inputGroup()\n                .addItem(inputGroupItem().fill()\n                        .addFormControl(textInput("input-group-popover-1")))\n                .addText(inputGroupText().id("input-group-popover-icon-1")\n                        .icon(questionCircle).plain())\n                .add(popover(By.id("input-group-popover-icon-1"))\n                        .placement(top)\n                        .addBody("This field is an example of an input group with a popover.")))\n        .element()',"input-group-textarea":'div()\n        .add(inputGroup()\n                .addItem(inputGroupItem().fill()\n                        .addFormControl(textArea("input-group-textarea-0")\n                                .resize(both)))\n                .addItem(inputGroupItem()\n                        .addButton(button("Button").control())))\n        .element()',"jump-links-basic":'div()\n        .add(jumpLinks()\n                .addItem(jumpLinksItem("jump-links-basic-0", "Inactive section"))\n                .addItem(jumpLinksItem("jump-links-basic-1", "Active section", "#item-1")\n                        .active())\n                .addItem(jumpLinksItem("jump-links-basic-2", "Inactive section")))\n        .element()',"jump-links-center":'div()\n        .add(jumpLinks().center()\n                .addItem(jumpLinksItem("jump-links-center-0", "Inactive section"))\n                .addItem(jumpLinksItem("jump-links-center-1", "Active section", "#item-1")\n                        .active())\n                .addItem(jumpLinksItem("jump-links-center-2", "Inactive section")))\n        .element()',"jump-links-expandable":'div()\n        .add(jumpLinks("Jump to section").vertical().expandable(breakpoints(default_, expandable))\n                .addItem(jumpLinksItem("jump-links-expandable-0", "Inactive section"))\n                .addItem(jumpLinksItem("jump-links-expandable-1", "Section with active subsection")\n                        .addList(jumpLinksList()\n                                .addItem(jumpLinksItem("jump-links-expandable-10", "Active subsection")\n                                        .active())\n                                .addItem(jumpLinksItem("jump-links-expandable-11", "Inactive subsection"))\n                                .addItem(jumpLinksItem("jump-links-expandable-12", "Inactive subsection"))))\n                .addItem(jumpLinksItem("jump-links-expandable-1", "Active section", "#item-1"))\n                .addItem(jumpLinksItem("jump-links-expandable-2", "Inactive section")))\n        .element()',"jump-links-label":'div()\n        .add(jumpLinks("Jump to section")\n                .addItem(jumpLinksItem("jump-links-label-0", "Inactive section"))\n                .addItem(jumpLinksItem("jump-links-label-1", "Active section", "#item-1")\n                        .active())\n                .addItem(jumpLinksItem("jump-links-label-2", "Inactive section")))\n        .add(br())\n        .add(jumpLinks("Jump to section").center()\n                .addItem(jumpLinksItem("jump-links-label-3", "Inactive section"))\n                .addItem(jumpLinksItem("jump-links-label-4", "Active section", "#item-4")\n                        .active())\n                .addItem(jumpLinksItem("jump-links-label-5", "Inactive section")))\n        .element()',"jump-links-vertical-label":'div()\n        .add(jumpLinks("Jump to section").vertical()\n                .addItem(jumpLinksItem("jump-links-vertical-label-0", "Inactive section"))\n                .addItem(jumpLinksItem("jump-links-vertical-label-1", "Active section", "#item-1")\n                        .active())\n                .addItem(jumpLinksItem("jump-links-vertical-label-2", "Inactive section")))\n        .element()',"jump-links-vertical":'div()\n        .add(jumpLinks().vertical()\n                .addItem(jumpLinksItem("jump-links-vertical-0", "Inactive section"))\n                .addItem(jumpLinksItem("jump-links-vertical-1", "Active section", "#item-1")\n                        .active())\n                .addItem(jumpLinksItem("jump-links-vertical-2", "Inactive section")))\n        .element()',"label-compact":'div()\n        .add(label("Grey").compact()).add(" ")\n        .add(label("Grey icon").compact().icon(infoCircle)).add(" ")\n        .add(label("Grey removable").compact().closable()).add(" ")\n        .add(label("Grey icon removable").compact().icon(infoCircle).closable()).add(" ")\n        .add(label("Grey link").compact().href("#")).add(" ")\n        .add(label("Grey link removable").compact().href("#").closable()).add(" ")\n        .add(label("Grey clickable").compact().uniqueId()\n                .clickable((e, l) -> console.log("Label " + l.element().id + " clicked")))\n        .add(" ")\n        .add(label("Grey clickable removable").compact().uniqueId().closable()\n                .clickable((e, l) -> console.log("Label " + l.element().id + " clicked")))\n        .add(" ")\n        .add(label("Grey label with icon that overflows").compact().closable()\n                .textMaxWidth("16ch"))\n        .element()',"label-editable":'div()\n        .add(label("Editable label", blue)\n                .editable()\n                .closable())\n        .add(" ")\n        .add(label("Compact editable label")\n                .compact()\n                .editable()\n                .closable())\n        .element()',"label-filled":'HTMLContainerBuilder<HTMLDivElement> div = div();\nColor[] values = Color.values();\nfor (Color color : values) {\n    String name = color.name().substring(0, 1).toUpperCase() + color.name().substring(1);\n    div.add(label(name, color)).add(" ");\n    div.add(label(name + " icon", color).icon(infoCircle)).add(" ");\n    div.add(label(name + " removable", color).closable()).add(" ");\n    div.add(label(name + " icon removable", color).icon(infoCircle).closable()).add(" ");\n    div.add(label(name + " link", color).href("#")).add(" ");\n    div.add(label(name + " link removable", color).href("#").closable()).add(" ");\n    div.add(label(name + " clickable", color).uniqueId()\n                    .clickable((e, l) -> console.log("Label " + l.element().id + " clicked")))\n            .add(" ");\n    div.add(label(name + " clickable removable", color).uniqueId().closable()\n                    .clickable((e, l) -> console.log("Label " + l.element().id + " clicked")))\n            .add(" ");\n    div.add(label(name + " label with icon that overflows", color).closable()\n            .textMaxWidth("16ch"));\n    div.add(br()).add(br());\n}\ndiv.add(div().style("width", "250px")\n        .add(label("Label that overflows its parent, but has no textMaxWidth on its own")));\nreturn div.element();',"label-group-basic":'div()\n        .add(labelGroup()\n                .addLabel(label("Label 1").icon(infoCircle))\n                .addLabel(label("Label 2", blue).icon(infoCircle))\n                .addLabel(label("Label 3", green).icon(infoCircle)))\n        .element()',"label-group-category-removable":'div()\n        .add(labelGroup("Group label").closable()\n                .addLabel(label("Label 1").icon(infoCircle))\n                .addLabel(label("Label 2", blue).icon(infoCircle))\n                .addLabel(label("Label 3", green).icon(infoCircle))\n                .addLabel(label("Label 4", orange).icon(infoCircle))\n                .addLabel(label("Label 5", red).icon(infoCircle)))\n        .element()',"label-group-category":'div()\n        .add(labelGroup("Group label")\n                .addLabel(label("Label 1").icon(infoCircle))\n                .addLabel(label("Label 2", blue).icon(infoCircle))\n                .addLabel(label("Label 3", green).icon(infoCircle)))\n        .element()',"label-group-editable":'div()\n        .add(labelGroup()\n                .addLabel(label("Editable label", blue).editable().closable())\n                .addLabel(label("Static label", green))\n                .addLabel(label("Editable label 2", blue).editable().closable())\n                .addLabel(label("Editable label 3", blue).editable().closable()))\n        .element()',"label-group-overflow":'div()\n        .add(labelGroup()\n                .addLabel(label("Label 1").icon(infoCircle))\n                .addLabel(label("Label 2", blue).icon(infoCircle))\n                .addLabel(label("Label 3", green).icon(infoCircle))\n                .addLabel(label("Label 4", orange).icon(infoCircle))\n                .addLabel(label("Label 5", red).icon(infoCircle))\n                .addLabel(label("Label 6", purple).icon(infoCircle)))\n        .element()',"label-group-vertical":'div()\n        .add(labelGroup("Group label with a very long name").vertical().closable()\n                .addLabel(label("Label 1").icon(infoCircle))\n                .addLabel(label("Label 2", blue).icon(infoCircle))\n                .addLabel(label("Label 3", green).icon(infoCircle))\n                .addLabel(label("Label 4", orange).icon(infoCircle))\n                .addLabel(label("Label 5", red).icon(infoCircle)))\n        .element()',"label-outline":'HTMLContainerBuilder<HTMLDivElement> div = div();\nColor[] values = Color.values();\nfor (int i = 0; i < values.length; i++) {\n    Color color = values[i];\n    String name = color.name().substring(0, 1).toUpperCase() + color.name().substring(1);\n    div.add(label(name, color).outline()).add(" ");\n    div.add(label(name + " icon", color).outline().icon(infoCircle)).add(" ");\n    div.add(label(name + " removable", color).outline().closable()).add(" ");\n    div.add(label(name + " icon removable", color).outline().icon(infoCircle).closable()).add(" ");\n    div.add(label(name + " link", color).outline().href("#")).add(" ");\n    div.add(label(name + " link removable", color).outline().href("#").closable()).add(" ");\n    div.add(label(name + " clickable", color).outline().uniqueId()\n                    .clickable((e, l) -> console.log("Label " + l.element().id + " clicked")))\n            .add(" ");\n    div.add(label(name + " clickable removable", color).outline().uniqueId().closable()\n                    .clickable((e, l) -> console.log("Label " + l.element().id + " clicked")))\n            .add(" ");\n    div.add(label(name + " label with icon that overflows", color).outline().closable()\n            .textMaxWidth("16ch"));\n    if (i < values.length - 1) {\n        div.add(br()).add(br());\n    }\n}\nreturn div.element();',"level-basic":'div().css("ws-core-l-level")\n        .add(level()\n                .addItem(levelItem().textContent("Level item"))\n                .addItem(levelItem().textContent("Level item"))\n                .addItem(levelItem().textContent("Level item")))\n        .element()',"level-gutter":'div().css("ws-core-l-level")\n        .add(level().gutter()\n                .addItem(levelItem().textContent("Level item"))\n                .addItem(levelItem().textContent("Level item"))\n                .addItem(levelItem().textContent("Level item")))\n        .element()',"list-basic":'div()\n        .add(list()\n                .addItem(listItem().text("First"))\n                .addItem(listItem().text("Second"))\n                .addItem(listItem().text("Third")))\n        .element()',"list-bordered":'div()\n        .add(list().plain().bordered()\n                .addItem(listItem().text("First"))\n                .addItem(listItem().text("Second"))\n                .addItem(listItem().text("Third")))\n        .element()',"list-icons-lg":'div()\n        .add(list().plain().largeIcons()\n                .addItem(listItem().text("First").icon(bookOpen))\n                .addItem(listItem().text("Second").icon(key))\n                .addItem(listItem().text("Third").icon(desktop)))\n        .element()',"list-icons":'div()\n        .add(list().plain()\n                .addItem(listItem().text("First").icon(bookOpen))\n                .addItem(listItem().text("Second").icon(key))\n                .addItem(listItem().text("Third").icon(desktop)))\n        .element()',"list-inline":'div()\n        .add(list().inline()\n                .addItem(listItem().text("First"))\n                .addItem(listItem().text("Second"))\n                .addItem(listItem().text("Third")))\n        .element()',"list-ordered":'div()\n        .add(list(ol())\n                .addItem(listItem().text("First"))\n                .addItem(listItem().text("Second"))\n                .addItem(listItem().text("Third")))\n        .element()',"list-plain":'div()\n        .add(list().plain()\n                .addItem(listItem().text("First"))\n                .addItem(listItem().text("Second"))\n                .addItem(listItem().text("Third")))\n        .element()',"masthead-basic":'div()\n        .add(masthead()\n                .addToggle(mastheadToggle())\n                .addMain(mastheadMain()\n                        .addBrand(mastheadBrand()\n                                .textContent("Logo")))\n                .addContent(mastheadContent()\n                        .textContent("Content")))\n        .element()',"masthead-inline":'div()\n        .add(masthead().display(breakpoints(default_, inline))\n                .addToggle(mastheadToggle())\n                .addMain(mastheadMain()\n                        .addBrand(mastheadBrand()\n                                .textContent("Logo")))\n                .addContent(mastheadContent()\n                        .textContent("Content")))\n        .element()',"masthead-inset":'div()\n        .add(masthead().inset(breakpoints(default_, Inset.sm))\n                .addToggle(mastheadToggle())\n                .addMain(mastheadMain()\n                        .addBrand(mastheadBrand()\n                                .textContent("Logo")))\n                .addContent(mastheadContent()\n                        .textContent("Content")))\n        .element()',"masthead-light-200":'div()\n        .add(masthead().background(light200)\n                .addToggle(mastheadToggle())\n                .addMain(mastheadMain()\n                        .addBrand(mastheadBrand()\n                                .textContent("Logo")))\n                .addContent(mastheadContent()\n                        .textContent("Content")))\n        .element()',"masthead-light":'div()\n        .add(masthead().background(light)\n                .addToggle(mastheadToggle())\n                .addMain(mastheadMain()\n                        .addBrand(mastheadBrand()\n                                .textContent("Logo")))\n                .addContent(mastheadContent()\n                        .textContent("Content")))\n        .element()',"masthead-mixed-content":'div()\n        .add(masthead()\n                .addToggle(mastheadToggle())\n                .addMain(mastheadMain()\n                        .addBrand(mastheadBrand()\n                                .textContent("Logo")))\n                .addContent(mastheadContent()\n                        .add(flex()\n                                .add(span().textContent("Content"))\n                                .add(button("Primary").primary())\n                                .add(button("Secondary").secondary())\n                                .add(button("Tertiary").tertiary()))))\n        .element()',"masthead-responsive":'div()\n        .add(masthead().display(breakpoints(\n                        default_, inline,\n                        lg, stack,\n                        _2xl, inline))\n                .addToggle(mastheadToggle())\n                .addMain(mastheadMain()\n                        .addBrand(mastheadBrand()\n                                .textContent("Logo")))\n                .addContent(mastheadContent()\n                        .textContent("Content")))\n        .element()',"masthead-router":'div()\n        .add(masthead()\n                .addToggle(mastheadToggle())\n                .addMain(mastheadMain()\n                        .addBrand(mastheadBrand(a("/"))\n                                .addBrand(brand(pfLogo, "PatternFly")\n                                        .style(componentVar(Classes.component(Classes.brand), Height).name,\n                                                "36px"))))\n                .addContent(mastheadContent()\n                        .textContent("Content")))\n        .element()',"masthead-stack":'div()\n        .add(masthead().display(breakpoints(default_, stack))\n                .addToggle(mastheadToggle())\n                .addMain(mastheadMain()\n                        .addBrand(mastheadBrand()\n                                .textContent("Logo")))\n                .addContent(mastheadContent()\n                        .textContent("Content")))\n        .element()',"menu-actions":'div()\n        .add(menu(multi)\n                .onAction((menu, item, itemAction) -> console.log(\n                        "Action " + itemAction.id + " on item " + item.id + " clicked"))\n                .addContent(menuContent()\n                        .addGroup(menuGroup("Actions")\n                                .addList(menuList()\n                                        .addItem(actionMenuItem("item-0", "Item 1")\n                                                .description("This is a description")\n                                                .addAction(menuItemAction("action-0", fas("code-branch"))\n                                                        .aria(Aria.label, "Code")\n                                                        .onClick((e, itemAction) -> console.log(\n                                                                "Code action clicked"))))\n                                        .addItem(actionMenuItem("item-1", "Item 2")\n                                                .description("This is a description")\n                                                .disabled()\n                                                .addAction(menuItemAction("action-1", bell)))\n                                        .addItem(actionMenuItem("item-2", "Item 3")\n                                                .addAction(menuItemAction("action-2", fas("clipboard"))))\n                                        .addItem(actionMenuItem("item-3", "Item 4")\n                                                .description("This is a description")\n                                                .addAction(menuItemAction("action-3", bars)))))))\n        .element()',"menu-basic":'div()\n        .add(menu(click)\n                .onSingleSelect((e, item, selected) -> console.log("Item " + item.id + " selected"))\n                .addContent(menuContent()\n                        .addList(menuList()\n                                .addItem(actionMenuItem("item-0", "Action")\n                                        .onClick((e, actionItem) -> console.log(\n                                                "Clicked on action item " + actionItem.id)))\n                                .addItem(linkMenuItem("item-1", "Link", "#item-1")\n                                        .onClick((e, item) -> e.preventDefault()))\n                                .addItem(actionMenuItem("item-2", "Disabled action")\n                                        .disabled())\n                                .addItem(linkMenuItem("item-3", "Disabled link", "#item-3")\n                                        .disabled()))))\n        .element()',"menu-checkbox":'div()\n        .add(menu(multi)\n                .onMultiSelect((e, menu, menuItems) -> console.log("### Selected items: " + menuItems.stream()\n                        .map(mi -> mi.id)\n                        .collect(joining(", "))))\n                .addContent(menuContent()\n                        .addList(menuList()\n                                .addItem(checkboxMenuItem("item-0", "Checkbox 1")\n                                        .onClick((e, mi) -> console.log("Clicked on item " + mi.id)))\n                                .addItem(checkboxMenuItem("item-1", "Checkbox 2")\n                                        .onClick((e, mi) -> console.log("Clicked on item " + mi.id)))\n                                .addItem(checkboxMenuItem("item-2", "Checkbox 3")\n                                        .onClick((e, mi) -> console.log("Clicked on item " + mi.id))\n                                        .disabled()))))\n        .element()',"menu-danger":'div()\n        .add(menu(click)\n                .addContent(menuContent()\n                        .addList(menuList()\n                                .addItem(actionMenuItem("item-0", "Action 1"))\n                                .addItem(actionMenuItem("item-1", "Action 2"))\n                                .addDivider()\n                                .addItem(actionMenuItem("item-2", "Delete")\n                                        .danger()))))\n        .element()',"menu-descriptions":'div()\n        .add(menu(click)\n                .addContent(menuContent()\n                        .addList(menuList()\n                                .addItem(actionMenuItem("item-0", "Action 1")\n                                        .icon(fas("code-branch"))\n                                        .description("Description"))\n                                .addItem(actionMenuItem("item-1", "Action 2 disabled")\n                                        .icon(fas("code-branch"))\n                                        .description("Description")\n                                        .disabled())\n                                .addItem(actionMenuItem("item-2", "Action 3")\n                                        .icon(fas("code-branch"))\n                                        .description(LoremIpsum.words(50))))))\n        .element()',"menu-favorites":'div()\n        .add(menu(click)\n                .onSingleSelect((e, item, selected) -> console.log("Item " + item.id + " selected"))\n                .onAction((menu, item, itemAction) -> console.log(\n                        "Action " + itemAction.id + " on item " + item.id + " clicked"))\n                .favorites()\n                .addContent(menuContent()\n                        .addGroup(menuGroup("All actions")\n                                .addList(menuList()\n                                        .addItem(actionMenuItem("item-0", "Item 1")\n                                                .description("Description 1")\n                                                .addAction(menuItemAction("action-0", bars)))\n                                        .addItem(actionMenuItem("item-1", "Item 2")\n                                                .onClick((e, item) -> console.log(\n                                                        "# Item " + item.id + " clicked"))\n                                                .description("Description 2")\n                                                .addAction(menuItemAction("action-1", fas("clipboard"))\n                                                        .onClick((e, itemAction) -> console.log(\n                                                                "# Action " + itemAction.id + " on item "\n                                                                        + itemAction.menuItem.id\n                                                                        + " clicked"))))\n                                        .addItem(actionMenuItem("item-2", "Item 3")\n                                                .description("Description 3")\n                                                .addAction(menuItemAction("action-2", bell)))))))\n        .element()',"menu-footer":'div()\n        .add(menu(click)\n                .addContent(menuContent()\n                        .addList(menuList()\n                                .addItem(actionMenuItem("item-0", "Action"))\n                                .addItem(linkMenuItem("item-1", "Link", "#item-1"))\n                                .addItem(actionMenuItem("item-2", "Disabled action")\n                                        .disabled())\n                                .addItem(linkMenuItem("item-3", "Disabled link", "#item-3")\n                                        .disabled())))\n                .addFooter(menuFooter()\n                        .add(button("Action").link().inline())))\n        .element()',"menu-icons":'div()\n        .add(menu(click)\n                .addContent(menuContent()\n                        .addList(menuList()\n                                .addItem(actionMenuItem("item-0", "Item 1")\n                                        .icon(fas("code-branch")))\n                                .addItem(actionMenuItem("item-1", "Container image")\n                                        .icon(fas("layer-group")))\n                                .addItem(actionMenuItem("item-2", "From Dockerfile")\n                                        .icon(fas("cube"))))))\n        .element()',"menu-links":'div()\n        .add(menu(click)\n                .addContent(menuContent()\n                        .addList(menuList()\n                                .addItem(linkMenuItem("item-0", "Link 1", "#item-0")\n                                        .external())\n                                .addItem(linkMenuItem("item-1", "Link 2", "#item-1")\n                                        .external())\n                                .addItem(linkMenuItem("item-2", "Link 3", "#item-2")))))\n        .element()',"menu-separator":'div()\n        .add(menu(click)\n                .addContent(menuContent()\n                        .addList(menuList()\n                                .addItem(actionMenuItem("item-0", "Action 1"))\n                                .addItem(actionMenuItem("item-1", "Action 2"))\n                                .addDivider()\n                                .addItem(actionMenuItem("item-2", "Action 3")))))\n        .element()',"menu-titled-groups":'div()\n        .add(menu(click)\n                .addContent(menuContent()\n                        .addGroup(menuGroup()\n                                .addList(menuList()\n                                        .addItem(linkMenuItem("item-0", "Link not in group", "#item-0"))))\n                        .addDivider()\n                        .addGroup(menuGroup("Group 1")\n                                .addList(menuList()\n                                        .add(linkMenuItem("item-10", "Link 1", "#item-10"))\n                                        .add(linkMenuItem("item-11", "Link 2", "#item-11"))))\n                        .addDivider()\n                        .addGroup(menuGroup("Group 2")\n                                .addList(menuList()\n                                        .add(linkMenuItem("item-20", "Link 1", "#item-20"))\n                                        .add(linkMenuItem("item-21", "Link 2", "#item-21"))))))\n        .element()',"menu-toggle-avatar":'div()\n        .add(menuToggle()\n                .addAvatar(avatar(avatarLight, "avatar"))\n                .text("John Doe"))\n        .add(" ")\n        .add(menuToggle().primary()\n                .addAvatar(avatar(avatarLight, "avatar"))\n                .text("John Doe"))\n        .add(" ")\n        .add(menuToggle().secondary()\n                .addAvatar(avatar(avatarLight, "avatar"))\n                .text("John Doe"))\n        .add(" ")\n        .add(menuToggle().disabled()\n                .addAvatar(avatar(avatarLight, "avatar"))\n                .text("John Doe"))\n        .element()',"menu-toggle-badge":'div()\n        .add(menuToggle("Count")\n                .addBadge(badge(4).unread()))\n        .add(" ")\n        .add(menuToggle("Count").primary()\n                .addBadge(badge(4).unread()))\n        .add(" ")\n        .add(menuToggle("Count").secondary()\n                .addBadge(badge(4).unread()))\n        .add(" ")\n        .add(menuToggle("Count").disabled()\n                .addBadge(badge(4).unread()))\n        .element()',"menu-toggle-basic":'div()\n        .add(menuToggle("Toggle"))\n        .add(" ")\n        .add(menuToggle("Toggle").primary())\n        .add(" ")\n        .add(menuToggle("Toggle").secondary())\n        .add(" ")\n        .add(menuToggle("Toggle").disabled())\n        .element()',"menu-toggle-icons":'div()\n        .add(menuToggle()\n                .icon(cog)\n                .text("Icon"))\n        .add(" ")\n        .add(menuToggle().primary()\n                .icon(cog)\n                .text("Icon"))\n        .add(" ")\n        .add(menuToggle().secondary()\n                .icon(cog)\n                .text("Icon"))\n        .add(" ")\n        .add(menuToggle().disabled()\n                .iconAndText(cog, "Icon")) // same as above\n        .element()',"menu-toggle-plain-icon":'div()\n        .add(menuToggle(ellipsisV, "plain kebab"))\n        .add(" ")\n        .add(menuToggle(ellipsisV, "disabled kebab")\n                .disabled())\n        .element()',"menu-toggle-plain-text":'div()\n        .add(menuToggle(plainText).text("Text"))\n        .add(" ")\n        .add(menuToggle(plainText).text("Disabled")\n                .disabled())\n        .element()',"menu-toggle-split-action":'div()\n        .add(menuToggle(split)\n                .addAction(menuToggleAction("Action")))\n        .add(" ")\n        .add(menuToggle(split).primary()\n                .addAction(menuToggleAction("Action")))\n        .add(" ")\n        .add(menuToggle(split).secondary()\n                .addAction(menuToggleAction("Action")))\n        .add(" ")\n        .add(menuToggle(split).disabled()\n                .addAction(menuToggleAction("Action")))\n        .element()',"menu-toggle-split-check":'div()\n        .add(menuToggle(split)\n                .addCheckbox(menuToggleCheckbox()\n                        .ariaLabel("Select all")))\n        .add(" ")\n        .add(menuToggle(split).primary()\n                .addCheckbox(menuToggleCheckbox()\n                        .ariaLabel("Select all")))\n        .add(" ")\n        .add(menuToggle(split).secondary()\n                .addCheckbox(menuToggleCheckbox()\n                        .ariaLabel("Select all")))\n        .add(" ")\n        .add(menuToggle(split).disabled()\n                .addCheckbox(menuToggleCheckbox()\n                        .ariaLabel("Select all")))\n        .element()',"menu-toggle-split-label":'div()\n        .add(menuToggle(split)\n                .addCheckbox(menuToggleCheckbox("10 selected")\n                        .ariaLabel("Select all")))\n        .add(" ")\n        .add(menuToggle(split).primary()\n                .addCheckbox(menuToggleCheckbox()\n                        .text("10 selected")\n                        .ariaLabel("Select all")))\n        .add(" ")\n        .add(menuToggle(split).secondary()\n                .addCheckbox(menuToggleCheckbox("10 selected")\n                        .ariaLabel("Select all")))\n        .add(" ")\n        .add(menuToggle(split).disabled()\n                .addCheckbox(menuToggleCheckbox("10 selected")\n                        .ariaLabel("Select all")))\n        .element()',"nav-default":'div().css("ws-react-c-navigation")\n        .add(navigation(flat)\n                .addItem(navigationItem("nav-default-0", "Default link 1", "#item-0"))\n                .addItem(navigationItem("nav-default-1", "Default link 2", "#item-1"))\n                .addItem(navigationItem("nav-default-2", "Default link 3", "#item-2"))\n                .addItem(navigationItem("nav-default-3", "Default link 4", "#item-3")))\n        .element()',"nav-drilldown":"div()\n        .add(nyi())\n        .element()","nav-exp":'div().css("ws-react-c-navigation")\n        .add(navigation(expandable)\n                .addGroup(expandableNavigationGroup("nav-exp-0", "Expandable group 1")\n                        .addItem(navigationItem("nav-exp-00", "Subnav 1 link 1", "#item-00"))\n                        .addDivider()\n                        .addItem(navigationItem("nav-exp-01", "Subnav 1 link 2", "#item-01"))\n                        .addItem(navigationItem("nav-exp-02", "Subnav 1 link 3", "#item-02")))\n                .addGroup(expandableNavigationGroup("nav-exp-1", "Expandable group 2")\n                        .addItem(navigationItem("nav-exp-10", "Custom onClick link", "#item-10")\n                                .onClick((event, ni) -> console.log("Clicked on item " + ni.id)))\n                        .addItem(navigationItem("nav-exp-11", "Subnav 2 link 1", "#item-11"))\n                        .addItem(navigationItem("nav-exp-12", "Subnav 2 link 2", "#item-12"))\n                        .addItem(navigationItem("nav-exp-13", "Subnav 2 link 3", "#item-13"))))\n        .element()',"nav-exp3":'div().css("ws-react-c-navigation")\n        .add(navigation(expandable)\n                .addGroup(expandableNavigationGroup("nav-exp3-0", "Expandable section title 1")\n                        .addItem(navigationItem("nav-exp3-00", "With 3rd 1 link 1", "#item-00"))\n                        .addItem(navigationItem("nav-exp3-01", "With 3rd 1 link 2", "#item-01"))\n                        .addItem(navigationItem("nav-exp3-02", "With 3rd 1 link 3", "#item-02")))\n                .addGroup(expandableNavigationGroup("nav-exp3-1", "Expandable section title 2")\n                        .addItem(navigationItem("nav-exp3-10", "With 3rd 2 link 1", "#item-10"))\n                        .addGroup(expandableNavigationGroup("nav-exp3-2", "Expandable third level")\n                                .addItem(navigationItem("nav-exp3-20", "Third level link 1", "#item-20"))\n                                .addItem(navigationItem("nav-exp3-21", "Third level link 2", "#item-21")))\n                        .addItem(navigationItem("nav-exp3-11", "With 3rd 2 link 2", "#item-11"))))\n        .element()',"nav-flyout":"div()\n        .add(nyi())\n        .element()","nav-grouped":'div().css("ws-react-c-navigation")\n        .add(navigation(grouped)\n                .addGroup(navigationGroup("nav-grouped-0", "Section title 1")\n                        .addItem(navigationItem("nav-grouped-00", "Group 1 link 1", "#item-00"))\n                        .addItem(navigationItem("nav-grouped-01", "Group 1 link 2", "#item-01"))\n                        .addItem(navigationItem("nav-grouped-02", "Group 1 link 3", "#item-02")))\n                .addGroup(navigationGroup("nav-grouped-1", "Section title 2")\n                        .addItem(navigationItem("nav-grouped-10", "Group 2 link 1", "#item-10"))\n                        .addItem(navigationItem("nav-grouped-11", "Group 2 link 2", "#item-11"))\n                        .addItem(navigationItem("nav-grouped-12", "Group 2 link 3", "#item-12"))))\n        .element()',"nav-horizontal":'div().css("ws-react-c-navigation")\n        .add(navigation(secondary)\n                .addItems(range(1, 11).boxed().collect(toList()), index ->\n                        navigationItem("nav-horizontal-" + index, "Horizontal subnav item " + index)))\n        .element()',"nav-mixed":'div().css("ws-react-c-navigation")\n        .add(navigation(expandable)\n                .addItem(navigationItem("nav-mixed-0", "Link 1 (not expandable)", "#item-0"))\n                .addGroup(expandableNavigationGroup("nav-mixed-0", "Expandable section title 1")\n                        .addItem(navigationItem("nav-mixed-00", "Mixed link 1", "#item-00"))\n                        .addDivider()\n                        .addItem(navigationItem("nav-mixed-01", "Mixed link 2", "#item-01"))\n                        .addItem(navigationItem("nav-mixed-02", "Mixed link 3", "#item-02")))\n                .addGroup(expandableNavigationGroup("nav-mixed-1", "Expandable section title 2")\n                        .addItem(navigationItem("nav-mixed-10", "Mixed 2 link 1", "#item-10"))\n                        .addItem(navigationItem("nav-mixed-11", "Mixed 2 link 2", "#item-11"))\n                        .addItem(navigationItem("nav-mixed-12", "Mixed 2 link 3", "#item-12"))))\n        .element()',"page-centered":'div()\n        .add(page(true)\n                .addMasthead(masthead()\n                        .addToggle(mastheadToggle())\n                        .addMain(mastheadMain()\n                                .addBrand(mastheadBrand()\n                                        .textContent("Logo")))\n                        .addContent(mastheadContent()\n                                .textContent("Header tools")))\n                .addSidebar(pageSidebar().keepExpanded()\n                        .addBody(pageSidebarBody()\n                                .textContent("Navigation")))\n                .addMain(pageMain("page-centered-main")\n                        .addSection(pageMainSection().limitWidth().centerAligned()\n                                .addBody(pageMainBody()\n                                        .add(card()\n                                                .addBody(cardBody()\n                                                        .add("When a width limited page section is wider than the value of ")\n                                                        .add(code(componentVar(component(page),\n                                                                section,\n                                                                "m-limit-width",\n                                                                MaxWidth).name))\n                                                        .add(" the section will be centered in the main section.")\n                                                        .add(br())\n                                                        .add(br())\n                                                        .add("The content in this example is placed in a card to better illustrate how the section behaves when it is centered. A card is not required to center a page section.")))))))\n        .element()',"page-filled-sections":'div()\n        .add(page(true)\n                .addMasthead(masthead()\n                        .addToggle(mastheadToggle())\n                        .addMain(mastheadMain()\n                                .addBrand(mastheadBrand()\n                                        .textContent("Logo")))\n                        .addContent(mastheadContent()\n                                .textContent("Header tools")))\n                .addSidebar(pageSidebar().keepExpanded()\n                        .addBody(pageSidebarBody()\n                                .textContent("Navigation")))\n                .addMain(pageMain("page-filled-sections-main")\n                        .addSection(pageMainSection()\n                                .textContent("A default page section"))\n                        .addSection(pageMainSection().fill()\n                                .textContent("This section fills the available space."))\n                        .addSection(pageMainSection().noFill()\n                                .textContent(\n                                        "This section is set to not fill the available space, since the last page section is set to fill the available space by default."))))\n        .element()',"page-group":'div()\n        .add(page(true)\n                .addMasthead(masthead()\n                        .addToggle(mastheadToggle())\n                        .addMain(mastheadMain()\n                                .addBrand(mastheadBrand()\n                                        .textContent("Logo")))\n                        .addContent(mastheadContent()\n                                .textContent("Header tools")))\n                .addSidebar(pageSidebar().keepExpanded()\n                        .addBody(pageSidebarBody()\n                                .textContent("Navigation")))\n                .addMain(pageMain("page-group-main")\n                        .addGroup(pageMainGroup()\n                                .addSection(pageMainNavigation()\n                                        .addNavigation(navigation(tertiary)\n                                                .addItem(navigationItem("page-group-ni-0", "System panel", "#"))\n                                                .addItem(navigationItem("page-group-ni-1", "Policy", "#"))\n                                                .addItem(navigationItem("page-group-ni-2", "Authentication",\n                                                        "#"))\n                                                .addItem(navigationItem("page-group-ni-3", "Network services",\n                                                        "#"))\n                                                .addItem(navigationItem("page-group-ni-4", "Server", "#"))))\n                                .addSection(pageMainBreadcrumb()\n                                        .addBreadcrumb(breadcrumb()\n                                                .addItem(breadcrumbItem("Section home"))\n                                                .addItem(breadcrumbItem("Section title", "#"))\n                                                .addItem(breadcrumbItem("Section title", "#"))\n                                                .addItem(breadcrumbItem("Section landing", "#").active())))\n                                .addSection(pageMainSection().background(light)\n                                        .textContent("Grouped section")))\n                        .addSection(pageMainSection().background(dark200)\n                                .textContent("Section 1"))\n                        .addSection(pageMainSection().background(dark200)\n                                .textContent("Section 2"))))\n        .element()',"page-horizontal-nav":'div()\n        .add(page(true)\n                .addMasthead(masthead()\n                        .addToggle(mastheadToggle())\n                        .addMain(mastheadMain()\n                                .addBrand(mastheadBrand()\n                                        .textContent("Logo")))\n                        .addContent(mastheadContent()\n                                .addToolbar(toolbar()\n                                        .addContent(toolbarContent()\n                                                .addItem(toolbarItem()\n                                                        .textContent("Navigation"))\n                                                .addItem(toolbarItem()\n                                                        .textContent("Header tools"))))))\n                .addMain(pageMain("page-horizontal-nav-main")\n                        .addSection(pageMainSection().background(dark100)\n                                .textContent("Section with darker background"))\n                        .addSection(pageMainSection().background(dark200)\n                                .textContent("Section with dark background"))\n                        .addSection(pageMainSection().background(light)\n                                .textContent("Section with light background"))))\n        .element()',"page-section-padding":'div()\n        .add(page(true)\n                .addMasthead(masthead()\n                        .addToggle(mastheadToggle())\n                        .addMain(mastheadMain()\n                                .addBrand(mastheadBrand()\n                                        .textContent("Logo")))\n                        .addContent(mastheadContent()\n                                .textContent("Header tools")))\n                .addSidebar(pageSidebar().keepExpanded()\n                        .addBody(pageSidebarBody()\n                                .textContent("Navigation")))\n                .addMain(pageMain("page-section-padding-main")\n                        .addSection(pageMainSection()\n                                .textContent("Section with default padding"))\n                        .addSection(pageMainSection().background(light)\n                                .padding(breakpoints(default_, noPadding))\n                                .textContent("Section with no padding"))\n                        .addSection(pageMainSection()\n                                .padding(breakpoints(\n                                        default_, noPadding,\n                                        md, padding))\n                                .textContent("Section with padding on medium"))\n                        .addSection(pageMainSection().background(light)\n                                .padding(breakpoints(md, noPadding))\n                                .textContent("Section with no padding on medium"))))\n        .element()',"page-sidebar-body":'div()\n        .add(page(true)\n                .addMasthead(masthead()\n                        .addToggle(mastheadToggle())\n                        .addMain(mastheadMain()\n                                .addBrand(mastheadBrand()\n                                        .textContent("Logo")))\n                        .addContent(mastheadContent()\n                                .textContent("Header tools")))\n                .addSidebar(pageSidebar().keepExpanded()\n                        .addBody(pageSidebarBody().pageInsets().\n                                textContent("First sidebar body (with insets)"))\n                        .addBody(pageSidebarBody().fill()\n                                .textContent("Second sidebar body (with fill)"))\n                        .addBody(pageSidebarBody().pageInsets().noFill()\n                                .textContent("Third sidebar body (with insets and no fill)")))\n                .addMain(pageMain("page-sidebar-body-main")\n                        .addSection(pageMainSection().background(dark100)\n                                .textContent("Section with darker background"))\n                        .addSection(pageMainSection().background(dark200)\n                                .textContent("Section with dark background"))\n                        .addSection(pageMainSection().background(light)\n                                .textContent("Section with light background"))))\n        .element()',"page-vertical-nav":'div()\n        .add(page(true)\n                .addMasthead(masthead()\n                        .addToggle(mastheadToggle())\n                        .addMain(mastheadMain()\n                                .addBrand(mastheadBrand()\n                                        .textContent("Logo")))\n                        .addContent(mastheadContent()\n                                .textContent("Header tools")))\n                .addSidebar(pageSidebar().keepExpanded()\n                        .addBody(pageSidebarBody()\n                                .textContent("Navigation")))\n                .addMain(pageMain("page-vertical-nav-main")\n                        .addSection(pageMainSection().background(dark100)\n                                .textContent("Section with darker background"))\n                        .addSection(pageMainSection().background(dark200)\n                                .textContent("Section with dark background"))\n                        .addSection(pageMainSection().background(light)\n                                .textContent("Section with light background"))))\n        .element()',"panel-basic":'panel()\n        .addMain("Main content")\n        .element()',"panel-bordered":'panel()\n        .bordered()\n        .addMain("Main content")\n        .element()',"panel-footer":'panel()\n        .addMain("Main content")\n        .addFooter("Footer content")\n        .element()',"panel-header-footer":'panel()\n        .addHeader("Header content")\n        .addDivider()\n        .addMain("Main content")\n        .addFooter("Footer content")\n        .element()',"panel-header":'panel()\n        .addHeader("Header content")\n        .addDivider()\n        .addMain("Main content")\n        .element()',"panel-raised":'panel()\n        .raised()\n        .addMain("Main content")\n        .element()',"panel-scrollable-header-footer":'panel()\n        .scrollable()\n        .addHeader("Header content")\n        .addDivider()\n        .addMain(panelMain()\n                .add("Main content")\n                .add(br()).add(br())\n                .add("Main content")\n                .add(br()).add(br())\n                .add("Main content")\n                .add(br()).add(br())\n                .add("Main content")\n                .add(br()).add(br())\n                .add("Main content")\n                .add(br()).add(br())\n                .add("Main content")\n                .add(br()).add(br())\n                .add("Main content")\n                .add(br()).add(br())\n                .add("Main content")\n                .add(br()).add(br())\n                .add("Main content"))\n        .addFooter("Footer content")\n        .element()',"panel-scrollable":'panel()\n        .scrollable()\n        .addMain(panelMain()\n                .add("Main content")\n                .add(br()).add(br())\n                .add("Main content")\n                .add(br()).add(br())\n                .add("Main content")\n                .add(br()).add(br())\n                .add("Main content")\n                .add(br()).add(br())\n                .add("Main content")\n                .add(br()).add(br())\n                .add("Main content")\n                .add(br()).add(br())\n                .add("Main content")\n                .add(br()).add(br())\n                .add("Main content")\n                .add(br()).add(br())\n                .add("Main content"))\n        .element()',"popover-advanced":'Button button = button("Toggle popover");\nonAttach(button, mr -> {\n    ScrollIntoViewOptions options = ScrollIntoViewOptions.create();\n    options.setBlock("center");\n    options.setInline("center");\n    button.element().scrollIntoView(options);\n});\n\nreturn div().style("width", "720px")\n        .add(div().css("pfj-popover-box")\n                .add(button.css("pfj-popover-button").primary()\n                        .id("popover-advanced-button"))\n                .add(popover(By.id("popover-advanced-button"))\n                        .placement(auto)\n                        .ariaLabel("Advanced popover")\n                        .addHeader("Popover header")\n                        .addBody(LoremIpsum.words(20))\n                        .addFooter("Popover footer")))\n        .element();',"popover-alert":'div().style("margin", "50px")\n        .add(actionList()\n                .addItem(actionListItem()\n                        .add(button("Custom").primary()\n                                .id("popover-alert-custom"))\n                        .add(popover(By.id("popover-alert-custom"))\n                                .severity(custom)\n                                .addHeader("Custom popover title")\n                                .addBody(LoremIpsum.words(20))\n                                .addFooter("Popover footer")))\n                .addItem(actionListItem()\n                        .add(button("Info").secondary()\n                                .id("popover-alert-info"))\n                        .add(popover(By.id("popover-alert-info"))\n                                .severity(info)\n                                .addHeader("Info popover title")\n                                .addBody(LoremIpsum.words(20))\n                                .addFooter("Popover footer")))\n                .addItem(actionListItem()\n                        .add(button("Success").tertiary()\n                                .id("popover-alert-success"))\n                        .add(popover(By.id("popover-alert-success"))\n                                .severity(success)\n                                .addHeader("Success popover title")\n                                .addBody(LoremIpsum.words(20))\n                                .addFooter("Popover footer")))\n                .addItem(actionListItem()\n                        .add(button("Warning").warning()\n                                .id("popover-alert-warning"))\n                        .add(popover(By.id("popover-alert-warning"))\n                                .severity(warning)\n                                .addHeader("Warning popover title")\n                                .addBody(LoremIpsum.words(20))\n                                .addFooter("Popover footer")))\n                .addItem(actionListItem()\n                        .add(button("Danger").danger()\n                                .id("popover-alert-danger"))\n                        .add(popover(By.id("popover-alert-danger"))\n                                .severity(danger)\n                                .addHeader("Danger popover title")\n                                .addBody(LoremIpsum.words(20))\n                                .addFooter("Popover footer"))))\n        .element()',"popover-auto-width":'popover(By.id("popover-auto-width-button"))\n        .autoWidth()\n        .ariaLabel("Popover with auto-width.")\n        .addBody("Removes fixed-width and allows width to be defined by contents.")\n        .appendToBody();\n\nreturn div().style("margin", "50px")\n        .add(button("Toggle popover").primary()\n                .id("popover-auto-width-button"))\n        .element();',"popover-basic":'div().style("margin", "50px")\n        .add(button("Toggle popover").primary()\n                .id("popover-basic-button"))\n        .add(popover(By.id("popover-basic-button"))\n                .ariaLabel("Basic popover")\n                .addHeader("Popover header")\n                .addBody("Popovers are triggered by click rather than hover.")\n                .addFooter("Popover footer"))\n        .element()',"popover-close":'Popover popover = popover(By.id("popover-close-button"));\npopover.ariaLabel("Popover with button in the body that can close it")\n        .addHeader("Popover header")\n        .addBody(popoverBody()\n                .add(div()\n                        .add(div()\n                                .add("A controlled popover can be closed by calling its ")\n                                .add(code().textContent("close()"))\n                                .add(" method after some user interaction."))\n                        .add(div()\n                                .add(button("Close popover").inline().link()\n                                        .onClick((e, b) -> popover.close())))))\n        .addFooter("Popover footer")\n        .appendToBody();\n\nreturn div().style("margin", "50px")\n        .add(button("Toggle popover").primary()\n                .id("popover-close-button"))\n        .element();',"popover-hoverable":'popover(By.id("popover-hoverable-button"))\n        .ariaLabel("Hoverable popover")\n        .triggerActions(mouseenter)\n        .addHeader("Popover header")\n        .addBody("This popover opens on hover.")\n        .addFooter("Popover footer")\n        .appendToBody();\n\nreturn div().style("margin", "50px")\n        .add(button("Hover to trigger popover").primary()\n                .id("popover-hoverable-button"))\n        .element();',"popover-icon":'popover(By.id("popover-icon-button"))\n        .icon(bullhorn)\n        .ariaLabel("Popover with icon in the title example.")\n        .addHeader("Popover with icon")\n        .addBody(LoremIpsum.words(20))\n        .addFooter("Popover footer")\n        .appendToBody();\n\nreturn div().style("margin", "50px")\n        .add(button("Toggle popover").primary()\n                .id("popover-icon-button"))\n        .element();',"popover-no-padding":'popover(By.id("popover-no-padding-button"))\n        .noClose()\n        .noPadding()\n        .ariaLabel("Popover with no header, footer, close button, and padding")\n        .addBody(\n                "This popover has no padding and is intended for use with content that has its own spacing and should touch the edges of the popover container.")\n        .appendToBody();\n\nreturn div().style("margin", "50px")\n        .add(button("Toggle popover").primary()\n                .id("popover-no-padding-button"))\n        .element();',"progress-basic":'div()\n        .add(progress()\n                .title("Title")\n                .value(33))\n        .element()',"progress-failure":'div()\n        .add(progress().status(danger)\n                .title("Title")\n                .value(33))\n        .element()',"progress-finite-step":'div()\n        .add(progress()\n                .label((min, max, step, value) -> value + " of " + max)\n                .range(0, 5)\n                .title("Title")\n                .value(2))\n        .element()',"progress-helper-text":'Tuples<Status, String> status = tuples(\n        info, "Default variant",\n        success, "Success variant",\n        warning, "Warning variant",\n        danger, "Danger variant"\n);\nProgress progress = progress();\nHelperText helperText = helperText("Default variant is being displayed");\n\nreturn div()\n        .run(div -> {\n            for (Tuple<Status, String> tuple : status) {\n                div.add(radio(Id.build("progress-helper-text", tuple.key.name()),\n                        "progress-helper-text-status",\n                        tuple.value)\n                        .value(tuple.key == info)\n                        .onChange((event, component, value) -> {\n                            progress.status(tuple.key);\n                            helperText.firstItem().text(tuple.value + " is being displayed");\n                        }));\n            }\n        })\n        .add(br())\n        .add(progress\n                .title("Title")\n                .value(33)\n                .addHelperText(helperText))\n        .element();',"progress-inside-success":'div()\n        .add(progress()\n                .status(success)\n                .measureLocation(inside)\n                .title("Title")\n                .value(100))\n        .element()',"progress-inside":'div()\n        .add(progress()\n                .measureLocation(inside)\n                .title("Title")\n                .value(33))\n        .element()',"progress-large":'div()\n        .add(progress().size(lg)\n                .title("Title")\n                .value(33))\n        .element()',"progress-no-measure-failure":'div()\n        .add(progress().status(danger)\n                .measureLocation(none)\n                .title("Title")\n                .value(33))\n        .element()',"progress-no-measure":'div()\n        .add(progress().measureLocation(none)\n                .title("Title")\n                .value(33))\n        .element()',"progress-outer-title":'div()\n        .add(descriptionList()\n                .addGroup(descriptionListGroup()\n                        .addTerm(descriptionListTerm("Title outside of progress bar")\n                                .id("title-outside-progress-example-label"))\n                        .addDescription(descriptionListDescription()\n                                .add(progress()\n                                        .ariaLabeledBy("title-outside-progress-example-label")\n                                        .measureLocation(outside)\n                                        .value(33)))))\n        .element()',"progress-outside-failure":'div()\n        .add(progress().status(danger)\n                .measureLocation(outside)\n                .title("Title")\n                .value(33))\n        .element()',"progress-outside":'div()\n        .add(progress().measureLocation(outside)\n                .title("Title")\n                .value(33))\n        .element()',"progress-single-line":"div()\n        .add(progress().measureLocation(outside)\n                .value(33))\n        .element()","progress-small":'div()\n        .add(progress().size(sm)\n                .title("Title")\n                .value(33))\n        .element()',"progress-step-instruction":'Tuples<Integer, String> instructions = tuples(\n        0, "Preparing",\n        1, "Collecting files",\n        2, "Copying files",\n        3, "Verifying files",\n        4, "Restarting server",\n        5, "Cleanup");\nreturn div()\n        .add(progress()\n                .label((min, max, step, value) -> "Step " + value + ": " + instructions.value(value))\n                .range(0, 5)\n                .title("Title")\n                .value(2))\n        .element();',"progress-success":'div()\n        .add(progress().status(success)\n                .title("Title")\n                .value(100))\n        .element()',"progress-truncate":"div()\n        .add(progress()\n                .title(LoremIpsum.words(42))\n                .truncate()\n                .value(33))\n        .element()","progress-warning":'div()\n        .add(progress().status(warning)\n                .title("Title")\n                .value(90))\n        .element()',"radio-basic":'div()\n        .add(radio("basic-radio-0", "basic-radio", "Option 1")\n                .value(true))\n        .add(radio("basic-radio-1", "basic-radio", "Option 2"))\n        .element()',"radio-body":'div()\n        .add(radio("rwb-0", "rwb", "Radio with body")\n                .addBody(radioBody("This is where custom content goes.")))\n        .element()',"radio-description-body":'div()\n        .add(radio("rdb-0", "rdb", "Radio with description and body")\n                .addDescription(radioDescription(LoremIpsum.words(50)))\n                .addBody(radioBody("This is where custom content goes.")))\n        .element()',"radio-description":'div()\n        .add(radio("rwd-0", "rwd", "Radio with description")\n                .addDescription(radioDescription(LoremIpsum.words(50))))\n        .element()',"radio-disabled":'div()\n        .add(radio("disabled-radio-0", "disabled-radio", "Disabled radio 1")\n                .value(true)\n                .disabled())\n        .add(radio("disabled-radio-1", "disabled-radio", "Disabled radio 2")\n                .disabled())\n        .element()',"radio-reversed":'div()\n        .add(radio("reversed-radio-0", "reversed-radio", "Option 1")\n                .reversed())\n        .element()',"radio-standalone":'div()\n        .add(radio("standalone-radio-0", "standalone-radio")\n                .standalone())\n        .element()',"simple-list":'div()\n        .add(simpleList()\n                .addItems(range(1, 4).boxed().collect(toList()), index ->\n                        simpleListItem(Id.build("simple-list", String.valueOf(index)),\n                                "List item " + index)))\n        .element()',"skeleton-default":'div()\n        .add(skeleton().screenReaderText("Loading contents"))\n        .element()',"skeleton-heights":'div().style("height: 400px; display: flex; align-items: flex-end; justify-content: space-between")\n        .add(skeleton().width("15%").height("25%").screenReaderText("Loading 25% of content"))\n        .add(skeleton().width("15%").height("33%").screenReaderText("Loading 33% of content"))\n        .add(skeleton().width("15%").height("50%").screenReaderText("Loading 50% of content"))\n        .add(skeleton().width("15%").height("66%").screenReaderText("Loading 66% of content"))\n        .add(skeleton().width("15%").height("75%").screenReaderText("Loading 75% of content"))\n        .add(skeleton().width("15%").height("100%").screenReaderText("Loading 100% of content"))\n        .element()',"skeleton-shapes":'div()\n        .add("Small circle")\n        .add(skeleton().shape(circle).width("15%").screenReaderText("Loading small circle contents"))\n        .add(br())\n        .add("Medium circle")\n        .add(skeleton().shape(circle).width("30%").screenReaderText("Loading medium circle contents"))\n        .add(br())\n        .add("Large circle")\n        .add(skeleton().shape(circle).width("50%").screenReaderText("Loading large circle contents"))\n        .add(br())\n        .add("Small square")\n        .add(skeleton().shape(square).width("15%").screenReaderText("Loading small square contents"))\n        .add(br())\n        .add("Medium square")\n        .add(skeleton().shape(square).width("30%").screenReaderText("Loading medium square contents"))\n        .add(br())\n        .add("Large square")\n        .add(skeleton().shape(square).width("50%").screenReaderText("Loading large square contents"))\n        .add(br())\n        .add("Small rectangle")\n        .add(div().style("height", "200px")\n                .add(skeleton().shape(square)\n                        .width("50%")\n                        .height("50%")\n                        .screenReaderText("Loading small rectangle contents")))\n        .add(br())\n        .add("Medium rectangle")\n        .add(div().style("height", "200px")\n                .add(skeleton().shape(square)\n                        .width("75%")\n                        .height("75%")\n                        .screenReaderText("Loading medium rectangle contents")))\n        .add(br())\n        .add("Large rectangle")\n        .add(div().style("height", "200px")\n                .add(skeleton().shape(square)\n                        .height("100%")\n                        .screenReaderText("Loading large rectangle contents")))\n        .element()',"skeleton-text":'div()\n        .add(modifier("text", _4xl))\n        .add(skeleton().fontSize(_4xl).screenReaderText("Loading font size 4xl"))\n        .add(br())\n        .add(modifier("text", _3xl))\n        .add(skeleton().fontSize(_3xl).screenReaderText("Loading font size 3xl"))\n        .add(br())\n        .add(modifier("text", _2xl))\n        .add(skeleton().fontSize(_2xl).screenReaderText("Loading font size 2xl"))\n        .add(br())\n        .add(modifier("text", xl))\n        .add(skeleton().fontSize(xl).screenReaderText("Loading font size xl"))\n        .add(br())\n        .add(modifier("text", lg))\n        .add(skeleton().fontSize(lg).screenReaderText("Loading font size lg"))\n        .add(br())\n        .add(modifier("text", md))\n        .add(skeleton().fontSize(md).screenReaderText("Loading font size md"))\n        .add(br())\n        .add(modifier("text", sm))\n        .add(skeleton().fontSize(sm).screenReaderText("Loading font size sm"))\n        .element()',"skeleton-widths":'div()\n        .add(skeleton().width("25%").screenReaderText("Loading 25% of content"))\n        .add(br())\n        .add(skeleton().width("33%").screenReaderText("Loading 33% of content"))\n        .add(br())\n        .add(skeleton().width("50%").screenReaderText("Loading 50% of content"))\n        .add(br())\n        .add(skeleton().width("66%").screenReaderText("Loading 66% of content"))\n        .add(br())\n        .add(skeleton().width("75%").screenReaderText("Loading 75% of content"))\n        .add(br())\n        .add(skeleton().screenReaderText("Loading 100% of content"))\n        .element()',"slider-actions":'Slider slider0 = slider();\nSlider slider1 = slider();\nHTMLContainerBuilder<HTMLElement> value = span();\n\nreturn div()\n        .add(p().add("Slider value is ").add(value))\n        .add(slider0\n                .value(50)\n                .addStartActions(sliderActions()\n                        .addAction(button().plain().icon(minus)\n                                .on(click, e -> slider0.decrease())))\n                .addEndActions(sliderActions()\n                        .addAction(button().plain().icon(plus)\n                                .on(click, e -> slider0.increase())))\n                .onChange((e, s, v) -> value.textContent(String.valueOf(v))))\n        .add(br())\n        .add(slider1\n                .value(50)\n                .addValueInput(inputGroup()\n                        .addItem(inputGroupItem().fill()\n                                .addFormControl(textInput(number, Id.unique())))\n                        .addText(inputGroupText("%")))\n                .addEndActions(sliderActions()\n                        .addAction(button().plain().icon(lockOpen).style("width", "16px")\n                                .onClick((event, button) -> {\n                                    slider1.disabled(!slider1.isDisabled());\n                                    if (slider1.isDisabled()) {\n                                        button.icon(lock);\n                                    } else {\n                                        button.icon(lockOpen);\n                                    }\n                                }), false)))\n        .element();',"slider-continuous":'HTMLContainerBuilder<HTMLElement>[] values = new HTMLContainerBuilder[]{span(), span()};\nreturn div()\n        .add(p().add("Slider value is ").add(values[0]))\n        .add(slider()\n                .value(50)\n                .onChange((e, s, v) -> values[0].textContent(String.valueOf(v))))\n        .add(br())\n        .add(p().add("Slider value is ").add(values[1]))\n        .add(small().add("(with tooltip over thumb)"))\n        .add(slider()\n                .value(50)\n                .toolTipOnThumb()\n                .customSteps(true, sliderSteps(\n                        sliderStep(0, "0%"),\n                        sliderStep(100, "100%")))\n                .onChange((e, s, v) -> values[1].textContent(String.valueOf(v))))\n        .element();',"slider-disabled":'Slider slider = slider();\nHTMLContainerBuilder<HTMLElement> value = span();\nsetTimeout(__ -> slider.value(50), 333);\nreturn div()\n        .add(p().add("Slider value is ").add(value))\n        .add(slider\n                .disabled()\n                .customSteps(sliderSteps(\n                        sliderStep(0d),\n                        sliderStep(12.5, "1", true),\n                        sliderStep(25d, "2"),\n                        sliderStep(37.5, "3", true),\n                        sliderStep(50d, "4"),\n                        sliderStep(62.5, "5", true),\n                        sliderStep(75d, "6"),\n                        sliderStep(87.5, "7", true),\n                        sliderStep(100d, "8")))\n                .onChange((e, s, v) -> value.textContent(s.currentStep().label)))\n        .element();',"slider-discrete":'HTMLContainerBuilder<HTMLElement>[] values = new HTMLContainerBuilder[]{span(), span(), span(), span(), span(),\n        span(), span()};\nreturn div()\n        .add(p().add("Slider value is ").add(values[0]))\n        .add(slider()\n                .value(50)\n                .customSteps(sliderSteps(\n                        sliderStep(0d),\n                        sliderStep(12.5, "1", true),\n                        sliderStep(25d, "2"),\n                        sliderStep(37.5, "3", true),\n                        sliderStep(50d, "4"),\n                        sliderStep(62.5, "5", true),\n                        sliderStep(75d, "6"),\n                        sliderStep(87.5, "7", true),\n                        sliderStep(100d, "8")))\n                .onChange((e, s, v) -> values[0].textContent(String.valueOf(v))))\n        .add(br())\n        .add(p().add("Slider value is ").add(values[1]))\n        .add(small().add("(min = 0, max = 200, step = 50)"))\n        .add(slider()\n                .value(50)\n                .range(0, 200, 50)\n                .showTicks()\n                .onChange((e, s, v) -> values[1].textContent(String.valueOf(v))))\n        .add(br())\n        .add(p().add("Slider value is ").add(values[2]))\n        .add(small().add("(min = -25, max = 75, step = 10, boundaries not shown)"))\n        .add(slider()\n                .value(25)\n                .range(-25, 75, 10)\n                .showTicks()\n                .showBoundaries(false)\n                .onChange((e, s, v) -> values[2].textContent(String.valueOf(v))))\n        .add(br())\n        .add(p().add("Slider value is ").add(values[3]))\n        .add(small().add("(min = -25, max = 75, step = 10, boundaries shown)"))\n        .add(slider()\n                .value(50)\n                .range(-25, 75, 10)\n                .showTicks()\n                .onChange((e, s, v) -> values[3].textContent(String.valueOf(v))))\n        .add(br())\n        .add(p().add("Slider value is ").add(values[4]))\n        .add(small().add("(min = -25, max = 75, step = 10, boundaries shown, ticks not shown)"))\n        .add(slider()\n                .value(50)\n                .range(-25, 75, 10)\n                .onChange((e, s, v) -> values[4].textContent(String.valueOf(v))))\n        .add(br())\n        .add(p().add("Slider value is ").add(values[5]))\n        .add(small().add("(max = 5, custom steps)"))\n        .add(slider()\n                .value(3)\n                .showTicks()\n                .customSteps(sliderSteps(\n                        sliderStep(0, "A"),\n                        sliderStep(1, "B"),\n                        sliderStep(2, "C"),\n                        sliderStep(3, "D"),\n                        sliderStep(4, "E"),\n                        sliderStep(5, "F")))\n                .onChange((e, s, v) -> values[5].textContent(String.valueOf(v))))\n        .add(br())\n        .add(p().add("Slider value is ").add(values[6]))\n        .add(small().add("(min = 12, max = 86, custom steps with non linear data)"))\n        .add(slider()\n                .value(25)\n                .showTicks()\n                .customSteps(sliderSteps(\n                        sliderStep(12),\n                        sliderStep(15),\n                        sliderStep(25),\n                        sliderStep(54),\n                        sliderStep(67),\n                        sliderStep(86)))\n                .onChange((e, s, v) -> values[6].textContent(String.valueOf(v))))\n        .add(br())\n        .element();',"slider-thumb-value-input":'div()\n        .add(slider()\n                .value(50)\n                .addValueInput(inputGroup()\n                        .addItem(inputGroupItem().fill()\n                                .addFormControl(textInput(number, Id.unique())))\n                        .addText(inputGroupText("%")), aboveThumb))\n        .element()',"slider-value-input":'div()\n        .add(slider()\n                .value(62.5)\n                .customSteps(sliderSteps(\n                        sliderStep(0d),\n                        sliderStep(12.5, "1", true),\n                        sliderStep(25d, "2"),\n                        sliderStep(37.5, "3", true),\n                        sliderStep(50d, "4"),\n                        sliderStep(62.5, "5", true),\n                        sliderStep(75d, "6"),\n                        sliderStep(87.5, "7", true),\n                        sliderStep(100d, "8")))\n                .addValueInput(textInput(number, Id.unique())))\n        .add(br())\n        .add(slider()\n                .value(50)\n                .customSteps(sliderSteps(\n                        sliderStep(0, "0%"),\n                        sliderStep(25, "25%", true),\n                        sliderStep(50, "50%"),\n                        sliderStep(75, "75%", true),\n                        sliderStep(100, "100%")))\n                .addValueInput(inputGroup()\n                        .addItem(inputGroupItem().fill()\n                                .addFormControl(textInput(number, Id.unique())))\n                        .addText(inputGroupText("%"))))\n        .add(br())\n        .add(slider()\n                .value(50)\n                .addValueInput(inputGroup()\n                        .addItem(inputGroupItem().fill()\n                                .addFormControl(textInput(number, Id.unique())))\n                        .addText(inputGroupText("%"))))\n        .element()',"spinner-basic":"div()\n        .add(spinner())\n        .element()","spinner-custom-size":'div()\n        .add(spinner().diameter("80px"))\n        .element()',"spinner-inline-size":'div()\n        .add(textContent()\n                .add(h(1)\n                        .add("Heading ")\n                        .add(spinner("Spinner in heading").inline()))\n                .add(p().textContent(LoremIpsum.paragraphs(1)))\n                .add(h(2)\n                        .add("Second level ")\n                        .add(spinner("Spinner in subheading").inline()))\n                .add(p()\n                        .add(LoremIpsum.paragraphs(2) + " ")\n                        .add(spinner("Spinner in paragraph").inline())\n                        .add(" " + LoremIpsum.paragraphs(3)))\n                .add(small()\n                        .add("Sometimes you need small text ")\n                        .add(spinner("Spinner in small element").inline())))\n        .element()',"spinner-sizes":'div()\n        .add(spinner(sm))\n        .add(" ")\n        .add(spinner(md))\n        .add(" ")\n        .add(spinner(lg))\n        .add(" ")\n        .add(spinner(xl))\n        .element()',"split-basic":'div().css("ws-core-l-split")\n        .add(split()\n                .addItem(splitItem().textContent("content"))\n                .addItem(splitItem().fill().textContent("pf-m-fill"))\n                .addItem(splitItem().textContent("content")))\n        .element()',"split-gutter":'div().css("ws-core-l-split")\n        .add(split().gutter()\n                .addItem(splitItem().textContent("content"))\n                .addItem(splitItem().fill().textContent("pf-m-fill"))\n                .addItem(splitItem().textContent("content")))\n        .element()',"split-wrap":'div().css("ws-core-l-split")\n        .add(split().wrap().gutter()\n                .addItem(splitItem().textContent("content"))\n                .addItem(splitItem().textContent("content"))\n                .addItem(splitItem().textContent("content"))\n                .addItem(splitItem().textContent("content"))\n                .addItem(splitItem().textContent("content"))\n                .addItem(splitItem().textContent("content"))\n                .addItem(splitItem().textContent("content"))\n                .addItem(splitItem().textContent("content"))\n                .addItem(splitItem().textContent("content"))\n                .addItem(splitItem().textContent("content"))\n                .addItem(splitItem().textContent("content"))\n                .addItem(splitItem().textContent("content"))\n                .addItem(splitItem().textContent("content"))\n                .addItem(splitItem().textContent("content")))\n        .element()',"stack-basic":'div().css("ws-core-l-stack")\n        .add(stack()\n                .addItem(stackItem().textContent("content"))\n                .addItem(stackItem().fill().textContent("pf-m-fill"))\n                .addItem(stackItem().textContent("content")))\n        .element()',"stack-gutter":'div().css("ws-core-l-stack")\n        .add(stack().gutter()\n                .addItem(stackItem().textContent("content"))\n                .addItem(stackItem().fill().textContent("pf-m-fill"))\n                .addItem(stackItem().textContent("content")))\n        .element()',"switch-basic":'div()\n        .add(switch_("switch-basic-0", "switch-basic-0", true)\n                .label("Message when on", "Message when off"))\n        .element()',"switch-checked-label":'div()\n        .add(switch_("switch-checked-label-0", "switch-checked-label-0", true)\n                .checkIcon()\n                .label("Message when on", "Message when off"))\n        .element()',"switch-disabled":'div()\n        .add(switch_("switch-disabled-0", "switch-disabled-0", true)\n                .disabled()\n                .label("Message when on", "Message when off"))\n        .add(br())\n        .add(switch_("switch-disabled-1", "switch-disabled-1", false)\n                .disabled()\n                .label("Message when on", "Message when off"))\n        .add(br())\n        .add(switch_("switch-disabled-2", "switch-disabled-2", true)\n                .disabled()\n                .checkIcon())\n        .add(br())\n        .add(switch_("switch-disabled-3", "switch-disabled-3", false)\n                .disabled()\n                .checkIcon())\n        .element()',"switch-no-label":'div()\n        .add(switch_("switch-no-label-0", "switch-no-label-0", true)\n                .checkIcon())\n        .element()',"switch-reversed":'div()\n        .add(switch_("switch-reversed-0", "switch-reversed-0", true)\n                .reversed()\n                .label("Message when on", "Message when off"))\n        .element()',"tabs-body-padding":'div()\n        .add(tabs()\n                .addTabs(range(1, 4).boxed().collect(toList()), index ->\n                        tab("tabs-body-padding-" + index, "Tab item " + index)\n                                .addContent(tabContent()\n                                        .addBody(tabContentBody().padding()\n                                                .textContent(\n                                                        "Tab section " + index + " with body and padding")))))\n        .element()',"tabs-default":'Tabs tabs = tabs();\nCheckbox boxToggle = checkbox("tabs-default-box", "tabs-default-box", "Box");\nCheckbox lightToggle = checkbox("tabs-default-light", "tabs-default-light", "Light tabs");\nreturn div()\n        .add(tabs\n                .addTab(tab("tabs-default-users", "Users")\n                        .addContent(tabContent().textContent("Users")))\n                .addTab(tab("tabs-default-containers", "Containers")\n                        .addContent(tabContent().textContent("Containers")))\n                .addTab(tab("tabs-default-database", "Database")\n                        .addContent(tabContent().textContent("Database")))\n                .addTab(tab("tabs-default-disabled", "Disabled")\n                        .disabled()\n                        .addContent(tabContent().textContent("Disabled")))\n                .addTab(tab("tabs-default-disabled-aria", "ARIA Disabled")\n                        .ariaDisabled()\n                        .addContent(tabContent().textContent("ARIA Disabled")))\n                .addTab(tab("tabs-default-disabled-aria-tt", "ARIA Disabled (Tooltip)")\n                        .ariaDisabled()\n                        .addTooltip(tooltip(\n                                "Aria-disabled tabs are like disabled tabs, but focusable. Allows for tooltip support."))\n                        .addContent(tabContent().textContent("ARIA Disabled (Tooltip)"))))\n        .add(div().css(util("mt-md"))\n                .add(boxToggle.onChange((event, component, value) -> tabs.box(value))))\n        .add(div().css(util("mt-sm"))\n                .add(lightToggle.onChange((event, component, value) -> tabs.lightTabs(value))))\n        .element();',"tabs-dynamic":'int[] counter = new int[]{6};\n//noinspection Convert2Diamond\nCloseHandler<Tab> closeHandler = new CloseHandler<Tab>() {\n    @Override\n    public boolean shouldClose(Event event, Tab tab) {\n        return window.confirm("Are you sure you want to close \'" + tab.text() + "\'?");\n    }\n\n    @Override\n    public void onClose(Event event, Tab tab) {\n        console.log(tab.text() + " left the building.");\n    }\n};\nreturn div()\n        .add(tabs()\n                .closeable()\n                .onAdd(tabs -> {\n                    counter[0]++;\n                    return tab("tabs-dynamic-" + counter[0], "Terminal " + counter[0])\n                            .addContent(tabContent().textContent("Terminal " + counter[0]));\n                })\n                .addTabs(range(1, 4).boxed().collect(toList()), index ->\n                        tab("tabs-dynamic-" + index, "Terminal " + index)\n                                .addContent(tabContent().textContent("Terminal " + index)))\n                .addTab(tab("tabs-dynamic-4", "Terminal 4")\n                        .onClose(closeHandler)\n                        .addContent(tabContent().textContent("Terminal 4")))\n                .addTabs(range(5, 7).boxed().collect(toList()), index ->\n                        tab("tabs-dynamic-" + index, "Terminal " + index)\n                                .addContent(tabContent().textContent("Terminal " + index))))\n        .element();',"tabs-expandable":'div()\n        .add(tabs().vertical()\n                .expandable(breakpoints(\n                        default_, expandable,\n                        md, nonExpandable,\n                        lg, expandable))\n                .addTab(tab("tabs-expandable-users", "Users")\n                        .addContent(tabContent().textContent("Users")))\n                .addTab(tab("tabs-expandable-containers", "Containers")\n                        .addContent(tabContent().textContent("Containers")))\n                .addTab(tab("tabs-expandable-database", "Database")\n                        .addContent(tabContent().textContent("Database")))\n                .addTab(tab("tabs-expandable-server", "Server")\n                        .addContent(tabContent().textContent("Server")))\n                .addTab(tab("tabs-expandable-system", "System")\n                        .addContent(tabContent().textContent("System")))\n                .addTab(tab("tabs-expandable-network", "Network")\n                        .addContent(tabContent().textContent("Network"))))\n        .element()',"tabs-help-close":'div()\n        .add(tabs()\n                .closeable()\n                .addTabs(range(1, 4).boxed().collect(toList()), index ->\n                        tab("tabs-help-close-" + index, "Terminal " + index)\n                                .addHelp(popover()\n                                        .addHeader("Help popover for terminal " + index)\n                                        .addBody(LoremIpsum.paragraphs(3))\n                                        .addFooter("Popover footer"))\n                                .addContent(tabContent().textContent("Terminal " + index))))\n        .element()',"tabs-help":'div()\n        .add(tabs()\n                .addTab(tab("tabs-help-users", "Users")\n                        .addContent(tabContent().textContent("Users"))\n                        .addHelp(popover()\n                                .addHeader("Help popover for Users")\n                                .addBody(LoremIpsum.paragraphs(3))\n                                .addFooter("Popover footer")))\n                .addTab(tab("tabs-help-containers", "Containers")\n                        .addContent(tabContent().textContent("Containers"))\n                        .addHelp(popover()\n                                .addHeader("Help popover for Containers")\n                                .addBody(LoremIpsum.paragraphs(3))\n                                .addFooter("Popover footer")))\n                .addTab(tab("tabs-help-database", "Database")\n                        .addContent(tabContent().textContent("Database"))\n                        .addHelp(popover()\n                                .addHeader("Help popover for Database")\n                                .addBody(LoremIpsum.paragraphs(3))\n                                .addFooter("Popover footer")))\n                .addTab(tab("tabs-help-disabled", "Disabled")\n                        .disabled()\n                        .addContent(tabContent().textContent("Disabled"))\n                        .addHelp(popover()\n                                .addHeader("Help popover for Disabled")\n                                .addBody(LoremIpsum.paragraphs(3))\n                                .addFooter("Popover footer")))\n                .addTab(tab("tabs-help-disabled-aria", "ARIA Disabled")\n                        .ariaDisabled()\n                        .addContent(tabContent().textContent("ARIA Disabled"))\n                        .addHelp(popover()\n                                .addHeader("Help popover for ARIA Disabled")\n                                .addBody(LoremIpsum.paragraphs(3))\n                                .addFooter("Popover footer"))))\n        .element()',"tabs-hide-tab":'Tabs tabs = tabs();\nButton button = button("Hide tab 2").primary()\n        .onClick((event, btn) -> {\n            Tab tab = tabs.tab("tabs-hide-tab-2");\n            tab.hidden(!tab.hidden());\n            btn.text((tab.hidden() ? "Show" : "Hide") + " tab 2");\n        });\nreturn div()\n        .add(button.css(util("mb-lg")))\n        .add(tabs\n                .addTabs(range(1, 4).boxed().collect(toList()), index ->\n                        tab("tabs-hide-tab-" + index, "Tab item " + index)\n                                .addContent(tabContent().textContent("Tab section " + index))))\n        .element();',"tabs-icon-filled":'Tabs tabs = tabs();\nCheckbox boxToggle = checkbox("tabs-icon-filled-box", "tabs-icon-filled-box", "Box");\nreturn div()\n        .add(tabs.fill()\n                .addTab(tab("tabs-icon-filled-users", "Users")\n                        .icon(users)\n                        .addContent(tabContent().textContent("Users")))\n                .addTab(tab("tabs-icon-filled-containers", "Containers")\n                        .icon(box)\n                        .addContent(tabContent().textContent("Containers")))\n                .addTab(tab("tabs-icon-filled-database", "Database")\n                        .icon(database)\n                        .addContent(tabContent().textContent("Database"))))\n        .add(div().css(util("mt-md"))\n                .add(boxToggle.onChange((event, component, value) -> tabs.box(value))))\n        .element();',"tabs-icon-text":'div()\n        .add(tabs()\n                .addTab(tab("tabs-icon-text-users", "Users")\n                        .icon(users)\n                        .addContent(tabContent().textContent("Users")))\n                .addTab(tab("tabs-icon-text-containers", "Containers")\n                        .icon(box)\n                        .addContent(tabContent().textContent("Containers")))\n                .addTab(tab("tabs-icon-text-database", "Database")\n                        .icon(database)\n                        .addContent(tabContent().textContent("Database")))\n                .addTab(tab("tabs-icon-text-server", "Server")\n                        .icon(server)\n                        .addContent(tabContent().textContent("Server")))\n                .addTab(tab("tabs-icon-text-system", "System")\n                        .icon(laptop)\n                        .addContent(tabContent().textContent("System")))\n                .addTab(tab("tabs-icon-text-network", "Network")\n                        .icon(fas("project-diagram"))\n                        .addContent(tabContent().textContent("Network"))))\n        .element()',"tabs-inset":'Tabs tabs = tabs();\nCheckbox boxToggle = checkbox("tabs-inset-box", "tabs-inset-box", "Box");\nreturn div()\n        .add(tabs.inset(breakpoints(\n                        default_, Inset.none,\n                        md, Inset.sm,\n                        xl, Inset.lg,\n                        _2xl, Inset._2xl))\n                .addTab(tab("tabs-inset-users", "Users")\n                        .addContent(tabContent().textContent("Users")))\n                .addTab(tab("tabs-inset-containers", "Containers")\n                        .addContent(tabContent().textContent("Containers")))\n                .addTab(tab("tabs-inset-database", "Database")\n                        .addContent(tabContent().textContent("Database")))\n                .addTab(tab("tabs-inset-server", "Server")\n                        .addContent(tabContent().textContent("Server")))\n                .addTab(tab("tabs-inset-system", "System")\n                        .addContent(tabContent().textContent("System")))\n                .addTab(tab("tabs-inset-network", "Network")\n                        .addContent(tabContent().textContent("Network"))))\n        .add(div().css(util("mt-md"))\n                .add(boxToggle.onChange((event, component, value) -> tabs.box(value))))\n        .element();',"tabs-nav":'div()\n        .add(tabs(nav())\n                .addTab(tab(a(), "tabs-nav-users", "Users")\n                        .href("#item-0")\n                        .addContent(tabContent().textContent("Users")))\n                .addTab(tab(a(), "tabs-nav-containers", "Containers")\n                        .href("#item-1")\n                        .addContent(tabContent().textContent("Containers")))\n                .addTab(tab(a(), "tabs-nav-database", "Database")\n                        .href("#item-2")\n                        .addContent(tabContent().textContent("Database")))\n                .addTab(tab(a(), "tabs-nav-disabled", "Disabled")\n                        .href("#item-3")\n                        .disabled()\n                        .addContent(tabContent().textContent("Disabled")))\n                .addTab(tab(a(), "tabs-nav-disabled-aria", "ARIA Disabled")\n                        .href("#item-4")\n                        .ariaDisabled()\n                        .addContent(tabContent().textContent("ARIA Disabled")))\n                .addTab(tab(a(), "tabs-secondary-network", "Network")\n                        .href("#item-5")\n                        .addContent(tabContent().textContent("Network"))))\n        .element()',"tabs-overflow-default":'Tabs tabs = tabs();\nCheckbox boxToggle = checkbox("tabs-overflow-default-box", "tabs-overflow-default-box", "Box");\nreturn div()\n        .add(tabs\n                .addTab(tab("tabs-overflow-default-users", "Users")\n                        .addContent(tabContent().textContent("Users")))\n                .addTab(tab("tabs-overflow-default-containers", "Containers")\n                        .addContent(tabContent().textContent("Containers")))\n                .addTab(tab("tabs-overflow-default-database", "Database")\n                        .addContent(tabContent().textContent("Database")))\n                .addTab(tab("tabs-overflow-default-server", "Server")\n                        .addContent(tabContent().textContent("Server")))\n                .addTab(tab("tabs-overflow-default-system", "System")\n                        .addContent(tabContent().textContent("System")))\n                .addTab(tab("tabs-overflow-default-network", "Network")\n                        .addContent(tabContent().textContent("Network")))\n                .addTabs(range(7, 20).boxed().collect(toList()), index ->\n                        tab("tabs-overflow-default-" + index, "Tab item " + index)\n                                .addContent(tabContent().textContent("Tab section " + index))))\n        .add(div().css(util("mt-md"))\n                .add(boxToggle.onChange((event, component, value) -> tabs.box(value))))\n        .element();',"tabs-overflow-hz":'div()\n        .add(tabs().overflowHorizontal().showTabCount()\n                .addTab(tab("tabs-overflow-hz-users", "Users")\n                        .addContent(tabContent().textContent("Users")))\n                .addTab(tab("tabs-overflow-hz-containers", "Containers")\n                        .addContent(tabContent().textContent("Containers")))\n                .addTab(tab("tabs-overflow-hz-database", "Database")\n                        .addContent(tabContent().textContent("Database")))\n                .addTab(tab("tabs-overflow-hz-server", "Server")\n                        .addContent(tabContent().textContent("Server")))\n                .addTab(tab("tabs-overflow-hz-system", "System")\n                        .addContent(tabContent().textContent("System")))\n                .addTab(tab("tabs-overflow-hz-network", "Network")\n                        .addContent(tabContent().textContent("Network")))\n                .addTabs(range(7, 20).boxed().collect(toList()), index ->\n                        tab("tabs-overflow-hz-" + index, "Tab item " + index)\n                                .addContent(tabContent().textContent("Tab section " + index))))\n        .element()',"tabs-page-insets":'Tabs tabs = tabs();\nCheckbox boxToggle = checkbox("tabs-page-insets-box", "tabs-page-insets-box", "Box");\nreturn div()\n        .add(tabs.pageInsets()\n                .addTab(tab("tabs-page-insets-users", "Users")\n                        .addContent(tabContent().textContent("Users")))\n                .addTab(tab("tabs-page-insets-containers", "Containers")\n                        .addContent(tabContent().textContent("Containers")))\n                .addTab(tab("tabs-page-insets-database", "Database")\n                        .addContent(tabContent().textContent("Database")))\n                .addTab(tab("tabs-page-insets-server", "Server")\n                        .addContent(tabContent().textContent("Server")))\n                .addTab(tab("tabs-page-insets-system", "System")\n                        .addContent(tabContent().textContent("System")))\n                .addTab(tab("tabs-page-insets-network", "Network")\n                        .addContent(tabContent().textContent("Network"))))\n        .add(div().css(util("mt-md"))\n                .add(boxToggle.onChange((event, component, value) -> tabs.box(value))))\n        .element();',"tabs-promise":'div()\n        .add(tabs().noInitialSelection()\n                .addTabs(range(1, 4).boxed().collect(toList()), index ->\n                        tab("tabs-promise-" + index, "Tab item " + index)\n                                .addContent(tabs -> new Promise<>((res, rej) -> setTimeout(__ ->\n                                                res.onInvoke(tabContent().textContent("Tab section " + index)),\n                                        1234 + new Random().nextInt(3456))))))\n        .element()',"tabs-secondary-nav":'div()\n        .add(tabs(nav())\n                .addTab(tab(a(), "tabs-secondary-nav-users", "Users")\n                        .href("#item-0")\n                        .addContent(tabContent()\n                                .add(tabs(nav()).secondary()\n                                        .addTab(tab(a(), "secondary-tab-item-1", "Item 1")\n                                                .href("#item-00")\n                                                .addContent(tabContent().textContent("Item 1")))\n                                        .addTab(tab(a(), "secondary-tab-item-2", "Item 2")\n                                                .href("#item-01")\n                                                .addContent(tabContent().textContent("Item 2")))\n                                        .addTab(tab(a(), "secondary-tab-item-3", "Item 3")\n                                                .href("#item-02")\n                                                .addContent(tabContent().textContent("Item 3")))\n                                        .addTab(tab(a(), "secondary-tab-disabled", "Disabled")\n                                                .href("#item-03")\n                                                .disabled()\n                                                .addContent(tabContent().textContent("Disabled")))\n                                        .addTab(tab(a(), "secondary-tab-disabled-aria", "ARIA Disabled")\n                                                .href("#item-04")\n                                                .ariaDisabled()\n                                                .addContent(tabContent().textContent("ARIA Disabled")))\n                                        .addTab(tab(a(), "secondary-tab-item-6", "Item 6")\n                                                .href("#item-05")\n                                                .addContent(tabContent().textContent("Item 6"))))))\n                .addTab(tab(a(), "tabs-secondary-nav-containers", "Containers")\n                        .href("#item-1")\n                        .addContent(tabContent().textContent("Containers")))\n                .addTab(tab(a(), "tabs-secondary-nav-database", "Database")\n                        .href("#item-2")\n                        .addContent(tabContent().textContent("Database")))\n                .addTab(tab(a(), "tabs-secondary-nav-disabled", "Disabled")\n                        .href("#item-3")\n                        .disabled()\n                        .addContent(tabContent().textContent("Disabled")))\n                .addTab(tab(a(), "tabs-secondary-nav-disabled-aria", "ARIA Disabled")\n                        .href("#item-4")\n                        .ariaDisabled()\n                        .addContent(tabContent().textContent("ARIA Disabled")))\n                .addTab(tab(a(), "tabs-secondary-network", "Network")\n                        .href("#item-5")\n                        .addContent(tabContent().textContent("Network"))))\n        .element()',"tabs-secondary":'Tabs tabs = tabs();\nTabs secondaryTabs = tabs().secondary();\nCheckbox boxToggle = checkbox("tabs-secondary-box", "tabs-secondary-box", "Box");\nreturn div()\n        .add(tabs\n                .addTab(tab("tabs-secondary-users", "Users")\n                        .addContent(tabContent()\n                                .add(secondaryTabs\n                                        .addTabs(range(1, 12).boxed().collect(toList()), index ->\n                                                tab("secondary-tab-" + index, "Secondary tab item " + index)\n                                                        .addContent(tabContent()\n                                                                .textContent("Secondary tab section " + index))))))\n                .addTab(tab("tabs-secondary-containers", "Containers")\n                        .addContent(tabContent().textContent("Containers")))\n                .addTab(tab("tabs-secondary-database", "Database")\n                        .addContent(tabContent().textContent("Database")))\n                .addTab(tab("tabs-secondary-server", "Server")\n                        .addContent(tabContent().textContent("Server")))\n                .addTab(tab("tabs-secondary-system", "System")\n                        .addContent(tabContent().textContent("System")))\n                .addTab(tab("tabs-secondary-network", "Network")\n                        .addContent(tabContent().textContent("Network")))\n                .addTabs(range(7, 20).boxed().collect(toList()), index ->\n                        tab("tabs-secondary-" + index, "Tab item " + index)\n                                .addContent(tabContent().textContent("Tab section " + index))))\n        .add(div().css(util("mt-md"))\n                .add(boxToggle.onChange((event, component, value) -> tabs.box(value))))\n        .element();',"tabs-vertical":'Tabs tabs = tabs();\nCheckbox boxToggle = checkbox("tabs-vertical-box", "tabs-vertical-box", "Box");\nCheckbox lightToggle = checkbox("tabs-vertical-light", "tabs-vertical-light", "Light tabs");\nreturn div()\n        .add(tabs.vertical()\n                .addTab(tab("tabs-vertical-users", "Users")\n                        .addContent(tabContent().textContent("Users")))\n                .addTab(tab("tabs-vertical-containers", "Containers")\n                        .addContent(tabContent().textContent("Containers")))\n                .addTab(tab("tabs-vertical-database", "Database")\n                        .addContent(tabContent().textContent("Database")))\n                .addTab(tab("tabs-vertical-disabled", "Disabled")\n                        .disabled()\n                        .addContent(tabContent().textContent("Disabled")))\n                .addTab(tab("tabs-vertical-disabled-aria", "ARIA Disabled")\n                        .ariaDisabled()\n                        .addContent(tabContent().textContent("ARIA Disabled")))\n                .addTab(tab("tabs-vertical-disabled-aria-tt", "ARIA Disabled (Tooltip)")\n                        .ariaDisabled()\n                        .add(tooltip(\n                                "Aria-disabled tabs are like disabled tabs, but focusable. Allows for tooltip support."))\n                        .addContent(tabContent().textContent("ARIA Disabled (Tooltip)"))))\n        .add(div().css(util("mt-md"))\n                .add(boxToggle.onChange((event, component, value) -> tabs.box(value))))\n        .add(div().css(util("mt-sm"))\n                .add(lightToggle.onChange((event, component, value) -> tabs.lightTabs(value))))\n        .element();',"text-area-basic":'div()\n        .add(textArea("basic-text-area-0"))\n        .element()',"text-area-both":'div()\n        .add(textArea("horizontal-text-area-0").resize(both))\n        .element()',"text-area-disabled":'div()\n        .add(textArea("disabled-text-area-0").disabled())\n        .element()',"text-area-horizontal":'div()\n        .add(textArea("horizontal-text-area-0").resize(horizontal))\n        .element()',"text-area-invalid":'div()\n        .add(textArea("invalid-text-area-0").validated(error))\n        .element()',"text-area-readonly":'Checkbox plainToggle = checkbox("plain-toggle", "plain-toggle", "Plain read only variant");\nTextArea readOnlyTextArea = textArea("readonly-text-area-0", "read only text area example")\n        .readonly();\nreturn div()\n        .add(div().css(util("mb-sm"))\n                .add(plainToggle.onChange((e, c, value) -> readOnlyTextArea.plain(value))))\n        .add(readOnlyTextArea)\n        .element();',"text-area-validated":'final double[] handle = {0};\nHelperText helperText = helperText("Share your thoughts.");\nTextArea textArea = textArea("validated-text-area-0")\n        .onChange((e, ta, value) -> {\n            clearTimeout(handle[0]);\n            ta.validated(default_);\n            helperText.firstItem()\n                    .status(default_)\n                    .text("Validating...");\n            handle[0] = setTimeout(__ -> {\n                if (value.isEmpty()) {\n                    ta.validated(warning);\n                    helperText.firstItem()\n                            .status(warning)\n                            .text("You must have something to say");\n                } else {\n                    if (value.length() < 10) {\n                        ta.validated(error);\n                        helperText.firstItem()\n                                .status(error)\n                                .text("You\'re being too brief, please enter at least 10 characters.");\n                    } else {\n                        ta.validated(success);\n                        helperText.firstItem()\n                                .status(success)\n                                .text("Thanks for your comments!");\n                    }\n                }\n            }, 1234);\n        });\nreturn div()\n        .add(form()\n                .add(formGroup()\n                        .addLabel(formGroupLabel("Comments:"))\n                        .addControl(formGroupControl()\n                                .addControl(textArea)\n                                .addHelperText(helperText))))\n        .element();',"text-area-vertical":'div()\n        .add(textArea("vertical-text-area-0").resize(vertical))\n        .element()',"text-auto-size":'div()\n        .add(textArea("auto-size-text-area-0").autoResize())\n        .element()',"text-content-body":'div()\n        .add(textContent()\n                .add(p().textContent(LoremIpsum.paragraphs(5)))\n                .add(p()\n                        .add(LoremIpsum.paragraphs(3) + " ")\n                        .add(a("#").textContent(LoremIpsum.paragraph()))\n                        .add(" " + LoremIpsum.paragraphs(2)))\n                .add(blockquote().textContent(LoremIpsum.paragraphs(2)))\n                .add(small().textContent(LoremIpsum.paragraphs(3))))\n        .element()',"text-content-dl":'div()\n        .add(textContent()\n                .add(dl()\n                        .add(dt().textContent("Web"))\n                        .add(dd().textContent(\n                                "The part of the Internet that contains " + "websites and web pages"))\n                        .add(dt().textContent("HTML"))\n                        .add(dd().textContent("A markup language for creating web pages"))\n                        .add(dt().textContent("CSS"))\n                        .add(dd().textContent("A technology to make HTML look better"))))\n        .element()',"text-content-headings":'div()\n        .add(textContent()\n                .add(h(1, "Hello World"))\n                .add(h(2, "Second Level"))\n                .add(h(3, "Third Level"))\n                .add(h(4, "Forth Level"))\n                .add(h(5, "Fifth Level"))\n                .add(h(6, "Sixth Level")))\n        .element()',"text-content-ol":"div()\n        .add(textContent()\n                .add(ol()\n                        .add(li().textContent(LoremIpsum.words()))\n                        .add(li().textContent(LoremIpsum.words()))\n                        .add(li().textContent(LoremIpsum.words()))\n                        .add(li().textContent(LoremIpsum.words()))\n                        .add(li().textContent(LoremIpsum.words()))\n                        .add(li().textContent(LoremIpsum.words()))\n                        .add(li().textContent(LoremIpsum.words()))))\n        .element()","text-content-plain-list":'div()\n        .add(textContent()\n                .add(h(3, "Plain unordered list"))\n                .add(ul().css(modifier(plain))\n                        .add(li().textContent(LoremIpsum.words()))\n                        .add(li().textContent(LoremIpsum.words()))\n                        .add(li().add(LoremIpsum.words()))\n                        .add(li().add(LoremIpsum.words())))\n                .add(h(3, "Plain ordered list"))\n                .add(ol().css(modifier(plain))\n                        .add(li().textContent(LoremIpsum.words()))\n                        .add(li().textContent(LoremIpsum.words()))\n                        .add(li().textContent(LoremIpsum.words()))\n                        .add(li().textContent(LoremIpsum.words()))\n                        .add(li().textContent(LoremIpsum.words()))\n                        .add(li().textContent(LoremIpsum.words()))\n                        .add(li().textContent(LoremIpsum.words()))))\n        .element()',"text-content-ul":"div()\n        .add(textContent()\n                .add(ul()\n                        .add(li().textContent(LoremIpsum.words()))\n                        .add(li().textContent(LoremIpsum.words()))\n                        .add(li().add(LoremIpsum.words())\n                                .add(ul()\n                                        .add(li().textContent(LoremIpsum.words()))\n                                        .add(li().textContent(LoremIpsum.words()))))\n                        .add(li().add(LoremIpsum.words()))))\n        .element()","text-input-basic":'div()\n        .add(textInput("basic-text-input-0"))\n        .element()',"text-input-custom-icon-and-invalid":'div()\n        .add(textInput("custom-icon-and-invalid-text-input-0")\n                .validated(error)\n                .icon(fas("calendar")))\n        .element()',"text-input-custom-icon":'div()\n        .add(textInput("custom-icon-text-input-0").css(util("mb-sm"))\n                .icon(fas("calendar")))\n        .add(textInput("custom-icon-text-input-1")\n                .icon(fas("clock")))\n        .element()',"text-input-disabled":'div()\n        .add(textInput("disabled-text-input-0", "disabled text input example")\n                .disabled())\n        .element()',"text-input-invalid":'div()\n        .add(textInput("invalid-text-input-0").validated(error))\n        .element()',"text-input-readonly":'Checkbox plainToggle = checkbox("plain-toggle", "plain-toggle", "Plain read only variant");\nTextInput readOnlyTextInput = textInput("readonly-text-input-0", "read only text input example")\n        .readonly();\nreturn div()\n        .add(div().css(util("mb-sm"))\n                .add(plainToggle.onChange((e, c, value) -> readOnlyTextInput.plain(value))))\n        .add(readOnlyTextInput)\n        .element();',"tig-basic":'div()\n        .add(textInputGroup()\n                .addMain(textInputGroupMain("basic-text-input-group-0")))\n        .element()',"tig-disabled":'div()\n        .add(textInputGroup()\n                .addMain(textInputGroupMain("disabled-text-input-group-0")\n                        .value("Disabled"))\n                .disabled())\n        .element()',"tig-filters":'ObservableValue<Boolean> chipsPresent = ov(true);\nObservableValue<Boolean> textEntered = ov(false);\n\nTextInputGroup textInputGroup = textInputGroup();\nChipGroup chipGroup = chipGroup();\nCloseHandler<Chip> closeHandler = (event, chip) -> chipsPresent.set(!chipGroup.values().isEmpty());\nchipGroup.addChips(asList("one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten",\n        "eleven", "twelve"), text -> chip(text).onClose(closeHandler));\n\ntextInputGroup\n        .addMain(textInputGroupMain("tig-filters-0")\n                .addChipGroup(chipGroup)\n                .placeholder("Placeholder")\n                .onChange((e, tig, value) -> {\n                    textEntered.set(!value.isEmpty());\n                    if (Key.Enter.match(e) && !value.isEmpty()) {\n                        chipGroup.addChip(chip(value).onClose(closeHandler));\n                        tig.main().value("");\n                        chipsPresent.set(true);\n                        textEntered.set(false);\n                    }\n                }))\n        .addUtilities(textInputGroupUtilities(false)\n                .add(button().icon(times).plain()\n                        .on(click, e -> {\n                            chipGroup.clear();\n                            textInputGroup.main().value("");\n                            chipsPresent.set(false);\n                            textEntered.change(false);\n                        })));\n\nchipsPresent.subscribe((current, previous) -> {\n    setVisible(chipGroup, current);\n    if (current) {\n        textInputGroup.main().removeIcon();\n    } else {\n        textInputGroup.main().icon(search);\n        setVisible(textInputGroup.utilities(), textEntered.get());\n    }\n});\ntextEntered.subscribe((current, previous) -> {\n    if (current) {\n        setVisible(textInputGroup.utilities(), true);\n    } else {\n        setVisible(textInputGroup.utilities(), chipsPresent.get());\n    }\n});\n\nreturn div()\n        .add(textInputGroup)\n        .element();',"tig-utilities-and-icon":'TextInputGroup textInputGroup = textInputGroup();\ntextInputGroup\n        .addMain(textInputGroupMain("tig-utilities-and-icon-0")\n                .icon(search)\n                .placeholder("Placeholder")\n                .onChange((e, tig, value) -> setVisible(tig.utilities(), !value.isEmpty())))\n        .addUtilities(textInputGroupUtilities()\n                .add(button().icon(times).plain()\n                        .on(click, e -> textInputGroup.main().value("", true))));\nreturn div()\n        .add(textInputGroup)\n        .element();',"title-custom-sizes":'div()\n        .add(textContent()\n                .add(title(1, _4xl, "h1 as 4xl"))\n                .add(title(2, _3xl, "h2 as 3xl"))\n                .add(title(3, _2xl, "h3 as 2xl"))\n                .add(title(4, xl, "h4 as xl"))\n                .add(title(5, lg, "h5 has lg"))\n                .add(title(6, md, "h6 as md")))\n        .element()',"title-default-sizes":'div()\n        .add(textContent()\n                .add(title(1, "h1 defaults to 2xl"))\n                .add(title(2, "h2 defaults to xl"))\n                .add(title(3, "h3 defaults to lg"))\n                .add(title(4, "h4 defaults to md"))\n                .add(title(5, "h5 defaults to md"))\n                .add(title(6, "h6 defaults to md")))\n        .element()',"toggle-group-compact":'div()\n        .add(toggleGroup(multi).compact()\n                .addItem(toggleGroupItem("toggle-group-compact-0", "Option 1"))\n                .addItem(toggleGroupItem("toggle-group-compact-1", "Option 2"))\n                .addItem(toggleGroupItem("toggle-group-compact-2", "Option 3").disabled()))\n        .element()',"toggle-group-icon":'div()\n        .add(toggleGroup(multi)\n                .addItem(toggleGroupItem("toggle-group-icon-0").icon(copy))\n                .addItem(toggleGroupItem("toggle-group-icon-1").icon(undo))\n                .addItem(toggleGroupItem("toggle-group-icon-2").icon(shareSquare)))\n        .element()',"toggle-group-multiple":'Button disableAll = button("Disable all").primary();\nToggleGroup toggleGroup = toggleGroup(multi);\n\nreturn div()\n        .add(stack().gutter()\n                .addItem(stackItem()\n                        .add(disableAll.onClick((event, button) -> {\n                            toggleGroup.disabled(!toggleGroup.isDisabled());\n                            button.text(toggleGroup.isDisabled() ? "Enable back" : "Disable all");\n                        })))\n                .addItem(stackItem()\n                        .add(toggleGroup\n                                .addItem(toggleGroupItem("toggle-group-multiple-0", "Option 1"))\n                                .addItem(toggleGroupItem("toggle-group-multiple-1", "Option 2"))\n                                .addItem(toggleGroupItem("toggle-group-multiple-2", "Option 3").disabled()))))\n        .element();',"toggle-group-single":'div()\n        .add(toggleGroup(single)\n                .addItems(range(1, 4).boxed().collect(toList()), index ->\n                        toggleGroupItem(build("toggle-group-single", String.valueOf(index)),\n                                "Option " + index)))\n        .element()',"toggle-group-text-icon":'div()\n        .add(toggleGroup(multi)\n                .addItem(toggleGroupItem("toggle-group-text-icon-0", "Copy").icon(copy))\n                .addItem(toggleGroupItem("toggle-group-text-icon-1", "Undo").icon(undo))\n                .addItem(toggleGroupItem("toggle-group-text-icon-2", "Share").icon(shareSquare)))\n        .element()',"tooltip-auto":'Button button = button("Tooltip");\nonAttach(button, mr -> {\n    ScrollIntoViewOptions options = ScrollIntoViewOptions.create();\n    options.setBlock("center");\n    options.setInline("center");\n    button.element().scrollIntoView(options);\n});\nreturn div().style("width", "720px")\n        .add(div().css("pfj-tooltip-box")\n                .add(button.css("pfj-tooltip-button").primary()\n                        .id("tooltip-options-button"))\n                .add(tooltip(By.id("tooltip-options-button"), LoremIpsum.words())\n                        .placement(auto)))\n        .element();',"tooltip-basic":'div().style("margin", "100px")\n        .add(button("I have a tooltip").primary()\n                .id("tooltip-basic-button"))\n        .add(tooltip(By.id("tooltip-basic-button"), LoremIpsum.words()))\n        .element()',"tooltip-dynamic":'Tooltip tooltip = tooltip(By.id("tooltip-dynamic-button"), "Copy to clipboard")\n        .onClose((e, t) -> t.text("Copy to clipboard"))\n        .appendToBody();\nreturn div().style("margin", "100px")\n        .add(button().icon(copy).plain()\n                .aria(label, "Copy")\n                .id("tooltip-dynamic-button")\n                .onClick((e, b) -> tooltip.text("Successfully copied to clipboard!")))\n        .element();',"truncate-default":'div().css("truncate-example-resize")\n        .add(truncate(LoremIpsum.words()))\n        .element()',"truncate-middle":'div().css("truncate-example-resize")\n        .add(truncate("redhat_logo_black_and_white_reversed_simple_with_fedora_container.zip", middle))\n        .element()',"truncate-start":'div().css("truncate-example-resize")\n        .add(truncate(LoremIpsum.words(), start))\n        .element()'};const q=new Map;for(const[e,t]of Object.entries(j)){let n=e.replace("../../target/code/","").replace(".java","");q.set(n,t)}window.PatternFlyCode={code:q};
//# sourceMappingURL=index.151c57f3.js.map
